{"version":3,"sources":["pages/HomePage/HomePage.tsx","components/common/MenuListItem.tsx","components/triggers/DialogTrigger.tsx","services/videosService.ts","utils/numbers.ts","components/common/SingleChoice/SingleChoiceItem.tsx","components/common/SingleChoice/SingleChoiceList.tsx","components/triggers/SnackbarTrigger.tsx","components/core/Videos/VideoItem/VideoThumbnail.tsx","components/listItems/AddToQueueListItem.tsx","components/listItems/SaveToWatchLaterListItem.tsx","components/listItems/SaveToPlaylistListItem.tsx","components/listItems/NotInterestedListItem.tsx","components/listItems/NotRecommendListItem.tsx","components/core/Videos/VideoItem/VideoMenu.tsx","components/core/Videos/VideoItem/VideoPopoverButton.tsx","components/core/Videos/VideoItem/VideoItem.tsx","components/core/Videos/VideoItem/index.tsx","components/core/Videos/VideosGrid/index.tsx","components/core/Videos/VideosList/index.tsx","components/core/Videos/Videos.tsx","components/listItems/CheckboxListItem.tsx","components/common/MultipleChoice.tsx","components/core/PlaylistsMultipleChoice.tsx","components/triggers/SaveToPlaylistTrigger.tsx","components/common/SingleChoice/index.tsx","components/listItems/ReportListItem.tsx"],"names":["useStyles","makeStyles","theme","createStyles","main","padding","spacing","HomePage","classes","className","initialVariant","title","onLoad","generateGridVideos","MenuListItem","props","listItemIcon","icon","listItemSecondaryAction","endIcon","size","onClick","dense","button","selected","primary","content","actions","borderTop","palette","divider","DialogTrigger","maxWidth","renderTrigger","renderActions","useState","open","setOpen","handleToggle","closeButton","edge","dialogAppBar","endAction","dialogContent","dialogActions","dialog","onClose","a","async","Array","fill","map","item","index","id","faker","lorem","sentence","replace","duration","Math","round","random","videoUrl","previewUrl","channelAvatarUrl","image","avatar","channelName","company","companyName","channelUrl","views","verified","createdAt","date","past","generateListVideos","isNew","isRecommended","toStringNumber","number","fractionDigits","toFixed","SingleChoiceItem","label","variant","value","checked","Radio","style","opacity","checkedIcon","ListItem","ListItemIcon","ListItemText","SingleChoiceList","itemToProps","initialValue","onChange","setValue","List","Items","renderLoadMore","renderItem","model","SnackbarTrigger","handleClose","snackbar","Snackbar","anchorOrigin","horizontal","vertical","autoHideDuration","message","action","Button","color","trigger","buttonProps","position","right","backgroundColor","grey","common","white","minWidth","fullSizeProps","left","top","bottom","margin","root","height","borderRadius","shape","overflow","display","link","width","playArrowIcon","timeStatus","alignItems","justifyContent","watchLater","SaveToPlaylistTrigger","VideoThumbnail","src","to","durationSeconds","Typography","component","Date","toLocaleTimeString","substring","saveToWatchLaterButton","Tooltip","placement","aria-label","fontSize","saveToPlaylistTrigger","preview","alt","clsx","AddToQueueListItem","SaveToWatchLaterListItem","showSnackbar","SaveToPlaylistListItem","showPlaylists","NotInterestedListItem","NotRecommendListItem","VideoMenu","primaryList","secondaryList","ReportListItem","Divider","VideoPopoverButton","PopoverButton","renderContent","root_variant_vertical","flexDirection","listItem","paddingLeft","paddingTop","paddingBottom","container","listStyle","listItemText","marginTop","marginBottom","primaryText","textDecoration","lineHeight","secondaryText","whiteSpace","textOverflow","checkIcon","marginLeft","verticalAlign","labelText","typography","caption","A100","A400","captionText","media","flex","media_variant_vertical","minHeight","media_variant_horizontal","marginRight","VideoItem","primaryTextTo","imageSrc","avatarSrc","secondaryTextTo","showCheckIcon","Link","secondary","ListItemAvatar","Avatar","viewsNode","labelTextNode","captionTextNode","createdAtNode","formatDistance","videoThumbnail","ContainerProps","ListItemSecondaryAction","VideosGrid","Grid","xl","lg","md","sm","xs","key","VideosList","disablePadding","toolbarAside","Videos","setVariant","toolbar","Toolbar","disableGutters","IconButton","videos","CheckboxListItem","secondaryAction","CheckboxProps","Boolean","setChecked","toggle","Checkbox","disableRipple","MultipleChoiceList","PlaylistsMultipleChoice","MultipleChoice","generatePlaylists","startIcon","SingleChoice","reason"],"mappings":"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","file":"static/js/9.7fba23e9.chunk.js","sourcesContent":["import React from \"react\";\nimport {createStyles, Theme} from \"@material-ui/core\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport Videos from \"../../components/core/Videos/Videos\";\nimport {generateGridVideos} from \"../../services/videosService\";\n\nconst useStyles = makeStyles((theme: Theme) => createStyles({\n    main: {\n        padding: theme.spacing(0, 2, 2, 2)\n    }\n}));\n\nfunction HomePage() {\n    const classes = useStyles();\n\n    return (\n        <>\n            <main className={classes.main}>\n                <Videos\n                    initialVariant=\"grid\"\n                    title=\"Recommended\"\n                    onLoad={generateGridVideos}\n                />\n            </main>\n        </>\n    )\n}\n\nexport default HomePage;\n","import ListItem, {ListItemProps} from \"@material-ui/core/ListItem\";\nimport React from \"react\";\nimport {ListItemIcon, ListItemIconProps, ListItemSecondaryActionProps, ListItemTextProps} from \"@material-ui/core\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\nimport IconButton from \"@material-ui/core/IconButton\";\n\nexport interface MenuListItemProps {\n    title: ListItemTextProps['primary'];\n    icon?: ListItemIconProps['children'];\n    endIcon?: ListItemSecondaryActionProps['children'];\n    selected?: ListItemProps['selected'];\n    onClick?: () => void;\n}\n\nfunction MenuListItem(props: MenuListItemProps) {\n    const listItemIcon = props.icon ? (\n        <ListItemIcon>\n            {props.icon}\n        </ListItemIcon>\n    ) : null;\n\n    const listItemSecondaryAction = props.endIcon ? (\n        <ListItemSecondaryAction>\n            <IconButton\n                size=\"small\"\n                onClick={props.onClick}\n            >\n                {props.endIcon}\n            </IconButton>\n        </ListItemSecondaryAction>\n    ) : null;\n\n    return (\n        <ListItem\n            dense\n            button\n            selected={props.selected}\n            onClick={props.onClick}\n        >\n            {listItemIcon}\n            <ListItemText\n                primary={props.title}\n            />\n            {listItemSecondaryAction}\n        </ListItem>\n    )\n}\n\nexport default MenuListItem;\n","import React, {ReactElement, ReactNode, useState} from \"react\";\nimport {createStyles, Dialog, DialogProps, Theme} from \"@material-ui/core\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport PopoverAppBar, {PopoverAppBarProps} from \"../core/PopoverAppBar\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport {makeStyles} from \"@material-ui/core/styles\";\n\nexport interface DialogTriggerProps {\n    content: DialogProps['children'];\n    renderTrigger: (onClick: VoidFunction) => ReactElement;\n    renderActions?: (onClose: VoidFunction) => ReactNode;\n    title?: PopoverAppBarProps['title'];\n    maxWidth?: DialogProps['maxWidth'];\n}\n\nconst useStyles = makeStyles((theme: Theme) => createStyles({\n    content: {\n        padding: 0\n    },\n    actions: {\n        borderTop: `1px solid ${theme.palette.divider}`\n    }\n}));\n\nfunction DialogTrigger({\n    title,\n    maxWidth,\n    renderTrigger,\n    content,\n    renderActions\n}: DialogTriggerProps) {\n    const classes = useStyles();\n    const [open, setOpen] = useState(false);\n    const handleToggle = () => setOpen(!open);\n\n    const closeButton = (\n        <IconButton\n            edge=\"end\"\n            onClick={handleToggle}\n        >\n            <CloseIcon />\n        </IconButton>\n    );\n\n    const dialogAppBar = title ? (\n        <PopoverAppBar\n            title={title}\n            endAction={closeButton}\n        />\n    ) : null;\n\n    const dialogContent = (\n        <DialogContent className={classes.content}>\n            {content}\n        </DialogContent>\n    );\n\n    const dialogActions = renderActions ? (\n        <DialogActions className={classes.actions}>\n            {renderActions(() => setOpen(false))}\n        </DialogActions>\n    ) : null;\n\n    const dialog = (\n        <Dialog\n            open={open}\n            onClose={handleToggle}\n            maxWidth={maxWidth}\n        >\n            {dialogAppBar}\n            {dialogContent}\n            {dialogActions}\n        </Dialog>\n    );\n\n    const button = renderTrigger(handleToggle);\n\n    return (\n        <>\n            {button}\n            {dialog}\n        </>\n    )\n}\n\nexport default DialogTrigger;\n","import faker from \"faker/locale/en\";\nimport {VideoModel} from \"../models/VideoModel\";\n\nexport const generateGridVideos = async (): Promise<VideoModel[]> => Array(12)\n    .fill(null)\n    .map((item, index) => ({\n        id: `${index}`,\n        title: faker.lorem.sentence().replace('.', ''),\n        duration: Math.round(Math.random() * 36000000),\n        videoUrl: `/watch?v=${index}`,\n        previewUrl: 'https://invalid_url',\n        channelAvatarUrl: faker.image.avatar(),\n        channelName: faker.company.companyName(),\n        channelUrl: `/channel/${index}`,\n        views: Math.round(Math.random() * 999999999),\n        verified: Math.random() > 0.5,\n        createdAt: faker.date.past()\n    }));\n\nexport const generateListVideos = async (): Promise<VideoModel[]> => Array(12)\n    .fill(null)\n    .map((item, index) => ({\n        id: `${index}`,\n        title: faker.lorem.sentence().replace('.', ''),\n        duration: Math.round(Math.random() * 36000000),\n        videoUrl: `/watch?v=${index}`,\n        previewUrl: 'https://invalid_url',\n        channelName: faker.company.companyName(),\n        channelUrl: `/channel/${index}`,\n        isNew: index % 2 === 0,\n        isRecommended: index % 2 === 1,\n        views: Math.round(Math.random() * 999999999),\n        verified: Math.random() > 0.5,\n        createdAt: faker.date.past()\n    }));\n","export function toStringNumber(number: number, fractionDigits = 1) {\n    return (\n        (number >= 1000000000) ? `${(number / 1000000000).toFixed(fractionDigits)}B` :\n        (number >= 1000000) ? `${(number / 1000000).toFixed(fractionDigits)}M` :\n        (number >= 1000) ? `${(number / 1000).toFixed(fractionDigits)}K` :\n        number\n    );\n}\n","import ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport CheckIcon from \"@material-ui/icons/Check\";\nimport React from \"react\";\nimport {Radio} from \"@material-ui/core\";\n\nexport interface SingleChoiceItemBaseProps {\n    label: string;\n    value: string;\n}\n\nexport interface SingleChoiceItemProps extends SingleChoiceItemBaseProps {\n    variant?: 'check' | 'radio';\n    checked?: boolean;\n    onClick?: () => void;\n}\n\nfunction SingleChoiceItem({\n    label,\n    value,\n    variant ,\n    checked,\n    onClick\n}: SingleChoiceItemProps) {\n    const icon = variant === 'check' ? (\n        <Radio\n            size=\"small\"\n            checked={checked}\n            icon={<CheckIcon style={{opacity: 0}} />}\n            checkedIcon={<CheckIcon />}\n        />\n    ) : (\n        <Radio\n            checked={checked}\n        />\n    );\n\n    return (\n        <ListItem\n            dense\n            button\n            onClick={onClick}\n        >\n            <ListItemIcon>\n                {icon}\n            </ListItemIcon>\n            <ListItemText\n                primary={label}\n            />\n        </ListItem>\n    )\n}\n\nexport default SingleChoiceItem;\n","import React, {useState} from \"react\";\nimport {List} from \"@material-ui/core\";\nimport Items, {ItemsProps} from \"../Items\";\nimport SingleChoiceItem, {SingleChoiceItemBaseProps, SingleChoiceItemProps} from \"./SingleChoiceItem\";\n\nexport interface SingleChoiceListProps<T = any> {\n    onLoad: ItemsProps['onLoad'];\n    itemToProps: (model: any) => SingleChoiceItemBaseProps;\n    variant?: SingleChoiceItemProps['variant'];\n    initialValue?: SingleChoiceItemProps['value'];\n    onChange?: (item: SingleChoiceItemBaseProps) => void;\n}\n\nfunction SingleChoiceList({\n    variant,\n    onLoad,\n    itemToProps,\n    initialValue = '',\n    onChange\n}: SingleChoiceListProps) {\n    const [value, setValue] = useState(initialValue);\n\n    const renderItem = (model: any) => {\n        const item = itemToProps(model);\n        return (\n            <SingleChoiceItem\n                {...item}\n                variant={variant}\n                checked={value === item.value}\n                onClick={() => {\n                    setValue(item.value);\n                    if (onChange) onChange(item);\n                }}\n            />\n        )\n    };\n\n    return (\n        <List>\n            <Items\n                renderLoadMore={null}\n                renderItem={renderItem}\n                onLoad={onLoad}\n            />\n        </List>\n    );\n}\n\nexport default SingleChoiceList;\n","import React, {ReactElement, useState} from \"react\";\nimport {Snackbar, SnackbarProps} from \"@material-ui/core\";\nimport Button from \"@material-ui/core/Button\";\n\nexport interface SnackbarTriggerProps {\n    message: SnackbarProps['message'];\n    renderTrigger: (onClick: VoidFunction) => ReactElement;\n}\n\nfunction SnackbarTrigger(props: SnackbarTriggerProps) {\n    const [open, setOpen] = useState(false);\n    const handleOpen = () => setOpen(true);\n    const handleClose = () => setOpen(false);\n\n    const snackbar = (\n        <Snackbar\n            anchorOrigin={{\n                horizontal: 'left',\n                vertical: 'bottom'\n            }}\n            open={open}\n            autoHideDuration={5000}\n            message={props.message}\n            onClose={handleClose}\n            action={\n                <Button\n                    color=\"secondary\"\n                    size=\"small\"\n                    onClick={handleClose}\n                >\n                    UNDO\n                </Button>\n            }\n        />\n    );\n\n    const trigger = props.renderTrigger(handleOpen);\n\n    return (\n        <>\n            {trigger}\n            {snackbar}\n        </>\n    )\n}\n\nexport default SnackbarTrigger;\n","import React from \"react\";\nimport {createStyles, makeStyles, Theme} from \"@material-ui/core/styles\";\nimport PlayArrowIcon from \"@material-ui/icons/PlayArrow\";\nimport clsx from \"clsx\";\nimport Typography from \"@material-ui/core/Typography\";\nimport WatchLaterIcon from \"@material-ui/icons/WatchLater\";\nimport PlaylistPlayIcon from \"@material-ui/icons/PlaylistPlay\";\nimport Button from \"@material-ui/core/Button\";\nimport {CreateCSSProperties} from \"@material-ui/styles/withStyles\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport {Link} from \"react-router-dom\";\nimport SaveToPlaylistTrigger from \"../../../triggers/SaveToPlaylistTrigger\";\nimport SnackbarTrigger from \"../../../triggers/SnackbarTrigger\";\n\nconst useStyles = makeStyles((theme: Theme) => {\n    const buttonProps: CreateCSSProperties = {\n        position: 'absolute',\n        right: theme.spacing(1),\n        backgroundColor: theme.palette.grey[\"900\"],\n        color: theme.palette.common.white,\n        minWidth: 'auto',\n    };\n\n    const fullSizeProps: CreateCSSProperties = {\n        position: 'absolute',\n        left: 0,\n        right: 0,\n        top: 0,\n        bottom: 0,\n        margin: 'auto'\n    };\n\n    return createStyles({\n        root: {\n            position: 'relative',\n            height: 104,\n            borderRadius: theme.shape.borderRadius,\n            overflow: 'hidden',\n            backgroundColor: theme.palette.grey[\"800\"],\n            color: theme.palette.common.white,\n            '&:not(:hover) [aria-label=\"button\"]': {\n                display: 'none'\n            }\n        },\n        link: {\n            ...fullSizeProps\n        },\n        image: {\n            ...fullSizeProps,\n            width: '100%',\n        },\n        playArrowIcon: {\n            color: theme.palette.common.white,\n            ...fullSizeProps,\n        },\n        timeStatus: {\n            display: 'inline-flex',\n            alignItems: 'center',\n            justifyContent: 'center',\n            position: 'absolute',\n            padding: theme.spacing(.125, .5),\n            bottom: theme.spacing(1),\n            right: theme.spacing(1),\n            borderRadius: theme.shape.borderRadius,\n            backgroundColor: theme.palette.grey[\"900\"],\n            color: theme.palette.common.white\n        },\n        watchLater: {\n            ...buttonProps,\n            top: theme.spacing(1),\n        },\n        SaveToPlaylistTrigger: {\n            ...buttonProps,\n            top: theme.spacing(5.25),\n        }\n    });\n});\n\nexport interface VideoThumbnailProps {\n    src: string;\n    to: string;\n    durationSeconds: number;\n    className?: string;\n    [key: string]: any;\n}\n\nfunction VideoThumbnail({\n    src,\n    to,\n    durationSeconds,\n    className,\n    style,\n    ...otherProps\n}: VideoThumbnailProps) {\n    const classes = useStyles();\n\n    const timeStatus = (\n        <Typography\n            className={classes.timeStatus}\n            variant=\"caption\"\n            component=\"span\"\n        >\n            {new Date(durationSeconds).toLocaleTimeString().substring(3)}\n        </Typography>\n    );\n\n    const saveToWatchLaterButton = (\n        <SnackbarTrigger\n            message={'Saved to \"Watch later\"'}\n            renderTrigger={onClick => (\n                <Tooltip\n                    title=\"Watch later\"\n                    placement=\"left\"\n                >\n                    <Button\n                        className={classes.watchLater}\n                        size=\"small\"\n                        aria-label=\"button\"\n                        onClick={onClick}\n                    >\n                        <WatchLaterIcon\n                            fontSize=\"small\"\n                        />\n                    </Button>\n                </Tooltip>\n            )}\n        />\n    );\n\n    const saveToPlaylistTrigger = (\n        <SaveToPlaylistTrigger\n            renderTrigger={onClick => (\n                <Tooltip\n                    title=\"Save to playlist\"\n                    placement=\"left\"\n                    aria-label=\"button\"\n                >\n                    <Button\n                        className={classes.SaveToPlaylistTrigger}\n                        size=\"small\"\n                        onClick={onClick}\n                    >\n                        <PlaylistPlayIcon\n                            fontSize=\"small\"\n                        />\n                    </Button>\n                </Tooltip>\n            )}\n        />\n    );\n\n    const preview = (\n        <Link\n            className={classes.link}\n            to={to}\n        >\n            <img\n                className={classes.image}\n                src={src}\n                alt=\"\"\n            />\n            <PlayArrowIcon\n                fontSize=\"large\"\n                aria-label=\"button\"\n                className={classes.playArrowIcon}\n            />\n        </Link>\n    );\n\n    return (\n        <div className={clsx(classes.root, className)}>\n            {preview}\n            {saveToWatchLaterButton}\n            {saveToPlaylistTrigger}\n            {timeStatus}\n        </div>\n    )\n}\n\nexport default VideoThumbnail;\n","import React from \"react\";\nimport MenuListItem, {MenuListItemProps} from \"../common/MenuListItem\";\nimport PlaylistPlayIcon from \"@material-ui/icons/PlaylistPlay\";\n\nexport interface AddToQueueListItemProps {\n    onClick?: MenuListItemProps['onClick'];\n}\n\nfunction AddToQueueListItem(props: AddToQueueListItemProps) {\n    return (\n        <MenuListItem\n            title=\"Add to queue\"\n            icon={<PlaylistPlayIcon />}\n            onClick={props.onClick}\n        />\n    )\n}\n\nexport default AddToQueueListItem;\n","import React from \"react\";\nimport MenuListItem, {MenuListItemProps} from \"../common/MenuListItem\";\nimport WatchLaterIcon from \"@material-ui/icons/WatchLater\";\nimport SnackbarTrigger, {SnackbarTriggerProps} from \"../triggers/SnackbarTrigger\";\n\nexport interface SaveToWatchLaterListItemProps {\n    onClick?: MenuListItemProps['onClick'];\n}\n\nfunction SaveToWatchLaterListItem({ onClick }: SaveToWatchLaterListItemProps) {\n    const renderTrigger: SnackbarTriggerProps['renderTrigger'] = showSnackbar => (\n        <MenuListItem\n            title={'Save to \"Watch later\"'}\n            icon={<WatchLaterIcon />}\n            onClick={() => {\n                if (onClick) onClick();\n                showSnackbar();\n            }}\n        />\n    );\n\n    return (\n        <SnackbarTrigger\n            message={'Saved to \"Watch later\"'}\n            renderTrigger={renderTrigger}\n        />\n    )\n}\n\nexport default SaveToWatchLaterListItem;\n","import React from \"react\";\nimport MenuListItem, {MenuListItemProps} from \"../common/MenuListItem\";\nimport PlaylistAddIcon from \"@material-ui/icons/PlaylistAdd\";\nimport SaveToPlaylistTrigger, {SaveToPlaylistTriggerProps} from \"../triggers/SaveToPlaylistTrigger\";\n\nexport interface SaveToPlaylistListItemProps {\n    onClick?: MenuListItemProps['onClick'];\n}\n\nfunction SaveToPlaylistListItem({ onClick }: SaveToPlaylistListItemProps) {\n    const renderTrigger: SaveToPlaylistTriggerProps['renderTrigger'] = (showPlaylists) => (\n        <MenuListItem\n            title={'Save to playlist'}\n            icon={<PlaylistAddIcon />}\n            onClick={() => {\n                showPlaylists();\n                if (onClick) onClick();\n            }}\n        />\n    );\n\n    return (\n        <SaveToPlaylistTrigger\n            renderTrigger={renderTrigger}\n        />\n    )\n}\n\nexport default SaveToPlaylistListItem;\n","import React from \"react\";\nimport MenuListItem from \"../common/MenuListItem\";\nimport NotInterestedIcon from \"@material-ui/icons/NotInterested\";\n\nfunction NotInterestedListItem() {\n    return (\n        <MenuListItem\n            title=\"Not interested\"\n            icon={<NotInterestedIcon />}\n        />\n    )\n}\n\nexport default NotInterestedListItem;\n","import React from \"react\";\nimport MenuListItem from \"../common/MenuListItem\";\nimport RemoveCircleOutlineIcon from \"@material-ui/icons/RemoveCircleOutline\";\n\nfunction NotRecommendListItem() {\n    return (\n        <MenuListItem\n            title=\"Don't recommend channel\"\n            icon={<RemoveCircleOutlineIcon />}\n        />\n    )\n}\n\nexport default NotRecommendListItem;\n","import React from \"react\";\nimport Divider from \"@material-ui/core/Divider\";\nimport List from \"@material-ui/core/List\";\nimport AddToQueueListItem from \"../../../listItems/AddToQueueListItem\";\nimport SaveToWatchLaterListItem from \"../../../listItems/SaveToWatchLaterListItem\";\nimport SaveToPlaylistListItem from \"../../../listItems/SaveToPlaylistListItem\";\nimport NotInterestedListItem from \"../../../listItems/NotInterestedListItem\";\nimport NotRecommendListItem from \"../../../listItems/NotRecommendListItem\";\nimport ReportListItem from \"../../../listItems/ReportListItem\";\n\nfunction VideoMenu() {\n    const primaryList = (\n        <List>\n            <AddToQueueListItem/>\n            <SaveToWatchLaterListItem/>\n            <SaveToPlaylistListItem/>\n        </List>\n    );\n\n    const secondaryList = (\n        <List>\n            <NotInterestedListItem/>\n            <NotRecommendListItem/>\n            <ReportListItem/>\n        </List>\n    );\n\n    return (\n        <div>\n            {primaryList}\n            <Divider />\n            {secondaryList}\n        </div>\n    )\n}\n\nexport default VideoMenu;\n","import React from \"react\";\nimport VideoMenu from \"./VideoMenu\";\nimport PopoverButton from \"../../../buttons/PopoverButton\";\n\nfunction VideoPopoverButton() {\n    return (\n        <PopoverButton\n            edge=\"end\"\n            renderContent={() => <VideoMenu />}\n        />\n    )\n}\n\nexport default VideoPopoverButton;\n","import React, {ReactNode} from \"react\";\nimport {Link} from \"react-router-dom\";\nimport clsx from \"clsx\";\nimport {formatDistance} from \"date-fns\";\nimport {createStyles, makeStyles, Theme} from \"@material-ui/core/styles\";\nimport {AvatarProps, ListItem} from \"@material-ui/core\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport CheckCircleIcon from \"@material-ui/icons/CheckCircle\";\nimport VideoThumbnail, {VideoThumbnailProps} from \"./VideoThumbnail\";\nimport {toStringNumber} from \"../../../../utils/numbers\";\nimport VideoPopoverButton from \"./VideoPopoverButton\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\n\nexport interface VideoItemBaseProps {\n    variant?: 'horizontal' | 'vertical',\n    className?: string;\n}\n\nexport interface VideoItemProps extends VideoItemBaseProps {\n    primaryText: ReactNode;\n    primaryTextTo: string;\n    durationSeconds: VideoThumbnailProps['durationSeconds'];\n    imageSrc: string;\n    secondaryText: ReactNode;\n    secondaryTextTo: string;\n    avatarSrc?: AvatarProps['src'];\n    views?: number;\n    captionText?: ReactNode;\n    labelText?: ReactNode;\n    showCheckIcon?: boolean;\n    createdAt?: Date;\n}\n\nconst useStyles = makeStyles((theme: Theme) => createStyles({\n    root: {\n        display: 'flex',\n        alignItems: 'center'\n    },\n    root_variant_vertical: {\n        flexDirection: 'column',\n        alignItems: 'initial'\n    },\n    listItem: {\n        alignItems: 'flex-start',\n        paddingLeft: 0,\n        paddingTop: 0,\n        paddingBottom: 0\n    },\n    container: {\n        listStyle: 'none',\n        display: 'block',\n        width: '100%',\n        overflow: 'hidden'\n    },\n    listItemText: {\n        marginTop: 0,\n        marginBottom: 0\n    },\n    primaryText: {\n        display: '-webkit-box',\n        '-webkit-box-orient': 'vertical',\n        '-webkit-line-clamp': 2,\n        overflow: 'hidden',\n        textDecoration: 'none',\n        lineHeight: 1.25,\n        marginBottom: theme.spacing(.5)\n    },\n    secondaryText: {\n        display: 'block',\n        alignItems: 'center',\n        whiteSpace: 'nowrap',\n        textOverflow: 'ellipsis',\n        overflow: 'hidden',\n        textDecoration: 'none'\n    },\n    checkIcon: {\n        marginLeft: theme.spacing(.5),\n        verticalAlign: 'middle'\n    },\n    views: {\n        display: 'block',\n        whiteSpace: 'nowrap',\n        textOverflow: 'ellipsis',\n        overflow: 'hidden'\n    },\n    labelText: {\n        ...theme.typography.caption,\n        backgroundColor: theme.palette.grey.A100,\n        color: theme.palette.grey.A400,\n        padding: theme.spacing(.125, .5),\n        borderRadius: theme.shape.borderRadius\n    },\n    captionText: {\n        display: 'block',\n        ...theme.typography.caption,\n    },\n    createdAt: {\n        display: 'block'\n    },\n    media: {\n        flex: 1,\n        minWidth: theme.spacing(20),\n        maxWidth: theme.spacing(20),\n        height: theme.spacing(13),\n    },\n    media_variant_vertical: {\n        minWidth: 'initial',\n        maxWidth: 'initial',\n        minHeight: theme.spacing(20),\n        marginBottom: theme.spacing(2)\n    },\n    media_variant_horizontal: {\n        marginRight: theme.spacing(2),\n    }\n}));\n\nfunction VideoItem({\n    variant = 'horizontal',\n    primaryText,\n    durationSeconds,\n    primaryTextTo,\n    imageSrc,\n    secondaryText,\n    avatarSrc,\n    secondaryTextTo,\n    views,\n    labelText,\n    captionText,\n    createdAt,\n    showCheckIcon,\n    className,\n}: VideoItemProps) {\n    const classes = useStyles();\n\n    const primary = primaryText ? (\n        <Typography\n            className={classes.primaryText}\n            variant=\"body1\"\n            color=\"inherit\"\n            component={Link}\n            to={primaryTextTo}\n        >\n            {primaryText}\n        </Typography>\n    ) : null;\n\n    const checkIcon = showCheckIcon ? (\n        <Tooltip\n            title=\"Verified\"\n        >\n            <CheckCircleIcon\n                className={classes.checkIcon}\n                fontSize=\"inherit\"\n            />\n        </Tooltip>\n    ) : null;\n\n    const secondary = secondaryText ? (\n        <Typography\n            className={classes.secondaryText}\n            variant=\"inherit\"\n            color=\"inherit\"\n            component={Link}\n            to={secondaryTextTo}\n        >\n            {secondaryText}\n            {checkIcon}\n        </Typography>\n    ) : null;\n\n    const avatar = variant === 'vertical' && avatarSrc ? (\n        <ListItemAvatar>\n            <Avatar\n                src={avatarSrc || ''}\n                component={Link}\n                to={secondaryTextTo}\n            />\n        </ListItemAvatar>\n    ) : null;\n\n    const viewsNode = views ? (\n        <span className={classes.views}>\n            {toStringNumber(views)} views\n        </span>\n    ) : null;\n\n    const labelTextNode = labelText ?(\n        <span className={classes.labelText}>\n            {labelText}\n        </span>\n    ) : null;\n\n    const captionTextNode = captionText ? (\n        <span className={classes.captionText}>\n            {captionText}\n        </span>\n    ) : null;\n\n    const createdAtNode = variant === 'vertical' && createdAt ? (\n        <span className={classes.createdAt}>\n            {formatDistance(new Date(), createdAt)}\n        </span>\n    ) : null;\n\n    const videoThumbnail = imageSrc ? (\n        <VideoThumbnail\n            className={clsx(\n                classes.media, {\n                [classes.media_variant_vertical]: variant === 'vertical',\n                [classes.media_variant_horizontal]: variant === 'horizontal'\n            })}\n            src={imageSrc}\n            to={primaryTextTo}\n            durationSeconds={durationSeconds}\n        />\n    ) : null;\n\n    const listItemText = (\n        <ListItemText\n            className={classes.listItemText}\n            primary={primary}\n            secondary={\n                <>\n                    {secondary}\n                    {viewsNode}\n                    {labelTextNode}\n                    {captionTextNode}\n                    {createdAtNode}\n                </>\n            }\n        />\n    );\n\n    return (\n        <div\n            className={clsx(\n                className,\n                classes.root, {\n                [classes.root_variant_vertical]: variant === 'vertical'\n            })}\n        >\n            {videoThumbnail}\n            <ListItem\n                className={classes.listItem}\n                ContainerProps={{\n                    className: classes.container\n                }}\n            >\n                {avatar}\n                {listItemText}\n                <ListItemSecondaryAction>\n                    <VideoPopoverButton\n                    />\n                </ListItemSecondaryAction>\n            </ListItem>\n        </div>\n    );\n}\n\nexport default VideoItem;\n","import React from \"react\";\nimport Component, {VideoItemBaseProps} from \"./VideoItem\";\nimport {VideoModel} from \"../../../../models/VideoModel\";\n\nexport interface VideoItemProps extends VideoItemBaseProps, VideoModel {}\n\nfunction VideoItem(props: VideoItemProps) {\n    return (\n        <Component\n            {...props}\n            primaryText={props.title}\n            primaryTextTo={props.videoUrl}\n            durationSeconds={props.duration}\n            imageSrc={props.previewUrl}\n            secondaryText={props.channelName}\n            secondaryTextTo={props.channelUrl}\n            avatarSrc={props.channelAvatarUrl}\n            views={props.views}\n            captionText={props.isRecommended ? 'Recommended for you' : null}\n            labelText={props.isNew ? 'New' : null}\n            showCheckIcon={props.verified}\n            createdAt={props.createdAt}\n        />\n    )\n}\n\nexport default VideoItem;\n","import React from \"react\";\nimport {makeStyles, createStyles, Grid, Theme} from \"@material-ui/core\";\nimport VideoItem, {VideoItemProps} from \"../VideoItem\";\nimport Items, {ItemsProps} from \"../../../common/Items\";\n\nexport interface VideosGridProps {\n    onLoad: ItemsProps['onLoad'];\n}\n\nconst useStyles = makeStyles((theme: Theme) => createStyles({\n    root: {\n        width: '100%',\n        margin: 0\n    }\n}));\n\nfunction VideosGrid({ onLoad }: VideosGridProps) {\n    const classes = useStyles();\n\n    const renderItem = (item: VideoItemProps) => (\n        <Grid item xl={2} lg={3} md={4} sm={6} xs={12} key={item.id}>\n            <VideoItem\n                {...item}\n                variant=\"vertical\"\n            />\n        </Grid>\n    );\n\n    return (\n        <Grid\n            className={classes.root}\n            container\n            spacing={2}\n        >\n            <Items\n                renderItem={renderItem}\n                onLoad={onLoad}\n            />\n        </Grid>\n    )\n}\n\nexport default VideosGrid;\n","import React from \"react\";\nimport List from \"@material-ui/core/List\";\nimport VideoItem, {VideoItemProps} from \"../VideoItem\";\nimport {createStyles, makeStyles, Theme} from \"@material-ui/core/styles\";\nimport Items, {ItemsProps} from \"../../../common/Items\";\n\nexport interface RecommendationsListProps {\n    onLoad: ItemsProps<VideoItemProps>['onLoad'];\n}\n\nconst useStyles = makeStyles((theme: Theme) => createStyles({\n    item: {\n        marginBottom: theme.spacing(2),\n        '&:last-child': {\n            marginBottom: 0\n        }\n    }\n}));\n\nfunction VideosList({ onLoad }: RecommendationsListProps) {\n    const classes = useStyles();\n\n    const renderItem = (item: VideoItemProps) => (\n        <VideoItem\n            key={item.id}\n            className={classes.item}\n            {...item}\n        />\n    );\n\n    return (\n        <List\n            component=\"div\"\n            disablePadding\n        >\n            <Items\n                renderItem={renderItem}\n                onLoad={onLoad}\n            />\n        </List>\n    );\n}\n\nexport default VideosList;\n","import React, {useState} from \"react\";\nimport VideosGrid from \"./VideosGrid\";\nimport {ItemsProps} from \"../../common/Items\";\nimport VideosList from \"./VideosList\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport {createStyles, Theme, Typography} from \"@material-ui/core\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport ViewModuleIcon from \"@material-ui/icons/ViewModule\";\nimport ViewListIcon from \"@material-ui/icons/ViewList\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\n\nexport interface VideosProps {\n    initialVariant?: 'grid' | 'list';\n    onLoad: ItemsProps['onLoad'];\n    title?: string;\n}\n\nconst useStyles = makeStyles((theme: Theme) => createStyles({\n    toolbarAside: {\n        display: 'flex',\n        alignItems: 'center',\n        marginLeft: 'auto'\n    }\n}));\n\nfunction Videos({\n    initialVariant = 'list',\n    onLoad,\n    title\n}: VideosProps) {\n    const classes = useStyles();\n    const [variant, setVariant] = useState(initialVariant);\n\n    const toolbar = title ? (\n        <Toolbar disableGutters>\n            <Typography\n                variant=\"h6\"\n            >\n                {title}\n            </Typography>\n            <aside className={classes.toolbarAside}>\n                <Tooltip title=\"Grid\">\n                    <IconButton\n                        color={variant === 'grid' ? 'secondary' : 'default'}\n                        onClick={() => setVariant('grid')}\n                    >\n                        <ViewModuleIcon />\n                    </IconButton>\n                </Tooltip>\n                <Tooltip title=\"List\">\n                    <IconButton\n                        edge=\"end\"\n                        color={variant === 'list' ? 'secondary' : 'default'}\n                        onClick={() => setVariant('list')}\n                    >\n                        <ViewListIcon />\n                    </IconButton>\n                </Tooltip>\n            </aside>\n        </Toolbar>\n    ) : null;\n\n    const videos = (variant === 'grid') ? (\n        <VideosGrid onLoad={onLoad} />\n    ) : (\n        <VideosList onLoad={onLoad} />\n    );\n\n    return (\n        <>\n            {toolbar}\n            {videos}\n        </>\n    )\n}\n\nexport default Videos;\n","import React, {useState} from \"react\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport Checkbox, {CheckboxProps} from \"@material-ui/core/Checkbox\";\nimport ListItemText, {ListItemTextProps} from \"@material-ui/core/ListItemText\";\nimport ListItemSecondaryAction, {ListItemSecondaryActionProps} from \"@material-ui/core/ListItemSecondaryAction\";\nimport ListItem from \"@material-ui/core/ListItem\";\n\ninterface CheckboxListItemBaseProps {\n    primary: ListItemTextProps['primary'];\n    secondary?: ListItemTextProps['secondary'];\n    secondaryAction?: ListItemSecondaryActionProps['children'];\n    onChange?: (checked: boolean) => void;\n}\n\nexport type CheckboxListItemProps = CheckboxProps & CheckboxListItemBaseProps;\n\nfunction CheckboxListItem({\n    primary,\n    secondary,\n    secondaryAction,\n    onChange,\n    ...CheckboxProps\n}: CheckboxListItemProps) {\n    const [checked, setChecked] = useState(Boolean(CheckboxProps.checked));\n    const toggle = () => onChange ? onChange(checked) : setChecked(!checked);\n\n    const listItemSecondaryAction = secondaryAction ? (\n        <ListItemSecondaryAction>\n            {secondaryAction}\n        </ListItemSecondaryAction>\n    ) : null;\n\n    return (\n        <ListItem\n            dense\n            button\n            onClick={toggle}\n        >\n            <ListItemIcon>\n                <Checkbox\n                    {...CheckboxProps}\n                    checked={checked}\n                    onChange={toggle}\n                    edge=\"start\"\n                    disableRipple\n                />\n            </ListItemIcon>\n            <ListItemText\n                primary={primary}\n                secondary={secondary}\n            />\n            {listItemSecondaryAction}\n        </ListItem>\n    )\n}\n\nexport default CheckboxListItem;\n","import CheckboxListItem from \"../listItems/CheckboxListItem\";\nimport LockIcon from \"@material-ui/icons/Lock\";\nimport List from \"@material-ui/core/List\";\nimport Items, {ItemsProps} from \"./Items\";\nimport React from \"react\";\n\nexport interface MultiChoiceListItemProps {\n    label: string;\n    value: string;\n}\n\nexport interface MultipleChoiceListProps {\n    onLoad: ItemsProps['onLoad'];\n    itemToProps: (item: any) => MultiChoiceListItemProps\n}\n\nfunction MultipleChoiceList({\n    onLoad,\n    itemToProps\n}: MultipleChoiceListProps) {\n    const renderItem = (model: any) => {\n        const item: MultiChoiceListItemProps = itemToProps(model);\n        return (\n            <CheckboxListItem\n                key={item.value}\n                primary={item.label}\n                secondaryAction={\n                    <LockIcon color=\"action\" />\n                }\n            />\n        )\n    };\n\n    return (\n        <List disablePadding>\n            <Items\n                onLoad={onLoad}\n                renderItem={renderItem}\n            />\n        </List>\n    )\n}\n\nexport default MultipleChoiceList;\n","import MultipleChoiceList from \"../common/MultipleChoice\";\nimport {generatePlaylists} from \"../../services/playlistsService\";\nimport {PlaylistModel} from \"../../models/PlaylistModel\";\nimport React from \"react\";\n\nfunction PlaylistsMultipleChoice() {\n    return (\n        <MultipleChoiceList\n            onLoad={generatePlaylists}\n            itemToProps={(item: PlaylistModel) => ({\n                label: item.title,\n                value: item.id\n            })}\n        />\n    )\n}\n\nexport default PlaylistsMultipleChoice;\n","import React from \"react\";\nimport PlaylistAddIcon from \"@material-ui/icons/PlaylistAdd\";\nimport Button from \"@material-ui/core/Button\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport PlaylistsMultipleChoice from \"../core/PlaylistsMultipleChoice\";\nimport DialogTrigger, {DialogTriggerProps} from \"./DialogTrigger\";\n\nexport interface SaveToPlaylistTriggerProps {\n    renderTrigger?: DialogTriggerProps['renderTrigger'];\n}\n\nfunction SaveToPlaylistTrigger(props: SaveToPlaylistTriggerProps) {\n    const renderTrigger = props.renderTrigger || (\n        onClick => (\n            <Button\n                variant=\"text\"\n                startIcon={<PlaylistAddIcon />}\n                onClick={onClick}\n            >\n                Save\n            </Button>\n        )\n    );\n\n    return (\n        <DialogTrigger\n            title=\"Save to...\"\n            maxWidth=\"xs\"\n            content={<PlaylistsMultipleChoice />}\n            renderTrigger={renderTrigger}\n            renderActions={() => (\n                <Button\n                    startIcon={<AddIcon />}\n                >\n                    Create new playlist\n                </Button>\n            )}\n        />\n    )\n}\n\nexport default SaveToPlaylistTrigger;\n","import SingleChoiceList from \"./SingleChoiceList\";\n\nexport default SingleChoiceList;\n","import React from \"react\";\nimport MenuListItem from \"../common/MenuListItem\";\nimport FlagIcon from \"@material-ui/icons/Flag\";\nimport DialogTrigger, {DialogTriggerProps} from \"../triggers/DialogTrigger\";\nimport SingleChoiceList from \"../common/SingleChoice\";\nimport {Button} from \"@material-ui/core\";\n\nfunction ReportListItem() {\n    const title = 'Report';\n    const renderTrigger: DialogTriggerProps['renderTrigger'] = (onClick) => (\n        <MenuListItem\n            title={title}\n            icon={<FlagIcon />}\n            onClick={onClick}\n        />\n    );\n\n    const content = (\n        <SingleChoiceList\n            onLoad={async () => [\n                'Sexual content',\n                'Violent or repulsive content',\n                'Hateful or abusive content',\n                'Harmful or dangerous acts',\n                'Spam or misleading'\n            ]}\n            itemToProps={(reason: string) => ({\n                label: reason,\n                value: reason\n            })}\n        />\n    );\n\n    const renderActions: DialogTriggerProps['renderActions'] = onClose => (\n        <>\n            <Button onClick={onClose}>\n                Cancel\n            </Button>\n            <Button\n                color=\"secondary\"\n                onClick={onClose}\n            >\n                Report\n            </Button>\n        </>\n    );\n\n    return (\n        <DialogTrigger\n            title={title}\n            content={content}\n            renderTrigger={renderTrigger}\n            renderActions={renderActions}\n        />\n    )\n}\n\nexport default ReportListItem;\n"],"sourceRoot":""}