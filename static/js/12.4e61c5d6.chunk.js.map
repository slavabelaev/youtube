{"version":3,"sources":["components/triggers/DialogTrigger.tsx","components/common/SingleChoice/SingleChoiceItem.tsx","components/common/SingleChoice/SingleChoiceList.tsx","components/common/SingleChoice/index.tsx","components/listItems/ReportListItem.tsx","../node_modules/@material-ui/icons/ArrowDropDown.js","components/core/Comments/Answers/Answers.tsx","components/core/Comments/Answers/index.tsx","components/core/Comments/Comment/CommentPopoverButton.tsx","components/core/Comments/Comment/Comment.tsx","components/core/Comments/Comment/index.tsx","components/core/Comments/Comments.tsx"],"names":["useStyles","makeStyles","theme","createStyles","content","padding","actions","borderTop","palette","divider","DialogTrigger","title","maxWidth","renderTrigger","renderActions","classes","useState","open","setOpen","handleToggle","closeButton","edge","onClick","dialogAppBar","endAction","dialogContent","className","dialogActions","dialog","onClose","button","SingleChoiceItem","label","variant","value","checked","icon","Radio","size","style","opacity","checkedIcon","ListItem","dense","ListItemIcon","ListItemText","primary","SingleChoiceList","onLoad","itemToProps","initialValue","onChange","setValue","List","Items","renderLoadMore","renderItem","model","item","ReportListItem","SingleChoice","a","async","reason","MenuListItem","Button","color","_interopRequireDefault","require","Object","defineProperty","exports","default","_react","_default","createElement","d","toolbar","spacing","minHeight","collapse","paddingLeft","Answers","body","React","Toolbar","startIcon","Collapse","in","unmountOnExit","Comments","generateComments","CommentPopoverButton","PopoverButton","renderContent","display","alignItems","marginRight","textDecoration","verificationIcon","marginLeft","avatar_variant_mini","width","height","Comment","avatarSrc","avatarTo","titleTo","text","createdAt","initialLikes","initialDislikes","initialChecked","edited","verified","avatar","Avatar","clsx","component","Link","to","src","Tooltip","fontSize","titleNode","Typography","createdAtNode","formatDistance","Date","listItem","disableGutters","ListItemAvatar","secondary","ListItemSecondaryAction","LikeDislikeButton","LikeButtonProps","DislikeButtonProps","id","avatarUrl","userName","likes","dislikes","liked","otherProps","channelPageTo","CHANNEL_PAGE_ROUTE","replace","key"],"mappings":"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","file":"static/js/12.4e61c5d6.chunk.js","sourcesContent":["import React, {ReactElement, ReactNode, useState} from \"react\";\nimport {createStyles, Dialog, DialogProps, Theme} from \"@material-ui/core\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport PopoverAppBar, {PopoverAppBarProps} from \"../core/PopoverAppBar\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport {makeStyles} from \"@material-ui/core/styles\";\n\nexport interface DialogTriggerProps {\n    content: DialogProps['children'];\n    renderTrigger: (onClick: VoidFunction) => ReactElement;\n    renderActions?: (onClose: VoidFunction) => ReactNode;\n    title?: PopoverAppBarProps['title'];\n    maxWidth?: DialogProps['maxWidth'];\n}\n\nconst useStyles = makeStyles((theme: Theme) => createStyles({\n    content: {\n        padding: 0\n    },\n    actions: {\n        borderTop: `1px solid ${theme.palette.divider}`\n    }\n}));\n\nfunction DialogTrigger({\n    title,\n    maxWidth,\n    renderTrigger,\n    content,\n    renderActions\n}: DialogTriggerProps) {\n    const classes = useStyles();\n    const [open, setOpen] = useState(false);\n    const handleToggle = () => setOpen(!open);\n\n    const closeButton = (\n        <IconButton\n            edge=\"end\"\n            onClick={handleToggle}\n        >\n            <CloseIcon />\n        </IconButton>\n    );\n\n    const dialogAppBar = title ? (\n        <PopoverAppBar\n            title={title}\n            endAction={closeButton}\n        />\n    ) : null;\n\n    const dialogContent = (\n        <DialogContent className={classes.content}>\n            {content}\n        </DialogContent>\n    );\n\n    const dialogActions = renderActions ? (\n        <DialogActions className={classes.actions}>\n            {renderActions(() => setOpen(false))}\n        </DialogActions>\n    ) : null;\n\n    const dialog = (\n        <Dialog\n            open={open}\n            onClose={handleToggle}\n            maxWidth={maxWidth}\n        >\n            {dialogAppBar}\n            {dialogContent}\n            {dialogActions}\n        </Dialog>\n    );\n\n    const button = renderTrigger(handleToggle);\n\n    return (\n        <>\n            {button}\n            {dialog}\n        </>\n    )\n}\n\nexport default DialogTrigger;\n","import ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport CheckIcon from \"@material-ui/icons/Check\";\nimport React from \"react\";\nimport {Radio} from \"@material-ui/core\";\n\nexport interface SingleChoiceItemBaseProps {\n    label: string;\n    value: string;\n}\n\nexport interface SingleChoiceItemProps extends SingleChoiceItemBaseProps {\n    variant?: 'check' | 'radio';\n    checked?: boolean;\n    onClick?: () => void;\n}\n\nfunction SingleChoiceItem({\n    label,\n    value,\n    variant ,\n    checked,\n    onClick\n}: SingleChoiceItemProps) {\n    const icon = variant === 'check' ? (\n        <Radio\n            size=\"small\"\n            checked={checked}\n            icon={<CheckIcon style={{opacity: 0}} />}\n            checkedIcon={<CheckIcon />}\n        />\n    ) : (\n        <Radio\n            checked={checked}\n        />\n    );\n\n    return (\n        <ListItem\n            dense\n            button\n            onClick={onClick}\n        >\n            <ListItemIcon>\n                {icon}\n            </ListItemIcon>\n            <ListItemText\n                primary={label}\n            />\n        </ListItem>\n    )\n}\n\nexport default SingleChoiceItem;\n","import React, {useState} from \"react\";\nimport {List} from \"@material-ui/core\";\nimport Items, {ItemsProps} from \"../Items\";\nimport SingleChoiceItem, {SingleChoiceItemBaseProps, SingleChoiceItemProps} from \"./SingleChoiceItem\";\n\nexport interface SingleChoiceListProps<T = any> {\n    onLoad: ItemsProps['onLoad'];\n    itemToProps: (model: any) => SingleChoiceItemBaseProps;\n    variant?: SingleChoiceItemProps['variant'];\n    initialValue?: SingleChoiceItemProps['value'];\n    onChange?: (item: SingleChoiceItemBaseProps) => void;\n}\n\nfunction SingleChoiceList({\n    variant,\n    onLoad,\n    itemToProps,\n    initialValue = '',\n    onChange\n}: SingleChoiceListProps) {\n    const [value, setValue] = useState(initialValue);\n\n    const renderItem = (model: any) => {\n        const item = itemToProps(model);\n        return (\n            <SingleChoiceItem\n                {...item}\n                variant={variant}\n                checked={value === item.value}\n                onClick={() => {\n                    setValue(item.value);\n                    if (onChange) onChange(item);\n                }}\n            />\n        )\n    };\n\n    return (\n        <List>\n            <Items\n                renderLoadMore={null}\n                renderItem={renderItem}\n                onLoad={onLoad}\n            />\n        </List>\n    );\n}\n\nexport default SingleChoiceList;\n","import SingleChoiceList from \"./SingleChoiceList\";\n\nexport default SingleChoiceList;\n","import React from \"react\";\nimport MenuListItem from \"../common/MenuListItem\";\nimport FlagIcon from \"@material-ui/icons/Flag\";\nimport DialogTrigger, {DialogTriggerProps} from \"../triggers/DialogTrigger\";\nimport SingleChoiceList from \"../common/SingleChoice\";\nimport {Button} from \"@material-ui/core\";\n\nfunction ReportListItem() {\n    const title = 'Report';\n    const renderTrigger: DialogTriggerProps['renderTrigger'] = (onClick) => (\n        <MenuListItem\n            title={title}\n            icon={<FlagIcon />}\n            onClick={onClick}\n        />\n    );\n\n    const content = (\n        <SingleChoiceList\n            onLoad={async () => [\n                'Sexual content',\n                'Violent or repulsive content',\n                'Hateful or abusive content',\n                'Harmful or dangerous acts',\n                'Spam or misleading'\n            ]}\n            itemToProps={(reason: string) => ({\n                label: reason,\n                value: reason\n            })}\n        />\n    );\n\n    const renderActions: DialogTriggerProps['renderActions'] = onClose => (\n        <>\n            <Button onClick={onClose}>\n                Cancel\n            </Button>\n            <Button\n                color=\"secondary\"\n                onClick={onClose}\n            >\n                Report\n            </Button>\n        </>\n    );\n\n    return (\n        <DialogTrigger\n            title={title}\n            content={content}\n            renderTrigger={renderTrigger}\n            renderActions={renderActions}\n        />\n    )\n}\n\nexport default ReportListItem;\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M7 10l5 5 5-5z\"\n}), 'ArrowDropDown');\n\nexports.default = _default;","import React, {ReactNode} from \"react\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {createStyles, Theme} from \"@material-ui/core\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Button from \"@material-ui/core/Button\";\nimport ArrowDropDownIcon from \"@material-ui/icons/ArrowDropDown\";\nimport Collapse from \"@material-ui/core/Collapse\";\n\nexport interface AnswersProps {\n    body: ReactNode;\n}\n\nconst useStyles = makeStyles((theme: Theme) => createStyles({\n    toolbar: {\n        padding: theme.spacing(0, 0, 0, 7),\n        minHeight: 'initial'\n    },\n    collapse: {\n        paddingLeft: theme.spacing(7)\n    }\n}));\n\nfunction Answers({\n    body\n}: AnswersProps) {\n    const classes = useStyles();\n    const [open, setOpen] = React.useState(false);\n    const toggle = () => setOpen(!open);\n\n    const toolbar = (\n        <Toolbar className={classes.toolbar}>\n            <Button\n                size=\"small\"\n                color=\"secondary\"\n                startIcon={<ArrowDropDownIcon />}\n                onClick={toggle}\n            >\n                {open ? 'Hide' : 'View'} replies\n            </Button>\n        </Toolbar>\n    );\n\n    return (\n        <>\n            {toolbar}\n            <Collapse\n                className={classes.collapse}\n                in={open}\n                unmountOnExit\n            >\n                {body}\n            </Collapse>\n        </>\n    );\n}\n\nexport default Answers;\n","import React from \"react\";\nimport Component from \"./Answers\";\nimport Comments from \"../index\";\nimport {generateComments} from \"../../../../services/commentsService\";\n\nfunction Answers() {\n   return (\n       <Component\n           body={\n               <Comments\n                   onLoad={generateComments}\n                   variant=\"mini\"\n               />\n           }\n       />\n   )\n}\n\nexport default Answers;\n","import React from \"react\";\nimport PopoverButton from \"../../../buttons/PopoverButton\";\nimport List from \"@material-ui/core/List\";\nimport ReportListItem from \"../../../listItems/ReportListItem\";\n\nfunction CommentPopoverButton() {\n    const renderContent = () => (\n        <List>\n            <ReportListItem/>\n        </List>\n    );\n\n    return (\n        <PopoverButton\n            edge=\"end\"\n            renderContent={renderContent}\n        />\n    )\n}\n\nexport default CommentPopoverButton;\n","import {makeStyles} from \"@material-ui/core/styles\";\nimport {AvatarProps, createStyles, Theme} from \"@material-ui/core\";\nimport LikeDislikeButton, {LikeDislikeButtonProps} from \"../../../buttons/LikeDislikeButton\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Typography from \"@material-ui/core/Typography\";\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Button from \"@material-ui/core/Button\";\nimport React, {ReactNode} from \"react\";\nimport {Link} from \"react-router-dom\";\nimport clsx from \"clsx\";\nimport {formatDistance} from \"date-fns\";\nimport CommentPopoverButton from \"./CommentPopoverButton\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport CheckCircleIcon from \"@material-ui/icons/CheckCircle\";\n\nexport interface CommentBaseProps {\n    variant?: 'mini' | 'normal';\n}\n\nexport interface CommentProps extends CommentBaseProps {\n    avatarSrc: AvatarProps['src'];\n    avatarTo?: string;\n    title: ReactNode;\n    titleTo?: string;\n    text: ReactNode;\n    createdAt: Date;\n    initialLikes: LikeDislikeButtonProps['initialLikes'];\n    initialDislikes: LikeDislikeButtonProps['initialDislikes'];\n    initialChecked: LikeDislikeButtonProps['initialChecked'];\n    edited?: boolean;\n    verified?: boolean;\n}\n\nexport const useStyles = makeStyles((theme: Theme) => createStyles({\n    toolbar: {\n        padding: theme.spacing(0, 0, 0, 7),\n        minHeight: 'auto'\n    },\n    title: {\n        display: 'inline-flex',\n        alignItems: 'center',\n        marginRight: theme.spacing(1),\n        textDecoration: 'none',\n    },\n    verificationIcon: {\n        marginLeft: theme.spacing(.5)\n    },\n    avatar_variant_mini: {\n        width: 32,\n        height: 32\n    }\n}));\n\nfunction Comment({\n    variant = 'normal',\n    avatarSrc,\n    avatarTo = '',\n    title,\n    titleTo = '',\n    text,\n    createdAt,\n    initialLikes,\n    initialDislikes,\n    initialChecked,\n    edited = false,\n    verified= false,\n\n}: CommentProps) {\n    const classes = useStyles();\n\n    const avatar = (\n        <Avatar\n            className={clsx({\n                [classes.avatar_variant_mini]: variant === 'mini'\n            })}\n            component={Link}\n            to={avatarTo}\n            src={avatarSrc}\n        />\n    );\n\n    const verificationIcon = verified ? (\n        <Tooltip\n            title=\"Verified\"\n        >\n            <CheckCircleIcon\n                className={classes.verificationIcon}\n                fontSize=\"inherit\"\n            />\n        </Tooltip>\n    ) : null;\n\n    const titleNode = (\n        <Typography\n            className={classes.title}\n            variant=\"inherit\"\n            color=\"textPrimary\"\n            component={Link}\n            to={titleTo}\n        >\n            {title}\n            {verificationIcon}\n        </Typography>\n    );\n\n    const createdAtNode = (\n        <Typography\n            variant=\"body2\"\n            color=\"textSecondary\"\n            component=\"span\"\n        >\n            {formatDistance(new Date(), createdAt)}\n            {edited ? ' (edited)' : null}\n        </Typography>\n    );\n\n    const listItem = (\n        <ListItem\n            disableGutters\n            alignItems=\"flex-start\"\n        >\n            <ListItemAvatar>\n                {avatar}\n            </ListItemAvatar>\n            <ListItemText\n                primary={\n                    <>\n                        {titleNode}\n                        {createdAtNode}\n                    </>\n                }\n                secondary={text}\n            />\n            <ListItemSecondaryAction>\n                <CommentPopoverButton />\n            </ListItemSecondaryAction>\n        </ListItem>\n    );\n\n    const toolbar = (\n        <Toolbar className={classes.toolbar}>\n            <LikeDislikeButton\n                initialLikes={initialLikes}\n                initialDislikes={initialDislikes}\n                initialChecked={initialChecked}\n                LikeButtonProps={{\n                    size: 'small'\n                }}\n                DislikeButtonProps={{\n                    size: 'small'\n                }}\n            />\n            <Button\n                variant=\"text\"\n                color=\"inherit\"\n                size=\"small\"\n            >\n                Reply\n            </Button>\n        </Toolbar>\n    );\n\n    return (\n        <div>\n            {listItem}\n            {toolbar}\n        </div>\n    )\n}\n\nexport default Comment;\n","import React from \"react\";\nimport Component, {CommentBaseProps} from \"./Comment\";\nimport {CommentModel} from \"../../../../models/CommentModel\";\nimport {CHANNEL_PAGE_ROUTE} from \"../../../../pages/ChannelPage\";\n\nexport interface CommentProps extends CommentBaseProps, CommentModel {}\n\nfunction Comment({\n    id,\n    avatarUrl,\n    userName,\n    text,\n    createdAt,\n    likes,\n    dislikes,\n    liked,\n    verified,\n    edited,\n    ...otherProps\n}: CommentProps) {\n    const channelPageTo = CHANNEL_PAGE_ROUTE.replace(':id', id);\n    return (\n        <Component\n            {...otherProps}\n            avatarSrc={avatarUrl}\n            avatarTo={channelPageTo}\n            title={userName}\n            titleTo={channelPageTo}\n            text={text}\n            createdAt={createdAt}\n            initialLikes={likes}\n            initialDislikes={dislikes}\n            initialChecked={liked ? 'like' : (liked === false) ? 'dislike' : 'none'}\n            edited={edited}\n            verified={verified}\n        />\n    )\n}\n\nexport default Comment;\n","import React from \"react\";\nimport {List} from \"@material-ui/core\";\nimport Comment, {CommentProps} from \"./Comment\";\nimport Items, {ItemsProps} from \"../../common/Items\";\nimport Answers from \"./Answers\";\n\nexport interface CommentsProps {\n    onLoad: ItemsProps<CommentProps>['onLoad'];\n    variant?: CommentProps['variant'];\n}\n\nfunction Comments({\n    onLoad,\n    variant = 'normal'\n}: CommentsProps) {\n    const renderItem = (item: CommentProps) => (\n        <div key={item.id}>\n            <Comment\n                variant={variant}\n                {...item}\n            />\n            <Answers />\n        </div>\n    );\n\n    return (\n        <List>\n            <Items\n                renderItem={renderItem}\n                onLoad={onLoad}\n            />\n        </List>\n    )\n}\n\nexport default Comments;\n"],"sourceRoot":""}