{"version":3,"sources":["../node_modules/@material-ui/core/esm/Link/Link.js","pages/ChannelPage/pages/ChannelAboutPage/ChannelAboutPage.tsx"],"names":["Link","React","forwardRef","props","ref","classes","className","_props$color","color","_props$component","component","onBlur","onFocus","TypographyClasses","_props$underline","underline","_props$variant","variant","other","_objectWithoutProperties","_useIsFocusVisible","useIsFocusVisible","isFocusVisible","onBlurVisible","focusVisibleRef","_React$useState","useState","focusVisible","setFocusVisible","handlerRef","useForkRef","createElement","Typography","_extends","clsx","root","concat","capitalize","button","event","withStyles","underlineNone","textDecoration","underlineHover","underlineAlways","position","WebkitTapHighlightColor","backgroundColor","outline","border","margin","borderRadius","padding","cursor","userSelect","verticalAlign","borderStyle","name","useStyles","makeStyles","theme","createStyles","breakpoints","up","display","marginBottom","spacing","main","flex","aside","maxWidth","section","paddingTop","paddingBottom","links","gridTemplateColumns","linkItem","details","detailTitle","marginRight","detailValue","ChannelAboutPage","detailsNode","label","value","map","item","linksList","href","target","renderTitle","title","gutterBottom","statsList","disablePadding","text","disableGutters","divider","primary"],"mappings":"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","file":"static/js/23.8ce38c5a.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport capitalize from '../utils/capitalize';\nimport withStyles from '../styles/withStyles';\nimport { elementTypeAcceptingRef } from '@material-ui/utils';\nimport { useIsFocusVisible } from '../utils/focusVisible';\nimport useForkRef from '../utils/useForkRef';\nimport Typography from '../Typography';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {},\n\n  /* Styles applied to the root element if `underline=\"none\"`. */\n  underlineNone: {\n    textDecoration: 'none'\n  },\n\n  /* Styles applied to the root element if `underline=\"hover\"`. */\n  underlineHover: {\n    textDecoration: 'none',\n    '&:hover': {\n      textDecoration: 'underline'\n    }\n  },\n\n  /* Styles applied to the root element if `underline=\"always\"`. */\n  underlineAlways: {\n    textDecoration: 'underline'\n  },\n  // Same reset as ButtonBase.root\n\n  /* Styles applied to the root element if `component=\"button\"`. */\n  button: {\n    position: 'relative',\n    WebkitTapHighlightColor: 'transparent',\n    backgroundColor: 'transparent',\n    // Reset default value\n    // We disable the focus ring for mouse, touch and keyboard users.\n    outline: 0,\n    border: 0,\n    margin: 0,\n    // Remove the margin in Safari\n    borderRadius: 0,\n    padding: 0,\n    // Remove the padding in Firefox\n    cursor: 'pointer',\n    userSelect: 'none',\n    verticalAlign: 'middle',\n    '-moz-appearance': 'none',\n    // Reset\n    '-webkit-appearance': 'none',\n    // Reset\n    '&::-moz-focus-inner': {\n      borderStyle: 'none' // Remove Firefox dotted outline.\n\n    },\n    '&$focusVisible': {\n      outline: 'auto'\n    }\n  },\n\n  /* Pseudo-class applied to the root element if the link is keyboard focused. */\n  focusVisible: {}\n};\nvar Link = React.forwardRef(function Link(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'primary' : _props$color,\n      _props$component = props.component,\n      component = _props$component === void 0 ? 'a' : _props$component,\n      onBlur = props.onBlur,\n      onFocus = props.onFocus,\n      TypographyClasses = props.TypographyClasses,\n      _props$underline = props.underline,\n      underline = _props$underline === void 0 ? 'hover' : _props$underline,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'inherit' : _props$variant,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"color\", \"component\", \"onBlur\", \"onFocus\", \"TypographyClasses\", \"underline\", \"variant\"]);\n\n  var _useIsFocusVisible = useIsFocusVisible(),\n      isFocusVisible = _useIsFocusVisible.isFocusVisible,\n      onBlurVisible = _useIsFocusVisible.onBlurVisible,\n      focusVisibleRef = _useIsFocusVisible.ref;\n\n  var _React$useState = React.useState(false),\n      focusVisible = _React$useState[0],\n      setFocusVisible = _React$useState[1];\n\n  var handlerRef = useForkRef(ref, focusVisibleRef);\n\n  var handleBlur = function handleBlur(event) {\n    if (focusVisible) {\n      onBlurVisible();\n      setFocusVisible(false);\n    }\n\n    if (onBlur) {\n      onBlur(event);\n    }\n  };\n\n  var handleFocus = function handleFocus(event) {\n    if (isFocusVisible(event)) {\n      setFocusVisible(true);\n    }\n\n    if (onFocus) {\n      onFocus(event);\n    }\n  };\n\n  return React.createElement(Typography, _extends({\n    className: clsx(classes.root, classes[\"underline\".concat(capitalize(underline))], className, focusVisible && classes.focusVisible, {\n      button: classes.button\n    }[component]),\n    classes: TypographyClasses,\n    color: color,\n    component: component,\n    onBlur: handleBlur,\n    onFocus: handleFocus,\n    ref: handlerRef,\n    variant: variant\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Link.propTypes = {\n  /**\n   * The content of the link.\n   */\n  children: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the link.\n   */\n  color: PropTypes.oneOf(['default', 'error', 'inherit', 'primary', 'secondary', 'textPrimary', 'textSecondary']),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: elementTypeAcceptingRef,\n\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * `classes` prop applied to the [`Typography`](/api/typography/) element.\n   */\n  TypographyClasses: PropTypes.object,\n\n  /**\n   * Controls when the link should have an underline.\n   */\n  underline: PropTypes.oneOf(['none', 'hover', 'always']),\n\n  /**\n   * Applies the theme typography styles.\n   */\n  variant: PropTypes.string\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiLink'\n})(Link);","import React from \"react\";\r\nimport {createStyles, makeStyles, Theme} from \"@material-ui/core/styles\";\r\nimport {Typography} from \"@material-ui/core\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) => createStyles({\r\n    root: {\r\n        [theme.breakpoints.up('md')]: {\r\n            display: 'flex',\r\n            marginBottom: theme.spacing(4)\r\n        }\r\n    },\r\n    main: {\r\n        flex: 1,\r\n        padding: theme.spacing(0, 2)\r\n    },\r\n    aside: {\r\n        flex: 1,\r\n        [theme.breakpoints.up('md')]: {\r\n            maxWidth: 320,\r\n        },\r\n        padding: theme.spacing(0, 2)\r\n    },\r\n    section: {\r\n        paddingTop: theme.spacing(3),\r\n        paddingBottom: theme.spacing(3)\r\n    },\r\n    links: {\r\n        display: 'grid',\r\n        gridTemplateColumns: '1fr 1fr'\r\n    },\r\n    linkItem: {\r\n        display: 'block'\r\n    },\r\n    details: {\r\n        margin: 0,\r\n        display: 'grid',\r\n        gridTemplateColumns: 'max-content auto'\r\n    },\r\n    detailTitle: {\r\n        marginRight: theme.spacing(2)\r\n    },\r\n    detailValue: {}\r\n}));\r\n\r\ninterface LinkProps {\r\n    href: string;\r\n    label: string;\r\n}\r\n\r\ninterface DetailProps {\r\n    label: string;\r\n    value: string;\r\n}\r\n\r\nfunction ChannelAboutPage() {\r\n    const classes = useStyles();\r\n\r\n    const description: string = 'Channel description';\r\n\r\n    const links: LinkProps[] = [\r\n        { label: 'Twitter', href: 'https://twitter.com/' },\r\n        { label: 'Facebook', href: 'https://facebook.com/' },\r\n        { label: 'Instagram', href: 'https://instagram.com/' },\r\n        { label: 'Blogger', href: 'https://blogspot.com/' },\r\n    ];\r\n\r\n    const stats: string[] = [\r\n        'Joined Sept 18, 2005',\r\n        '2 855 767 413 views'\r\n    ];\r\n    \r\n    const details: DetailProps[] = [\r\n        { label: 'Country', value: 'USA' },\r\n        { label: 'Name', value: 'Value' },\r\n        { label: 'Long name', value: 'Value' },\r\n    ];\r\n\r\n    const renderDetail = (item: DetailProps) => (\r\n        <>\r\n            <Typography\r\n                className={classes.detailTitle}\r\n                variant=\"body2\"\r\n                color=\"textSecondary\"\r\n                component=\"dt\"\r\n            >\r\n                {item.label}:\r\n            </Typography>\r\n            <Typography\r\n                className={classes.detailValue}\r\n                variant=\"body2\"\r\n                color=\"textSecondary\"\r\n                component=\"dd\"\r\n            >\r\n                {item.value}\r\n            </Typography>\r\n        </>\r\n    );\r\n\r\n    const detailsNode = (\r\n        <dl className={classes.details}>\r\n            {details.map(renderDetail)}\r\n        </dl>\r\n    );\r\n\r\n    const renderLink = (item: LinkProps) => (\r\n        <Typography\r\n            className={classes.linkItem}\r\n            component={Link}\r\n            href={item.href}\r\n            target=\"_blank\"\r\n        >\r\n            {item.label}\r\n        </Typography>\r\n    );\r\n\r\n    const linksList = (\r\n        <div className={classes.links}>\r\n            {links.map(renderLink)}\r\n        </div>\r\n    );\r\n\r\n    const renderTitle = (title: string) => (\r\n        <Typography variant=\"h6\" gutterBottom>\r\n            {title}\r\n        </Typography>\r\n    );\r\n\r\n    const renderStatItem = (text: string) => (\r\n        <ListItem disableGutters divider>\r\n            <ListItemText\r\n                primary={text}\r\n            />\r\n        </ListItem>\r\n    );\r\n\r\n    const statsList = (\r\n        <List disablePadding>\r\n            {stats.map(renderStatItem)}\r\n        </List>\r\n    );\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <main className={classes.main}>\r\n                <section className={classes.section}>\r\n                    {renderTitle('Description')}\r\n                    <Typography>\r\n                        {description}\r\n                    </Typography>\r\n                </section>\r\n                <Divider />\r\n                <section className={classes.section}>\r\n                    {renderTitle('Details')}\r\n                    {detailsNode}\r\n                </section>\r\n                <Divider />\r\n                <section className={classes.section}>\r\n                    {renderTitle('Links')}\r\n                    {linksList}\r\n                </section>\r\n            </main>\r\n            <aside className={classes.aside}>\r\n                <section className={classes.section}>\r\n                    {renderTitle('Stats')}\r\n                    {statsList}\r\n                </section>\r\n            </aside>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ChannelAboutPage;\r\n"],"sourceRoot":""}