{"version":3,"sources":["pages/ChannelPage/pages/ChannelVideosPage/index.tsx","pages/ChannelPage/pages/ChannelAboutPage/index.tsx","pages/ChannelPage/pages/ChannelFeaturedPage/index.tsx","pages/ChannelPage/pages/ChannelPlaylistsPage/index.tsx","pages/ChannelPage/pages/ChannelCommunityPage/index.tsx","pages/ChannelPage/pages/ChannelChannelsPage/index.tsx","pages/ChannelPage/ChannelRoutes.tsx","pages/ChannelPage/ChannelTabs.tsx","pages/ChannelPage/styles.ts","pages/ChannelPage/ChannelPage.tsx","components/common/MenuListItem.tsx","utils/numbers.ts","components/buttons/SubscribeButton.tsx","components/buttons/NotificationsToggleButton.tsx","components/core/ChannelToolbar.tsx"],"names":["CHANNEL_VIDEOS_PAGE_ROUTE","CHANNEL_VIDEOS_MENU_ITEM","title","to","Page","React","lazy","ChannelVideosPage","fallback","LinearProgress","CHANNEL_ABOUT_PAGE_ROUTE","CHANNEL_ABOUT_MENU_ITEM","ChannelAboutPage","CHANNEL_FEATURED_PAGE_ROUTE","CHANNEL_FEATURED_MENU_ITEM","ChannelFeaturedPage","CHANNEL_PLAYLISTS_PAGE_ROUTE","CHANNEL_PLAYLISTS_MENU_ITEM","ChannelPlaylistsPage","CHANNEL_COMMUNITY_PAGE_ROUTE","CHANNEL_COMMUNITY_MENU_ITEM","ChannelCommunityPage","CHANNEL_CHANNELS_PAGE_ROUTE","CHANNEL_CHANNELS_MENU_ITEM","ChannelChannelsPage","ChannelRoutes","path","CHANNEL_PAGE_ROUTE","component","ChannelTabs","match","useRouteMatch","location","useHistory","items","initialValue","findIndex","item","pathname","includes","useState","value","setValue","tabs","Tabs","variant","scrollButtons","map","index","Tab","key","label","NavLink","url","exact","onClick","activeClassName","generateBackgroundImageStyles","theme","bgColor","palette","grey","bgGradient","number","join","bgGradient2","backgroundColor","background","backgroundSize","bgSize","backgroundPosition","useStyles","makeStyles","createStyles","poster","position","height","spacing","header","maxWidth","breakpoints","width","margin","socialLinks","display","justifyContent","right","bottom","padding","borderRadius","shape","socialLink","alignItems","textDecoration","color","text","primary","marginRight","ChannelPage","classes","className","Array","fill","href","ChannelToolbar","MenuListItem","props","listItemIcon","icon","listItemSecondaryAction","endIcon","size","dense","button","selected","toStringNumber","fractionDigits","toFixed","SubscribeButton","subscribed","setSubscribed","disableElevation","NotificationsToggleButton","PopoverButton","renderContent","closePopover","List","renderItem","listItem","listItemPrimary","aside","marginLeft","notificationsButton","Toolbar","ListItem","disableGutters","ListItemAvatar","Avatar","src","faker","image","avatar","Link","ListItemText","Typography","company","companyName","secondary","Math","round","random"],"mappings":"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","file":"static/js/14.96272dbc.chunk.js","sourcesContent":["import React, {Suspense} from \"react\";\nimport {LinearProgress} from \"@material-ui/core\";\nimport {RouteLink} from \"../../../../components/common/LinkListItem\";\n\nexport const CHANNEL_VIDEOS_PAGE_ROUTE = '/videos';\n\nexport const CHANNEL_VIDEOS_MENU_ITEM: RouteLink = {\n    title: 'Videos',\n    to: CHANNEL_VIDEOS_PAGE_ROUTE\n};\n\nconst Page = React.lazy(() => import('./ChannelVideosPage'));\n\nfunction ChannelVideosPage() {\n\treturn (\n    <Suspense fallback={<LinearProgress />}>\n        <Page />\n    </Suspense>\n)\n}\n\nexport default ChannelVideosPage;\n","import React, {Suspense} from \"react\";\nimport {LinearProgress} from \"@material-ui/core\";\nimport {RouteLink} from \"../../../../components/common/LinkListItem\";\n\nexport const CHANNEL_ABOUT_PAGE_ROUTE = '/about';\n\nexport const CHANNEL_ABOUT_MENU_ITEM: RouteLink = {\n    title: 'About',\n    to: CHANNEL_ABOUT_PAGE_ROUTE\n};\n\nconst Page = React.lazy(() => import('./ChannelAboutPage'));\n\nfunction ChannelAboutPage() {\n\treturn (\n    <Suspense fallback={<LinearProgress />}>\n        <Page />\n    </Suspense>\n)\n}\n\nexport default ChannelAboutPage;\n","import React, {Suspense} from \"react\";\nimport {LinearProgress} from \"@material-ui/core\";\nimport {RouteLink} from \"../../../../components/common/LinkListItem\";\n\nexport const CHANNEL_FEATURED_PAGE_ROUTE = '/featured';\n\nexport const CHANNEL_FEATURED_MENU_ITEM: RouteLink = {\n    title: 'Home',\n    to: CHANNEL_FEATURED_PAGE_ROUTE\n};\n\nconst Page = React.lazy(() => import('./ChannelFeaturedPage'));\n\nfunction ChannelFeaturedPage() {\n\treturn (\n    <Suspense fallback={<LinearProgress />}>\n        <Page />\n    </Suspense>\n)\n}\n\nexport default ChannelFeaturedPage;\n","import React, {Suspense} from \"react\";\nimport {LinearProgress} from \"@material-ui/core\";\nimport {RouteLink} from \"../../../../components/common/LinkListItem\";\n\nexport const CHANNEL_PLAYLISTS_PAGE_ROUTE = '/playlists';\n\nexport const CHANNEL_PLAYLISTS_MENU_ITEM: RouteLink = {\n    title: 'Playlists',\n    to: CHANNEL_PLAYLISTS_PAGE_ROUTE\n};\n\nconst Page = React.lazy(() => import('./ChannelPlaylistsPage'));\n\nfunction ChannelPlaylistsPage() {\n\treturn (\n    <Suspense fallback={<LinearProgress />}>\n        <Page />\n    </Suspense>\n)\n}\n\nexport default ChannelPlaylistsPage;\n","import React, {Suspense} from \"react\";\nimport {LinearProgress} from \"@material-ui/core\";\nimport {RouteLink} from \"../../../../components/common/LinkListItem\";\n\nexport const CHANNEL_COMMUNITY_PAGE_ROUTE = '/community';\n\nexport const CHANNEL_COMMUNITY_MENU_ITEM: RouteLink = {\n    title: 'Community',\n    to: CHANNEL_COMMUNITY_PAGE_ROUTE\n};\n\nconst Page = React.lazy(() => import('./ChannelCommunityPage'));\n\nfunction ChannelCommunityPage() {\n\treturn (\n    <Suspense fallback={<LinearProgress />}>\n        <Page />\n    </Suspense>\n)\n}\n\nexport default ChannelCommunityPage;\n","import React, {Suspense} from \"react\";\nimport {LinearProgress} from \"@material-ui/core\";\nimport {RouteLink} from \"../../../../components/common/LinkListItem\";\n\nexport const CHANNEL_CHANNELS_PAGE_ROUTE = '/channels';\n\nexport const CHANNEL_CHANNELS_MENU_ITEM: RouteLink = {\n    title: 'Channels',\n    to: CHANNEL_CHANNELS_PAGE_ROUTE\n};\n\nconst Page = React.lazy(() => import('./ChannelChannelsPage'));\n\nfunction ChannelChannelsPage() {\n\treturn (\n    <Suspense fallback={<LinearProgress />}>\n        <Page />\n    </Suspense>\n)\n}\n\nexport default ChannelChannelsPage;\n","import React from \"react\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\nimport ChannelFeaturedPage, {CHANNEL_FEATURED_PAGE_ROUTE} from \"./pages/ChannelFeaturedPage\";\nimport ChannelVideosPage, {CHANNEL_VIDEOS_PAGE_ROUTE} from \"./pages/ChannelVideosPage\";\nimport ChannelPlaylistsPage, {CHANNEL_PLAYLISTS_PAGE_ROUTE} from \"./pages/ChannelPlaylistsPage\";\nimport ChannelCommunityPage, {CHANNEL_COMMUNITY_PAGE_ROUTE} from \"./pages/ChannelCommunityPage\";\nimport ChannelChannelsPage, {CHANNEL_CHANNELS_PAGE_ROUTE} from \"./pages/ChannelChannelsPage\";\nimport ChannelAboutPage, {CHANNEL_ABOUT_PAGE_ROUTE} from \"./pages/ChannelAboutPage\";\nimport {CHANNEL_PAGE_ROUTE} from \"./index\";\n\nfunction ChannelRoutes() {\n\treturn (\n    <Switch>\n        <Route path={CHANNEL_PAGE_ROUTE + CHANNEL_FEATURED_PAGE_ROUTE} component={ChannelFeaturedPage} />\n        <Route path={CHANNEL_PAGE_ROUTE + CHANNEL_VIDEOS_PAGE_ROUTE} component={ChannelVideosPage} />\n        <Route path={CHANNEL_PAGE_ROUTE + CHANNEL_PLAYLISTS_PAGE_ROUTE} component={ChannelPlaylistsPage} />\n        <Route path={CHANNEL_PAGE_ROUTE + CHANNEL_COMMUNITY_PAGE_ROUTE} component={ChannelCommunityPage} />\n        <Route path={CHANNEL_PAGE_ROUTE + CHANNEL_CHANNELS_PAGE_ROUTE} component={ChannelChannelsPage} />\n        <Route path={CHANNEL_PAGE_ROUTE + CHANNEL_ABOUT_PAGE_ROUTE} component={ChannelAboutPage} />\n        <Redirect to={CHANNEL_PAGE_ROUTE + CHANNEL_FEATURED_PAGE_ROUTE} />\n    </Switch>\n)\n}\n\nexport default ChannelRoutes;\n","import React, {useState} from \"react\";\nimport { useRouteMatch, useHistory } from \"react-router-dom\";\nimport Tab from \"@material-ui/core/Tab\";\nimport {Tabs} from \"@material-ui/core\";\nimport {NavLink} from \"react-router-dom\";\nimport {CHANNEL_VIDEOS_MENU_ITEM} from \"./pages/ChannelVideosPage\";\nimport {CHANNEL_ABOUT_MENU_ITEM} from \"./pages/ChannelAboutPage\";\nimport {CHANNEL_FEATURED_MENU_ITEM} from \"./pages/ChannelFeaturedPage\";\nimport {CHANNEL_PLAYLISTS_MENU_ITEM} from \"./pages/ChannelPlaylistsPage\";\nimport {CHANNEL_COMMUNITY_MENU_ITEM} from \"./pages/ChannelCommunityPage\";\nimport {CHANNEL_CHANNELS_MENU_ITEM} from \"./pages/ChannelChannelsPage\";\nimport ChannelRoutes from \"./ChannelRoutes\";\nimport {RouteLink} from \"../../components/common/LinkListItem\";\n\nfunction ChannelTabs() {\n    const match = useRouteMatch();\n    const { location } = useHistory();\n    const items: RouteLink[] = [\n        CHANNEL_FEATURED_MENU_ITEM,\n        CHANNEL_VIDEOS_MENU_ITEM,\n        CHANNEL_PLAYLISTS_MENU_ITEM,\n        CHANNEL_COMMUNITY_MENU_ITEM,\n        CHANNEL_CHANNELS_MENU_ITEM,\n        CHANNEL_ABOUT_MENU_ITEM\n    ];\n    const initialValue = items.findIndex(item => location.pathname.includes(item.to));\n    const [value, setValue] = useState(initialValue);\n\n    const renderItem = (item: RouteLink, index: number) => (\n        <Tab\n            key={item.to}\n            label={item.title}\n            component={NavLink}\n            to={match.url + item.to}\n            exact={true}\n            onClick={() => setValue(index)}\n            activeClassName=\"Mui-selected\"\n        />\n    );\n\n    const tabs = (\n        <Tabs\n            value={value}\n            variant=\"scrollable\"\n            scrollButtons=\"auto\"\n        >\n            {items.map(renderItem)}\n        </Tabs>\n    );\n\n    return (\n        <>\n            {tabs}\n            <ChannelRoutes />\n        </>\n    )\n}\n\nexport default ChannelTabs;\n","import {Theme} from \"@material-ui/core/styles\";\nimport {CSSProperties} from \"react\";\n\nexport function generateBackgroundImageStyles(theme: Theme): CSSProperties {\n    const bgColor = [\n        theme.palette.grey[\"800\"],\n        theme.palette.grey[\"700\"],\n        theme.palette.grey[\"600\"]\n    ];\n    const bgSize = 80;\n    const bgGradient = [30, 150, 30, 150].map(number =>\n        `linear-gradient(${number}deg, ${bgColor[1]} 12%, transparent 12.5%, transparent 87%, ${bgColor[1]} 87.5%, ${bgColor[1]})`\n    ).join(',');\n    const bgGradient2 = [60, 60].map(number =>\n        `linear-gradient(${number}deg, ${bgColor[2]} 25%, transparent 25.5%, transparent 75%, ${bgColor[2]} 75%, ${bgColor[2]})`\n    ).join(',');\n\n    return {\n        backgroundColor: bgColor[0],\n        background: `${bgGradient}, ${bgGradient2}`,\n        backgroundSize: `${bgSize / 2}px ${bgSize}px`,\n        backgroundPosition: `\n            0 0, \n            0 0, \n            ${bgSize / 4}px ${bgSize / 2}px, \n            ${bgSize / 4}px ${bgSize / 2}px, \n            0 0, \n            ${bgSize / 4}px ${bgSize / 2}px\n        `\n    }\n}\n","import React from \"react\";\nimport {createStyles, makeStyles, Theme} from \"@material-ui/core/styles\";\nimport ChannelToolbar from \"../../components/core/ChannelToolbar\";\nimport ChannelTabs from \"./ChannelTabs\";\nimport {generateBackgroundImageStyles} from \"./styles\";\n\nconst useStyles = makeStyles((theme: Theme) => {\n    return createStyles({\n        poster: {\n            position: 'relative',\n            height: theme.spacing(25),\n            ...generateBackgroundImageStyles(theme)\n        },\n        header: {\n            maxWidth: theme.breakpoints.width('md'),\n            margin: '0 auto'\n        },\n        socialLinks: {\n            position: 'absolute',\n            display: 'flex',\n            justifyContent: 'space-between',\n            right: theme.spacing(2),\n            bottom: theme.spacing(2),\n            background: 'rgba(0,0,0,.24)',\n            margin: 0,\n            padding: theme.spacing(1),\n            borderRadius: theme.shape.borderRadius\n        },\n        socialLink: {\n            display: 'inline-flex',\n            alignItems: 'center',\n            justifyContent: 'center',\n            width: theme.spacing(3),\n            height: theme.spacing(3),\n            borderRadius: '50%',\n            backgroundColor: theme.palette.grey[\"800\"],\n            textDecoration: 'none',\n            color: theme.palette.text.primary,\n            '&:not(:last-child)': {\n                marginRight: theme.spacing(1)\n            }\n        }\n    })\n});\n\nfunction ChannelPage() {\n    const classes = useStyles();\n\n    const renderSocialLink = (item: string, index: number) => (\n        <a\n            href=\"#\"\n            className={classes.socialLink}\n            key={index}\n        />\n    );\n\n    const poster = (\n        <div\n            className={classes.poster}\n        >\n            <ul className={classes.socialLinks}>\n                {Array(5).fill(null).map(renderSocialLink)}\n            </ul>\n        </div>\n    );\n\n    const header = (\n        <header className={classes.header}>\n            <ChannelToolbar />\n            <ChannelTabs />\n        </header>\n    );\n\n    return (\n        <>\n            {poster}\n            {header}\n        </>\n    )\n}\n\nexport default ChannelPage;\n","import ListItem, {ListItemProps} from \"@material-ui/core/ListItem\";\nimport React from \"react\";\nimport {ListItemIcon, ListItemIconProps, ListItemSecondaryActionProps, ListItemTextProps} from \"@material-ui/core\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\nimport IconButton from \"@material-ui/core/IconButton\";\n\nexport interface MenuListItemProps {\n    title: ListItemTextProps['primary'];\n    icon?: ListItemIconProps['children'];\n    endIcon?: ListItemSecondaryActionProps['children'];\n    selected?: ListItemProps['selected'];\n    onClick?: () => void;\n}\n\nfunction MenuListItem(props: MenuListItemProps) {\n    const listItemIcon = props.icon ? (\n        <ListItemIcon>\n            {props.icon}\n        </ListItemIcon>\n    ) : null;\n\n    const listItemSecondaryAction = props.endIcon ? (\n        <ListItemSecondaryAction>\n            <IconButton\n                size=\"small\"\n                onClick={props.onClick}\n            >\n                {props.endIcon}\n            </IconButton>\n        </ListItemSecondaryAction>\n    ) : null;\n\n    return (\n        <ListItem\n            dense\n            button\n            selected={props.selected}\n            onClick={props.onClick}\n        >\n            {listItemIcon}\n            <ListItemText\n                primary={props.title}\n            />\n            {listItemSecondaryAction}\n        </ListItem>\n    )\n}\n\nexport default MenuListItem;\n","export function toStringNumber(number: number, fractionDigits = 1) {\n    return (\n        (number >= 1000000000) ? `${(number / 1000000000).toFixed(fractionDigits)}B` :\n        (number >= 1000000) ? `${(number / 1000000).toFixed(fractionDigits)}M` :\n        (number >= 1000) ? `${(number / 1000).toFixed(fractionDigits)}K` :\n        number\n    );\n}\n","import React from \"react\";\nimport Button, {ButtonProps} from \"@material-ui/core/Button\";\n\nexport interface SubscribeButtonProps extends ButtonProps {}\n\nfunction SubscribeButton(props: SubscribeButtonProps) {\n    const [subscribed, setSubscribed] = React.useState(false);\n    const toggle = () => setSubscribed(!subscribed);\n    return (\n       <Button\n           variant=\"contained\"\n           disableElevation\n           {...props}\n           color={subscribed ? 'default' : (props.color || 'primary')}\n           onClick={toggle}\n       >\n           {subscribed ? 'Subscribed' : 'Subscribe'}\n       </Button>\n   )\n}\n\nexport default SubscribeButton;\n","import React, {useState} from \"react\";\nimport NotificationsIcon from \"@material-ui/icons/Notifications\";\nimport NotificationsOffIcon from \"@material-ui/icons/NotificationsOff\";\nimport NotificationsActiveIcon from \"@material-ui/icons/NotificationsActive\";\nimport PopoverButton, {PopoverButtonProps} from \"./PopoverButton\";\nimport MenuListItem, {MenuListItemProps} from \"../common/MenuListItem\";\nimport {List} from \"@material-ui/core\";\n\nexport interface NotificationsToggleButtonProps {\n    className: PopoverButtonProps['className'];\n}\n\nfunction NotificationsToggleButton(props: NotificationsToggleButtonProps) {\n    const [value, setValue] = useState(1);\n    let items: MenuListItemProps[] = [\n        { title: 'All', icon: <NotificationsActiveIcon /> },\n        { title: 'Personalized', icon: <NotificationsIcon /> },\n        { title: 'None', icon: <NotificationsOffIcon /> },\n    ];\n\n    const renderItem = (closePopover: VoidFunction) => (item: MenuListItemProps, index: number) => (\n        <MenuListItem\n            title={item.title}\n            icon={item.icon}\n            selected={index === value}\n            onClick={() => {\n                setValue(index);\n                closePopover();\n            }}\n        />\n    );\n\n    const renderContent: PopoverButtonProps['renderContent'] = closePopover => (\n        <List>\n            {items.map(renderItem(closePopover))}\n        </List>\n    )\n\n    return (\n        <PopoverButton\n            {...props}\n            renderContent={renderContent}\n        >\n            {items[value].icon}\n        </PopoverButton>\n    )\n}\n\nexport default NotificationsToggleButton;\n","import React from \"react\";\nimport faker from \"faker/locale/en\";\nimport Toolbar, {ToolbarProps} from \"@material-ui/core/Toolbar\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport {createStyles, makeStyles, Theme} from \"@material-ui/core/styles\";\nimport {Link} from \"react-router-dom\";\nimport {Typography} from \"@material-ui/core\";\nimport {toStringNumber} from \"../../utils/numbers\";\nimport SubscribeButton from \"../buttons/SubscribeButton\";\nimport NotificationsToggleButton from \"../buttons/NotificationsToggleButton\";\n\nconst useStyles = makeStyles((theme: Theme) => createStyles({\n    listItem: {\n        width: 'auto'\n    },\n    listItemPrimary: {\n        textDecoration: 'none'\n    },\n    aside: {\n        marginLeft: 'auto'\n    },\n    notificationsButton: {\n        marginLeft: theme.spacing(1)\n    }\n}));\n\nexport interface ChannelToolbar extends ToolbarProps {}\n\nfunction ChannelToolbar(props: ChannelToolbar) {\n    const classes = useStyles();\n    return (\n        <Toolbar {...props}>\n            <ListItem\n                className={classes.listItem}\n                disableGutters\n            >\n                <ListItemAvatar>\n                    <Avatar\n                        src={faker.image.avatar()}\n                        component={Link}\n                        to=\"/channel/1\"\n                    />\n                </ListItemAvatar>\n                <ListItemText\n                    primary={\n                        <Typography\n                            className={classes.listItemPrimary}\n                            component={Link}\n                            to=\"/channel/1\"\n                            color=\"inherit\"\n                        >\n                            {faker.company.companyName()}\n                        </Typography>\n                    }\n                    secondary={`${toStringNumber(Math.round(Math.random() * 9999999), 0)} subscribers`}\n                />\n            </ListItem>\n            <aside className={classes.aside}>\n                <SubscribeButton />\n                <NotificationsToggleButton\n                    className={classes.notificationsButton}\n                />\n            </aside>\n        </Toolbar>\n    );\n}\n\nexport default ChannelToolbar;\n"],"sourceRoot":""}