{"version":3,"sources":["components/common/MenuListItem.tsx","components/triggers/DialogTrigger.tsx","utils/numbers.ts","components/common/SingleChoice/SingleChoiceItem.tsx","components/common/SingleChoice/SingleChoiceList.tsx","components/triggers/SnackbarTrigger.tsx","components/core/Videos/VideoItem/VideoThumbnail.tsx","components/listItems/AddToQueueListItem.tsx","components/listItems/SaveToWatchLaterListItem.tsx","components/listItems/SaveToPlaylistListItem.tsx","components/listItems/NotInterestedListItem.tsx","components/listItems/NotRecommendListItem.tsx","components/core/Videos/VideoItem/VideoMenu.tsx","components/core/Videos/VideoItem/VideoPopoverButton.tsx","components/core/Videos/VideoItem/VideoItem.tsx","components/core/Videos/VideoItem/index.tsx","components/core/Videos/VideosGrid/index.tsx","components/core/Videos/VideosList/index.tsx","components/core/Videos/Videos.tsx","components/listItems/CheckboxListItem.tsx","components/common/MultipleChoice.tsx","components/core/PlaylistsMultipleChoice.tsx","components/triggers/SaveToPlaylistTrigger.tsx","components/common/SingleChoice/index.tsx","components/listItems/ReportListItem.tsx"],"names":["MenuListItem","props","listItemIcon","icon","listItemSecondaryAction","endIcon","size","onClick","dense","button","selected","primary","title","useStyles","makeStyles","theme","createStyles","content","padding","actions","borderTop","palette","divider","DialogTrigger","maxWidth","renderTrigger","renderActions","classes","useState","open","setOpen","handleToggle","closeButton","edge","dialogAppBar","endAction","dialogContent","className","dialogActions","dialog","onClose","toStringNumber","number","fractionDigits","toFixed","SingleChoiceItem","label","variant","value","checked","Radio","style","opacity","checkedIcon","ListItem","ListItemIcon","ListItemText","SingleChoiceList","onLoad","itemToProps","initialValue","onChange","setValue","List","Items","renderLoadMore","renderItem","model","item","SnackbarTrigger","handleClose","snackbar","Snackbar","anchorOrigin","horizontal","vertical","autoHideDuration","message","action","Button","color","trigger","buttonProps","position","right","spacing","backgroundColor","grey","common","white","minWidth","fullSizeProps","left","top","bottom","margin","root","height","borderRadius","shape","overflow","display","link","image","width","playArrowIcon","timeStatus","alignItems","justifyContent","watchLater","SaveToPlaylistTrigger","VideoThumbnail","src","to","durationSeconds","Typography","component","Date","toLocaleTimeString","substring","saveToWatchLaterButton","Tooltip","placement","aria-label","fontSize","saveToPlaylistTrigger","preview","alt","clsx","AddToQueueListItem","SaveToWatchLaterListItem","showSnackbar","SaveToPlaylistListItem","showPlaylists","NotInterestedListItem","NotRecommendListItem","VideoMenu","primaryList","secondaryList","ReportListItem","Divider","VideoPopoverButton","PopoverButton","renderContent","root_variant_vertical","flexDirection","listItem","paddingLeft","paddingTop","paddingBottom","container","listStyle","listItemText","marginTop","marginBottom","primaryText","textDecoration","lineHeight","secondaryText","whiteSpace","textOverflow","checkIcon","marginLeft","verticalAlign","views","labelText","typography","caption","A100","A400","captionText","createdAt","media","flex","media_variant_vertical","minHeight","media_variant_horizontal","marginRight","VideoItem","primaryTextTo","imageSrc","avatarSrc","secondaryTextTo","showCheckIcon","Link","secondary","avatar","ListItemAvatar","Avatar","viewsNode","labelTextNode","captionTextNode","createdAtNode","formatDistance","videoThumbnail","ContainerProps","ListItemSecondaryAction","videoUrl","duration","previewUrl","channelName","channelUrl","channelAvatarUrl","isRecommended","isNew","verified","VideosGrid","Grid","xl","lg","md","sm","xs","key","id","VideosList","disablePadding","toolbarAside","Videos","initialVariant","setVariant","toolbar","Toolbar","disableGutters","IconButton","videos","CheckboxListItem","secondaryAction","CheckboxProps","Boolean","setChecked","toggle","Checkbox","disableRipple","MultipleChoiceList","PlaylistsMultipleChoice","MultipleChoice","generatePlaylists","startIcon","SingleChoice","a","async","reason"],"mappings":"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","file":"static/js/11.af1236e9.chunk.js","sourcesContent":["import ListItem, {ListItemProps} from \"@material-ui/core/ListItem\";\nimport React from \"react\";\nimport {ListItemIcon, ListItemIconProps, ListItemSecondaryActionProps, ListItemTextProps} from \"@material-ui/core\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\nimport IconButton from \"@material-ui/core/IconButton\";\n\nexport interface MenuListItemProps {\n    title: ListItemTextProps['primary'];\n    icon?: ListItemIconProps['children'];\n    endIcon?: ListItemSecondaryActionProps['children'];\n    selected?: ListItemProps['selected'];\n    onClick?: () => void;\n}\n\nfunction MenuListItem(props: MenuListItemProps) {\n    const listItemIcon = props.icon ? (\n        <ListItemIcon>\n            {props.icon}\n        </ListItemIcon>\n    ) : null;\n\n    const listItemSecondaryAction = props.endIcon ? (\n        <ListItemSecondaryAction>\n            <IconButton\n                size=\"small\"\n                onClick={props.onClick}\n            >\n                {props.endIcon}\n            </IconButton>\n        </ListItemSecondaryAction>\n    ) : null;\n\n    return (\n        <ListItem\n            dense\n            button\n            selected={props.selected}\n            onClick={props.onClick}\n        >\n            {listItemIcon}\n            <ListItemText\n                primary={props.title}\n            />\n            {listItemSecondaryAction}\n        </ListItem>\n    )\n}\n\nexport default MenuListItem;\n","import React, {ReactElement, ReactNode, useState} from \"react\";\nimport {createStyles, Dialog, DialogProps, Theme} from \"@material-ui/core\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport PopoverAppBar, {PopoverAppBarProps} from \"../core/PopoverAppBar\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport {makeStyles} from \"@material-ui/core/styles\";\n\nexport interface DialogTriggerProps {\n    content: DialogProps['children'];\n    renderTrigger: (onClick: VoidFunction) => ReactElement;\n    renderActions?: (onClose: VoidFunction) => ReactNode;\n    title?: PopoverAppBarProps['title'];\n    maxWidth?: DialogProps['maxWidth'];\n}\n\nconst useStyles = makeStyles((theme: Theme) => createStyles({\n    content: {\n        padding: 0\n    },\n    actions: {\n        borderTop: `1px solid ${theme.palette.divider}`\n    }\n}));\n\nfunction DialogTrigger({\n    title,\n    maxWidth,\n    renderTrigger,\n    content,\n    renderActions\n}: DialogTriggerProps) {\n    const classes = useStyles();\n    const [open, setOpen] = useState(false);\n    const handleToggle = () => setOpen(!open);\n\n    const closeButton = (\n        <IconButton\n            edge=\"end\"\n            onClick={handleToggle}\n        >\n            <CloseIcon />\n        </IconButton>\n    );\n\n    const dialogAppBar = title ? (\n        <PopoverAppBar\n            title={title}\n            endAction={closeButton}\n        />\n    ) : null;\n\n    const dialogContent = (\n        <DialogContent className={classes.content}>\n            {content}\n        </DialogContent>\n    );\n\n    const dialogActions = renderActions ? (\n        <DialogActions className={classes.actions}>\n            {renderActions(() => setOpen(false))}\n        </DialogActions>\n    ) : null;\n\n    const dialog = (\n        <Dialog\n            open={open}\n            onClose={handleToggle}\n            maxWidth={maxWidth}\n        >\n            {dialogAppBar}\n            {dialogContent}\n            {dialogActions}\n        </Dialog>\n    );\n\n    const button = renderTrigger(handleToggle);\n\n    return (\n        <>\n            {button}\n            {dialog}\n        </>\n    )\n}\n\nexport default DialogTrigger;\n","export function toStringNumber(number: number, fractionDigits = 1) {\n    return (\n        (number >= 1000000000) ? `${(number / 1000000000).toFixed(fractionDigits)}B` :\n        (number >= 1000000) ? `${(number / 1000000).toFixed(fractionDigits)}M` :\n        (number >= 1000) ? `${(number / 1000).toFixed(fractionDigits)}K` :\n        number\n    );\n}\n","import ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport CheckIcon from \"@material-ui/icons/Check\";\nimport React from \"react\";\nimport {Radio} from \"@material-ui/core\";\n\nexport interface SingleChoiceItemBaseProps {\n    label: string;\n    value: string;\n}\n\nexport interface SingleChoiceItemProps extends SingleChoiceItemBaseProps {\n    variant?: 'check' | 'radio';\n    checked?: boolean;\n    onClick?: () => void;\n}\n\nfunction SingleChoiceItem({\n    label,\n    value,\n    variant ,\n    checked,\n    onClick\n}: SingleChoiceItemProps) {\n    const icon = variant === 'check' ? (\n        <Radio\n            size=\"small\"\n            checked={checked}\n            icon={<CheckIcon style={{opacity: 0}} />}\n            checkedIcon={<CheckIcon />}\n        />\n    ) : (\n        <Radio\n            checked={checked}\n        />\n    );\n\n    return (\n        <ListItem\n            dense\n            button\n            onClick={onClick}\n        >\n            <ListItemIcon>\n                {icon}\n            </ListItemIcon>\n            <ListItemText\n                primary={label}\n            />\n        </ListItem>\n    )\n}\n\nexport default SingleChoiceItem;\n","import React, {useState} from \"react\";\nimport {List} from \"@material-ui/core\";\nimport Items, {ItemsProps} from \"../Items\";\nimport SingleChoiceItem, {SingleChoiceItemBaseProps, SingleChoiceItemProps} from \"./SingleChoiceItem\";\n\nexport interface SingleChoiceListProps<T = any> {\n    onLoad: ItemsProps['onLoad'];\n    itemToProps: (model: any) => SingleChoiceItemBaseProps;\n    variant?: SingleChoiceItemProps['variant'];\n    initialValue?: SingleChoiceItemProps['value'];\n    onChange?: (item: SingleChoiceItemBaseProps) => void;\n}\n\nfunction SingleChoiceList({\n    variant,\n    onLoad,\n    itemToProps,\n    initialValue = '',\n    onChange\n}: SingleChoiceListProps) {\n    const [value, setValue] = useState(initialValue);\n\n    const renderItem = (model: any) => {\n        const item = itemToProps(model);\n        return (\n            <SingleChoiceItem\n                {...item}\n                variant={variant}\n                checked={value === item.value}\n                onClick={() => {\n                    setValue(item.value);\n                    if (onChange) onChange(item);\n                }}\n            />\n        )\n    };\n\n    return (\n        <List>\n            <Items\n                renderLoadMore={null}\n                renderItem={renderItem}\n                onLoad={onLoad}\n            />\n        </List>\n    );\n}\n\nexport default SingleChoiceList;\n","import React, {ReactElement, useState} from \"react\";\nimport {Snackbar, SnackbarProps} from \"@material-ui/core\";\nimport Button from \"@material-ui/core/Button\";\n\nexport interface SnackbarTriggerProps {\n    message: SnackbarProps['message'];\n    renderTrigger: (onClick: VoidFunction) => ReactElement;\n}\n\nfunction SnackbarTrigger(props: SnackbarTriggerProps) {\n    const [open, setOpen] = useState(false);\n    const handleOpen = () => setOpen(true);\n    const handleClose = () => setOpen(false);\n\n    const snackbar = (\n        <Snackbar\n            anchorOrigin={{\n                horizontal: 'left',\n                vertical: 'bottom'\n            }}\n            open={open}\n            autoHideDuration={5000}\n            message={props.message}\n            onClose={handleClose}\n            action={\n                <Button\n                    color=\"secondary\"\n                    size=\"small\"\n                    onClick={handleClose}\n                >\n                    UNDO\n                </Button>\n            }\n        />\n    );\n\n    const trigger = props.renderTrigger(handleOpen);\n\n    return (\n        <>\n            {trigger}\n            {snackbar}\n        </>\n    )\n}\n\nexport default SnackbarTrigger;\n","import React from \"react\";\nimport {createStyles, makeStyles, Theme} from \"@material-ui/core/styles\";\nimport PlayArrowIcon from \"@material-ui/icons/PlayArrow\";\nimport clsx from \"clsx\";\nimport Typography from \"@material-ui/core/Typography\";\nimport WatchLaterIcon from \"@material-ui/icons/WatchLater\";\nimport PlaylistPlayIcon from \"@material-ui/icons/PlaylistPlay\";\nimport Button from \"@material-ui/core/Button\";\nimport {CreateCSSProperties} from \"@material-ui/styles/withStyles\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport {Link} from \"react-router-dom\";\nimport SaveToPlaylistTrigger from \"../../../triggers/SaveToPlaylistTrigger\";\nimport SnackbarTrigger from \"../../../triggers/SnackbarTrigger\";\n\nconst useStyles = makeStyles((theme: Theme) => {\n    const buttonProps: CreateCSSProperties = {\n        position: 'absolute',\n        right: theme.spacing(1),\n        backgroundColor: theme.palette.grey[\"900\"],\n        color: theme.palette.common.white,\n        minWidth: 'auto',\n    };\n\n    const fullSizeProps: CreateCSSProperties = {\n        position: 'absolute',\n        left: 0,\n        right: 0,\n        top: 0,\n        bottom: 0,\n        margin: 'auto'\n    };\n\n    return createStyles({\n        root: {\n            position: 'relative',\n            height: 104,\n            borderRadius: theme.shape.borderRadius,\n            overflow: 'hidden',\n            backgroundColor: theme.palette.grey[\"800\"],\n            color: theme.palette.common.white,\n            '&:not(:hover) [aria-label=\"button\"]': {\n                display: 'none'\n            }\n        },\n        link: {\n            ...fullSizeProps\n        },\n        image: {\n            ...fullSizeProps,\n            width: '100%',\n        },\n        playArrowIcon: {\n            color: theme.palette.common.white,\n            ...fullSizeProps,\n        },\n        timeStatus: {\n            display: 'inline-flex',\n            alignItems: 'center',\n            justifyContent: 'center',\n            position: 'absolute',\n            padding: theme.spacing(.125, .5),\n            bottom: theme.spacing(1),\n            right: theme.spacing(1),\n            borderRadius: theme.shape.borderRadius,\n            backgroundColor: theme.palette.grey[\"900\"],\n            color: theme.palette.common.white\n        },\n        watchLater: {\n            ...buttonProps,\n            top: theme.spacing(1),\n        },\n        SaveToPlaylistTrigger: {\n            ...buttonProps,\n            top: theme.spacing(5.25),\n        }\n    });\n});\n\nexport interface VideoThumbnailProps {\n    src: string;\n    to: string;\n    durationSeconds: number;\n    className?: string;\n    [key: string]: any;\n}\n\nfunction VideoThumbnail({\n    src,\n    to,\n    durationSeconds,\n    className,\n    style,\n    ...otherProps\n}: VideoThumbnailProps) {\n    const classes = useStyles();\n\n    const timeStatus = (\n        <Typography\n            className={classes.timeStatus}\n            variant=\"caption\"\n            component=\"span\"\n        >\n            {new Date(durationSeconds).toLocaleTimeString().substring(3)}\n        </Typography>\n    );\n\n    const saveToWatchLaterButton = (\n        <SnackbarTrigger\n            message={'Saved to \"Watch later\"'}\n            renderTrigger={onClick => (\n                <Tooltip\n                    title=\"Watch later\"\n                    placement=\"left\"\n                >\n                    <Button\n                        className={classes.watchLater}\n                        size=\"small\"\n                        aria-label=\"button\"\n                        onClick={onClick}\n                    >\n                        <WatchLaterIcon\n                            fontSize=\"small\"\n                        />\n                    </Button>\n                </Tooltip>\n            )}\n        />\n    );\n\n    const saveToPlaylistTrigger = (\n        <SaveToPlaylistTrigger\n            renderTrigger={onClick => (\n                <Tooltip\n                    title=\"Save to playlist\"\n                    placement=\"left\"\n                    aria-label=\"button\"\n                >\n                    <Button\n                        className={classes.SaveToPlaylistTrigger}\n                        size=\"small\"\n                        onClick={onClick}\n                    >\n                        <PlaylistPlayIcon\n                            fontSize=\"small\"\n                        />\n                    </Button>\n                </Tooltip>\n            )}\n        />\n    );\n\n    const preview = (\n        <Link\n            className={classes.link}\n            to={to}\n        >\n            <img\n                className={classes.image}\n                src={src}\n                alt=\"\"\n            />\n            <PlayArrowIcon\n                fontSize=\"large\"\n                aria-label=\"button\"\n                className={classes.playArrowIcon}\n            />\n        </Link>\n    );\n\n    return (\n        <div className={clsx(classes.root, className)}>\n            {preview}\n            {saveToWatchLaterButton}\n            {saveToPlaylistTrigger}\n            {timeStatus}\n        </div>\n    )\n}\n\nexport default VideoThumbnail;\n","import React from \"react\";\nimport MenuListItem, {MenuListItemProps} from \"../common/MenuListItem\";\nimport PlaylistPlayIcon from \"@material-ui/icons/PlaylistPlay\";\n\nexport interface AddToQueueListItemProps {\n    onClick?: MenuListItemProps['onClick'];\n}\n\nfunction AddToQueueListItem(props: AddToQueueListItemProps) {\n    return (\n        <MenuListItem\n            title=\"Add to queue\"\n            icon={<PlaylistPlayIcon />}\n            onClick={props.onClick}\n        />\n    )\n}\n\nexport default AddToQueueListItem;\n","import React from \"react\";\nimport MenuListItem, {MenuListItemProps} from \"../common/MenuListItem\";\nimport WatchLaterIcon from \"@material-ui/icons/WatchLater\";\nimport SnackbarTrigger, {SnackbarTriggerProps} from \"../triggers/SnackbarTrigger\";\n\nexport interface SaveToWatchLaterListItemProps {\n    onClick?: MenuListItemProps['onClick'];\n}\n\nfunction SaveToWatchLaterListItem({ onClick }: SaveToWatchLaterListItemProps) {\n    const renderTrigger: SnackbarTriggerProps['renderTrigger'] = showSnackbar => (\n        <MenuListItem\n            title={'Save to \"Watch later\"'}\n            icon={<WatchLaterIcon />}\n            onClick={() => {\n                if (onClick) onClick();\n                showSnackbar();\n            }}\n        />\n    );\n\n    return (\n        <SnackbarTrigger\n            message={'Saved to \"Watch later\"'}\n            renderTrigger={renderTrigger}\n        />\n    )\n}\n\nexport default SaveToWatchLaterListItem;\n","import React from \"react\";\nimport MenuListItem, {MenuListItemProps} from \"../common/MenuListItem\";\nimport PlaylistAddIcon from \"@material-ui/icons/PlaylistAdd\";\nimport SaveToPlaylistTrigger, {SaveToPlaylistTriggerProps} from \"../triggers/SaveToPlaylistTrigger\";\n\nexport interface SaveToPlaylistListItemProps {\n    onClick?: MenuListItemProps['onClick'];\n}\n\nfunction SaveToPlaylistListItem({ onClick }: SaveToPlaylistListItemProps) {\n    const renderTrigger: SaveToPlaylistTriggerProps['renderTrigger'] = (showPlaylists) => (\n        <MenuListItem\n            title={'Save to playlist'}\n            icon={<PlaylistAddIcon />}\n            onClick={() => {\n                showPlaylists();\n                if (onClick) onClick();\n            }}\n        />\n    );\n\n    return (\n        <SaveToPlaylistTrigger\n            renderTrigger={renderTrigger}\n        />\n    )\n}\n\nexport default SaveToPlaylistListItem;\n","import React from \"react\";\nimport MenuListItem from \"../common/MenuListItem\";\nimport NotInterestedIcon from \"@material-ui/icons/NotInterested\";\n\nfunction NotInterestedListItem() {\n    return (\n        <MenuListItem\n            title=\"Not interested\"\n            icon={<NotInterestedIcon />}\n        />\n    )\n}\n\nexport default NotInterestedListItem;\n","import React from \"react\";\nimport MenuListItem from \"../common/MenuListItem\";\nimport RemoveCircleOutlineIcon from \"@material-ui/icons/RemoveCircleOutline\";\n\nfunction NotRecommendListItem() {\n    return (\n        <MenuListItem\n            title=\"Don't recommend channel\"\n            icon={<RemoveCircleOutlineIcon />}\n        />\n    )\n}\n\nexport default NotRecommendListItem;\n","import React from \"react\";\nimport Divider from \"@material-ui/core/Divider\";\nimport List from \"@material-ui/core/List\";\nimport AddToQueueListItem from \"../../../listItems/AddToQueueListItem\";\nimport SaveToWatchLaterListItem from \"../../../listItems/SaveToWatchLaterListItem\";\nimport SaveToPlaylistListItem from \"../../../listItems/SaveToPlaylistListItem\";\nimport NotInterestedListItem from \"../../../listItems/NotInterestedListItem\";\nimport NotRecommendListItem from \"../../../listItems/NotRecommendListItem\";\nimport ReportListItem from \"../../../listItems/ReportListItem\";\n\nfunction VideoMenu() {\n    const primaryList = (\n        <List>\n            <AddToQueueListItem/>\n            <SaveToWatchLaterListItem/>\n            <SaveToPlaylistListItem/>\n        </List>\n    );\n\n    const secondaryList = (\n        <List>\n            <NotInterestedListItem/>\n            <NotRecommendListItem/>\n            <ReportListItem/>\n        </List>\n    );\n\n    return (\n        <div>\n            {primaryList}\n            <Divider />\n            {secondaryList}\n        </div>\n    )\n}\n\nexport default VideoMenu;\n","import React from \"react\";\nimport VideoMenu from \"./VideoMenu\";\nimport PopoverButton from \"../../../buttons/PopoverButton\";\n\nfunction VideoPopoverButton() {\n    return (\n        <PopoverButton\n            edge=\"end\"\n            renderContent={() => <VideoMenu />}\n        />\n    )\n}\n\nexport default VideoPopoverButton;\n","import React, {ReactNode} from \"react\";\nimport {Link} from \"react-router-dom\";\nimport clsx from \"clsx\";\nimport {formatDistance} from \"date-fns\";\nimport {createStyles, makeStyles, Theme} from \"@material-ui/core/styles\";\nimport {AvatarProps, ListItem} from \"@material-ui/core\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport CheckCircleIcon from \"@material-ui/icons/CheckCircle\";\nimport VideoThumbnail, {VideoThumbnailProps} from \"./VideoThumbnail\";\nimport {toStringNumber} from \"../../../../utils/numbers\";\nimport VideoPopoverButton from \"./VideoPopoverButton\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\n\nexport interface VideoItemBaseProps {\n    variant?: 'horizontal' | 'vertical',\n    className?: string;\n}\n\nexport interface VideoItemProps extends VideoItemBaseProps {\n    primaryText: ReactNode;\n    primaryTextTo: string;\n    durationSeconds: VideoThumbnailProps['durationSeconds'];\n    imageSrc: string;\n    secondaryText: ReactNode;\n    secondaryTextTo: string;\n    avatarSrc?: AvatarProps['src'];\n    views?: number;\n    captionText?: ReactNode;\n    labelText?: ReactNode;\n    showCheckIcon?: boolean;\n    createdAt?: Date;\n}\n\nconst useStyles = makeStyles((theme: Theme) => createStyles({\n    root: {\n        display: 'flex',\n        alignItems: 'center'\n    },\n    root_variant_vertical: {\n        flexDirection: 'column',\n        alignItems: 'initial'\n    },\n    listItem: {\n        alignItems: 'flex-start',\n        paddingLeft: 0,\n        paddingTop: 0,\n        paddingBottom: 0\n    },\n    container: {\n        listStyle: 'none',\n        display: 'block',\n        width: '100%',\n        overflow: 'hidden'\n    },\n    listItemText: {\n        marginTop: 0,\n        marginBottom: 0\n    },\n    primaryText: {\n        display: '-webkit-box',\n        '-webkit-box-orient': 'vertical',\n        '-webkit-line-clamp': 2,\n        overflow: 'hidden',\n        textDecoration: 'none',\n        lineHeight: 1.25,\n        marginBottom: theme.spacing(.5)\n    },\n    secondaryText: {\n        display: 'block',\n        alignItems: 'center',\n        whiteSpace: 'nowrap',\n        textOverflow: 'ellipsis',\n        overflow: 'hidden',\n        textDecoration: 'none'\n    },\n    checkIcon: {\n        marginLeft: theme.spacing(.5),\n        verticalAlign: 'middle'\n    },\n    views: {\n        display: 'block',\n        whiteSpace: 'nowrap',\n        textOverflow: 'ellipsis',\n        overflow: 'hidden'\n    },\n    labelText: {\n        ...theme.typography.caption,\n        backgroundColor: theme.palette.grey.A100,\n        color: theme.palette.grey.A400,\n        padding: theme.spacing(.125, .5),\n        borderRadius: theme.shape.borderRadius\n    },\n    captionText: {\n        display: 'block',\n        ...theme.typography.caption,\n    },\n    createdAt: {\n        display: 'block'\n    },\n    media: {\n        flex: 1,\n        minWidth: theme.spacing(20),\n        maxWidth: theme.spacing(20),\n        height: theme.spacing(13),\n    },\n    media_variant_vertical: {\n        minWidth: 'initial',\n        maxWidth: 'initial',\n        minHeight: theme.spacing(20),\n        marginBottom: theme.spacing(2)\n    },\n    media_variant_horizontal: {\n        marginRight: theme.spacing(2),\n    }\n}));\n\nfunction VideoItem({\n    variant = 'horizontal',\n    primaryText,\n    durationSeconds,\n    primaryTextTo,\n    imageSrc,\n    secondaryText,\n    avatarSrc,\n    secondaryTextTo,\n    views,\n    labelText,\n    captionText,\n    createdAt,\n    showCheckIcon,\n    className,\n}: VideoItemProps) {\n    const classes = useStyles();\n\n    const primary = primaryText ? (\n        <Typography\n            className={classes.primaryText}\n            variant=\"body1\"\n            color=\"inherit\"\n            component={Link}\n            to={primaryTextTo}\n        >\n            {primaryText}\n        </Typography>\n    ) : null;\n\n    const checkIcon = showCheckIcon ? (\n        <Tooltip\n            title=\"Verified\"\n        >\n            <CheckCircleIcon\n                className={classes.checkIcon}\n                fontSize=\"inherit\"\n            />\n        </Tooltip>\n    ) : null;\n\n    const secondary = secondaryText ? (\n        <Typography\n            className={classes.secondaryText}\n            variant=\"inherit\"\n            color=\"inherit\"\n            component={Link}\n            to={secondaryTextTo}\n        >\n            {secondaryText}\n            {checkIcon}\n        </Typography>\n    ) : null;\n\n    const avatar = variant === 'vertical' && avatarSrc ? (\n        <ListItemAvatar>\n            <Avatar\n                src={avatarSrc || ''}\n                component={Link}\n                to={secondaryTextTo}\n            />\n        </ListItemAvatar>\n    ) : null;\n\n    const viewsNode = views ? (\n        <span className={classes.views}>\n            {toStringNumber(views)} views\n        </span>\n    ) : null;\n\n    const labelTextNode = labelText ?(\n        <span className={classes.labelText}>\n            {labelText}\n        </span>\n    ) : null;\n\n    const captionTextNode = captionText ? (\n        <span className={classes.captionText}>\n            {captionText}\n        </span>\n    ) : null;\n\n    const createdAtNode = variant === 'vertical' && createdAt ? (\n        <span className={classes.createdAt}>\n            {formatDistance(new Date(), createdAt)}\n        </span>\n    ) : null;\n\n    const videoThumbnail = imageSrc ? (\n        <VideoThumbnail\n            className={clsx(\n                classes.media, {\n                [classes.media_variant_vertical]: variant === 'vertical',\n                [classes.media_variant_horizontal]: variant === 'horizontal'\n            })}\n            src={imageSrc}\n            to={primaryTextTo}\n            durationSeconds={durationSeconds}\n        />\n    ) : null;\n\n    const listItemText = (\n        <ListItemText\n            className={classes.listItemText}\n            primary={primary}\n            secondary={\n                <>\n                    {secondary}\n                    {viewsNode}\n                    {labelTextNode}\n                    {captionTextNode}\n                    {createdAtNode}\n                </>\n            }\n        />\n    );\n\n    return (\n        <div\n            className={clsx(\n                className,\n                classes.root, {\n                [classes.root_variant_vertical]: variant === 'vertical'\n            })}\n        >\n            {videoThumbnail}\n            <ListItem\n                className={classes.listItem}\n                ContainerProps={{\n                    className: classes.container\n                }}\n            >\n                {avatar}\n                {listItemText}\n                <ListItemSecondaryAction>\n                    <VideoPopoverButton\n                    />\n                </ListItemSecondaryAction>\n            </ListItem>\n        </div>\n    );\n}\n\nexport default VideoItem;\n","import React from \"react\";\nimport Component, {VideoItemBaseProps} from \"./VideoItem\";\nimport {VideoModel} from \"../../../../models/VideoModel\";\n\nexport interface VideoItemProps extends VideoItemBaseProps, VideoModel {}\n\nfunction VideoItem(props: VideoItemProps) {\n    return (\n        <Component\n            {...props}\n            primaryText={props.title}\n            primaryTextTo={props.videoUrl}\n            durationSeconds={props.duration}\n            imageSrc={props.previewUrl}\n            secondaryText={props.channelName}\n            secondaryTextTo={props.channelUrl}\n            avatarSrc={props.channelAvatarUrl}\n            views={props.views}\n            captionText={props.isRecommended ? 'Recommended for you' : null}\n            labelText={props.isNew ? 'New' : null}\n            showCheckIcon={props.verified}\n            createdAt={props.createdAt}\n        />\n    )\n}\n\nexport default VideoItem;\n","import React from \"react\";\nimport {makeStyles, createStyles, Grid, Theme} from \"@material-ui/core\";\nimport VideoItem, {VideoItemProps} from \"../VideoItem\";\nimport Items, {ItemsProps} from \"../../../common/Items\";\n\nexport interface VideosGridProps {\n    onLoad: ItemsProps['onLoad'];\n}\n\nconst useStyles = makeStyles((theme: Theme) => createStyles({\n    root: {\n        width: '100%',\n        margin: 0\n    }\n}));\n\nfunction VideosGrid({ onLoad }: VideosGridProps) {\n    const classes = useStyles();\n\n    const renderItem = (item: VideoItemProps) => (\n        <Grid item xl={2} lg={3} md={4} sm={6} xs={12} key={item.id}>\n            <VideoItem\n                {...item}\n                variant=\"vertical\"\n            />\n        </Grid>\n    );\n\n    return (\n        <Grid\n            className={classes.root}\n            container\n            spacing={2}\n        >\n            <Items\n                renderItem={renderItem}\n                onLoad={onLoad}\n            />\n        </Grid>\n    )\n}\n\nexport default VideosGrid;\n","import React from \"react\";\nimport List from \"@material-ui/core/List\";\nimport VideoItem, {VideoItemProps} from \"../VideoItem\";\nimport {createStyles, makeStyles, Theme} from \"@material-ui/core/styles\";\nimport Items, {ItemsProps} from \"../../../common/Items\";\n\nexport interface RecommendationsListProps {\n    onLoad: ItemsProps<VideoItemProps>['onLoad'];\n}\n\nconst useStyles = makeStyles((theme: Theme) => createStyles({\n    item: {\n        marginBottom: theme.spacing(2),\n        '&:last-child': {\n            marginBottom: 0\n        }\n    }\n}));\n\nfunction VideosList({ onLoad }: RecommendationsListProps) {\n    const classes = useStyles();\n\n    const renderItem = (item: VideoItemProps) => (\n        <VideoItem\n            key={item.id}\n            className={classes.item}\n            {...item}\n        />\n    );\n\n    return (\n        <List\n            component=\"div\"\n            disablePadding\n        >\n            <Items\n                renderItem={renderItem}\n                onLoad={onLoad}\n            />\n        </List>\n    );\n}\n\nexport default VideosList;\n","import React, {useState} from \"react\";\nimport VideosGrid from \"./VideosGrid\";\nimport {ItemsProps} from \"../../common/Items\";\nimport VideosList from \"./VideosList\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport {createStyles, Theme, Typography} from \"@material-ui/core\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport ViewModuleIcon from \"@material-ui/icons/ViewModule\";\nimport ViewListIcon from \"@material-ui/icons/ViewList\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\n\nexport interface VideosProps {\n    initialVariant?: 'grid' | 'list';\n    onLoad: ItemsProps['onLoad'];\n    title?: string;\n}\n\nconst useStyles = makeStyles((theme: Theme) => createStyles({\n    toolbarAside: {\n        display: 'flex',\n        alignItems: 'center',\n        marginLeft: 'auto'\n    }\n}));\n\nfunction Videos({\n    initialVariant = 'list',\n    onLoad,\n    title\n}: VideosProps) {\n    const classes = useStyles();\n    const [variant, setVariant] = useState(initialVariant);\n\n    const toolbar = title ? (\n        <Toolbar disableGutters>\n            <Typography\n                variant=\"h6\"\n            >\n                {title}\n            </Typography>\n            <aside className={classes.toolbarAside}>\n                <Tooltip title=\"Grid\">\n                    <IconButton\n                        color={variant === 'grid' ? 'secondary' : 'default'}\n                        onClick={() => setVariant('grid')}\n                    >\n                        <ViewModuleIcon />\n                    </IconButton>\n                </Tooltip>\n                <Tooltip title=\"List\">\n                    <IconButton\n                        edge=\"end\"\n                        color={variant === 'list' ? 'secondary' : 'default'}\n                        onClick={() => setVariant('list')}\n                    >\n                        <ViewListIcon />\n                    </IconButton>\n                </Tooltip>\n            </aside>\n        </Toolbar>\n    ) : null;\n\n    const videos = (variant === 'grid') ? (\n        <VideosGrid onLoad={onLoad} />\n    ) : (\n        <VideosList onLoad={onLoad} />\n    );\n\n    return (\n        <>\n            {toolbar}\n            {videos}\n        </>\n    )\n}\n\nexport default Videos;\n","import React, {useState} from \"react\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport Checkbox, {CheckboxProps} from \"@material-ui/core/Checkbox\";\nimport ListItemText, {ListItemTextProps} from \"@material-ui/core/ListItemText\";\nimport ListItemSecondaryAction, {ListItemSecondaryActionProps} from \"@material-ui/core/ListItemSecondaryAction\";\nimport ListItem from \"@material-ui/core/ListItem\";\n\ninterface CheckboxListItemBaseProps {\n    primary: ListItemTextProps['primary'];\n    secondary?: ListItemTextProps['secondary'];\n    secondaryAction?: ListItemSecondaryActionProps['children'];\n    onChange?: (checked: boolean) => void;\n}\n\nexport type CheckboxListItemProps = CheckboxProps & CheckboxListItemBaseProps;\n\nfunction CheckboxListItem({\n    primary,\n    secondary,\n    secondaryAction,\n    onChange,\n    ...CheckboxProps\n}: CheckboxListItemProps) {\n    const [checked, setChecked] = useState(Boolean(CheckboxProps.checked));\n    const toggle = () => onChange ? onChange(checked) : setChecked(!checked);\n\n    const listItemSecondaryAction = secondaryAction ? (\n        <ListItemSecondaryAction>\n            {secondaryAction}\n        </ListItemSecondaryAction>\n    ) : null;\n\n    return (\n        <ListItem\n            dense\n            button\n            onClick={toggle}\n        >\n            <ListItemIcon>\n                <Checkbox\n                    {...CheckboxProps}\n                    checked={checked}\n                    onChange={toggle}\n                    edge=\"start\"\n                    disableRipple\n                />\n            </ListItemIcon>\n            <ListItemText\n                primary={primary}\n                secondary={secondary}\n            />\n            {listItemSecondaryAction}\n        </ListItem>\n    )\n}\n\nexport default CheckboxListItem;\n","import CheckboxListItem from \"../listItems/CheckboxListItem\";\nimport LockIcon from \"@material-ui/icons/Lock\";\nimport List from \"@material-ui/core/List\";\nimport Items, {ItemsProps} from \"./Items\";\nimport React from \"react\";\n\nexport interface MultiChoiceListItemProps {\n    label: string;\n    value: string;\n}\n\nexport interface MultipleChoiceListProps {\n    onLoad: ItemsProps['onLoad'];\n    itemToProps: (item: any) => MultiChoiceListItemProps\n}\n\nfunction MultipleChoiceList({\n    onLoad,\n    itemToProps\n}: MultipleChoiceListProps) {\n    const renderItem = (model: any) => {\n        const item: MultiChoiceListItemProps = itemToProps(model);\n        return (\n            <CheckboxListItem\n                key={item.value}\n                primary={item.label}\n                secondaryAction={\n                    <LockIcon color=\"action\" />\n                }\n            />\n        )\n    };\n\n    return (\n        <List disablePadding>\n            <Items\n                onLoad={onLoad}\n                renderItem={renderItem}\n            />\n        </List>\n    )\n}\n\nexport default MultipleChoiceList;\n","import MultipleChoiceList from \"../common/MultipleChoice\";\nimport {generatePlaylists} from \"../../services/playlistsService\";\nimport {PlaylistModel} from \"../../models/PlaylistModel\";\nimport React from \"react\";\n\nfunction PlaylistsMultipleChoice() {\n    return (\n        <MultipleChoiceList\n            onLoad={generatePlaylists}\n            itemToProps={(item: PlaylistModel) => ({\n                label: item.title,\n                value: item.id\n            })}\n        />\n    )\n}\n\nexport default PlaylistsMultipleChoice;\n","import React from \"react\";\nimport PlaylistAddIcon from \"@material-ui/icons/PlaylistAdd\";\nimport Button from \"@material-ui/core/Button\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport PlaylistsMultipleChoice from \"../core/PlaylistsMultipleChoice\";\nimport DialogTrigger, {DialogTriggerProps} from \"./DialogTrigger\";\n\nexport interface SaveToPlaylistTriggerProps {\n    renderTrigger?: DialogTriggerProps['renderTrigger'];\n}\n\nfunction SaveToPlaylistTrigger(props: SaveToPlaylistTriggerProps) {\n    const renderTrigger = props.renderTrigger || (\n        onClick => (\n            <Button\n                variant=\"text\"\n                startIcon={<PlaylistAddIcon />}\n                onClick={onClick}\n            >\n                Save\n            </Button>\n        )\n    );\n\n    return (\n        <DialogTrigger\n            title=\"Save to...\"\n            maxWidth=\"xs\"\n            content={<PlaylistsMultipleChoice />}\n            renderTrigger={renderTrigger}\n            renderActions={() => (\n                <Button\n                    startIcon={<AddIcon />}\n                >\n                    Create new playlist\n                </Button>\n            )}\n        />\n    )\n}\n\nexport default SaveToPlaylistTrigger;\n","import SingleChoiceList from \"./SingleChoiceList\";\n\nexport default SingleChoiceList;\n","import React from \"react\";\nimport MenuListItem from \"../common/MenuListItem\";\nimport FlagIcon from \"@material-ui/icons/Flag\";\nimport DialogTrigger, {DialogTriggerProps} from \"../triggers/DialogTrigger\";\nimport SingleChoiceList from \"../common/SingleChoice\";\nimport {Button} from \"@material-ui/core\";\n\nfunction ReportListItem() {\n    const title = 'Report';\n    const renderTrigger: DialogTriggerProps['renderTrigger'] = (onClick) => (\n        <MenuListItem\n            title={title}\n            icon={<FlagIcon />}\n            onClick={onClick}\n        />\n    );\n\n    const content = (\n        <SingleChoiceList\n            onLoad={async () => [\n                'Sexual content',\n                'Violent or repulsive content',\n                'Hateful or abusive content',\n                'Harmful or dangerous acts',\n                'Spam or misleading'\n            ]}\n            itemToProps={(reason: string) => ({\n                label: reason,\n                value: reason\n            })}\n        />\n    );\n\n    const renderActions: DialogTriggerProps['renderActions'] = onClose => (\n        <>\n            <Button onClick={onClose}>\n                Cancel\n            </Button>\n            <Button\n                color=\"secondary\"\n                onClick={onClose}\n            >\n                Report\n            </Button>\n        </>\n    );\n\n    return (\n        <DialogTrigger\n            title={title}\n            content={content}\n            renderTrigger={renderTrigger}\n            renderActions={renderActions}\n        />\n    )\n}\n\nexport default ReportListItem;\n"],"sourceRoot":""}