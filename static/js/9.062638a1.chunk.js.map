{"version":3,"sources":["pages/HomePage/HomePage.tsx","components/common/MenuListItem.tsx","components/triggers/DialogTrigger.tsx","services/videosService.ts","utils/numbers.ts","components/common/SingleChoice/SingleChoiceItem.tsx","components/common/SingleChoice/SingleChoiceList.tsx","components/triggers/SnackbarTrigger.tsx","components/Videos/VideoItem/VideoThumbnail.tsx","components/listItems/AddToQueueListItem.tsx","components/listItems/SaveToWatchLaterListItem.tsx","components/listItems/SaveToPlaylistListItem.tsx","components/listItems/NotInterestedListItem.tsx","components/listItems/NotRecommendListItem.tsx","components/Videos/VideoItem/VideoMenu.tsx","components/Videos/VideoItem/VideoPopoverButton.tsx","components/Videos/VideoItem/VideoItem.tsx","components/Videos/VideoItem/index.tsx","components/Videos/VideosGrid/index.tsx","components/Videos/VideosList/index.tsx","components/Videos/Videos.tsx","components/common/CheckboxListItem.tsx","components/common/MultipleChoice.tsx","components/PlaylistsMultipleChoice.tsx","components/triggers/SaveToPlaylistTrigger.tsx","components/common/SingleChoice/index.tsx","components/listItems/ReportListItem.tsx"],"names":["useStyles","makeStyles","theme","createStyles","main","padding","spacing","HomePage","classes","className","initialVariant","title","onLoad","generateGridVideos","MenuListItem","props","listItemIcon","icon","listItemSecondaryAction","endIcon","size","onClick","dense","button","selected","primary","content","actions","borderTop","palette","divider","DialogTrigger","maxWidth","renderTrigger","renderActions","useState","open","setOpen","handleToggle","closeButton","edge","dialogAppBar","endAction","dialogContent","dialogActions","dialog","onClose","a","async","Array","fill","map","item","index","id","faker","lorem","sentence","replace","duration","Math","round","random","videoUrl","previewUrl","channelAvatarUrl","image","avatar","channelName","company","companyName","channelUrl","views","verified","createdAt","date","past","generateListVideos","isNew","isRecommended","toStringNumber","number","fractionDigits","toFixed","SingleChoiceItem","label","variant","value","checked","Radio","style","opacity","checkedIcon","ListItem","ListItemIcon","ListItemText","SingleChoiceList","fromModelToProps","initialValue","onChange","setValue","List","Items","renderLoadMore","renderItem","model","SnackbarTrigger","handleClose","snackbar","Snackbar","anchorOrigin","horizontal","vertical","autoHideDuration","message","action","Button","color","trigger","buttonProps","position","right","backgroundColor","grey","common","white","minWidth","fullSizeProps","left","top","bottom","margin","root","height","borderRadius","shape","overflow","display","link","width","playArrowIcon","timeStatus","alignItems","justifyContent","watchLater","SaveToPlaylistTrigger","VideoThumbnail","src","to","durationSeconds","Typography","component","Date","toLocaleTimeString","substring","saveToWatchLaterButton","Tooltip","placement","aria-label","fontSize","saveToPlaylistTrigger","preview","alt","clsx","AddToQueueListItem","SaveToWatchLaterListItem","showSnackbar","SaveToPlaylistListItem","showPlaylists","NotInterestedListItem","NotRecommendListItem","VideoMenu","primaryList","secondaryList","ReportListItem","Divider","VideoPopoverButton","PopoverButton","renderContent","root_variant_vertical","flexDirection","listItem","paddingLeft","paddingTop","paddingBottom","container","listStyle","listItemText","marginTop","marginBottom","primaryText","textDecoration","lineHeight","secondaryText","whiteSpace","textOverflow","checkIcon","marginLeft","verticalAlign","labelText","typography","caption","A100","A400","captionText","media","flex","media_variant_vertical","minHeight","media_variant_horizontal","marginRight","VideoItem","primaryTextTo","imageSrc","avatarSrc","secondaryTextTo","showCheckIcon","Link","secondary","ListItemAvatar","Avatar","viewsNode","labelTextNode","captionTextNode","createdAtNode","formatDistance","videoThumbnail","ContainerProps","ListItemSecondaryAction","VideosGrid","Grid","xl","lg","md","sm","xs","key","VideosList","disablePadding","toolbarAside","Videos","setVariant","toolbar","Toolbar","disableGutters","IconButton","videos","CheckboxListItem","secondaryAction","CheckboxProps","Boolean","setChecked","toggle","Checkbox","disableRipple","MultipleChoiceList","PlaylistsMultipleChoice","MultipleChoice","generatePlaylists","startIcon","SingleChoice","reason"],"mappings":"yGAAA,8DAMMA,EAAYC,aAAW,SAACC,GAAD,OAAkBC,YAAa,CACxDC,KAAM,CACFC,QAASH,EAAMI,QAAQ,EAAG,EAAG,EAAG,SAoBzBC,UAhBf,WACI,IAAMC,EAAUR,IAEhB,OACI,oCACI,0BAAMS,UAAWD,EAAQJ,MACrB,kBAAC,UAAD,CACIM,eAAe,OACfC,MAAM,cACNC,OAAQC,U,iCCrB5B,iEAiDeC,IAlCf,SAAsBC,GAClB,IAAMC,EAAeD,EAAME,KACvB,kBAAC,IAAD,KACKF,EAAME,MAEX,KAEEC,EAA0BH,EAAMI,QAClC,kBAAC,IAAD,KACI,kBAAC,IAAD,CACIC,KAAK,QACLC,QAASN,EAAMM,SAEdN,EAAMI,UAGf,KAEJ,OACI,kBAAC,IAAD,CACIG,OAAK,EACLC,QAAM,EACNC,SAAUT,EAAMS,SAChBH,QAASN,EAAMM,SAEdL,EACD,kBAAC,IAAD,CACIS,QAASV,EAAMJ,QAElBO,K,6IC3BPlB,EAAYC,aAAW,SAACC,GAAD,OAAkBC,YAAa,CACxDuB,QAAS,CACLrB,QAAS,GAEbsB,QAAS,CACLC,UAAU,aAAD,OAAe1B,EAAM2B,QAAQC,eAiE/BC,IA7Df,YAMwB,IALpBpB,EAKmB,EALnBA,MACAqB,EAImB,EAJnBA,SACAC,EAGmB,EAHnBA,cACAP,EAEmB,EAFnBA,QACAQ,EACmB,EADnBA,cAEM1B,EAAUR,IADG,EAEKmC,oBAAS,GAFd,mBAEZC,EAFY,KAENC,EAFM,KAGbC,EAAe,kBAAMD,GAASD,IAE9BG,EACF,kBAAC,IAAD,CACIC,KAAK,MACLnB,QAASiB,GAET,kBAAC,IAAD,OAIFG,EAAe9B,EACjB,kBAAC,IAAD,CACIA,MAAOA,EACP+B,UAAWH,IAEf,KAEEI,EACF,kBAAC,IAAD,CAAelC,UAAWD,EAAQkB,SAC7BA,GAIHkB,EAAgBV,EAClB,kBAAC,IAAD,CAAezB,UAAWD,EAAQmB,SAC7BO,GAAc,kBAAMG,GAAQ,OAEjC,KAEEQ,EACF,kBAAC,IAAD,CACIT,KAAMA,EACNU,QAASR,EACTN,SAAUA,GAETS,EACAE,EACAC,GAIHrB,EAASU,EAAcK,GAE7B,OACI,oCACKf,EACAsB,K,2IC/EAhC,EAAqB,oBAAAkC,EAAAC,OAAA,yEAAmCC,MAAM,IACtEC,KAAK,MACLC,KAAI,SAACC,EAAMC,GAAP,MAAkB,CACnBC,GAAG,GAAD,OAAKD,GACP1C,MAAO4C,IAAMC,MAAMC,WAAWC,QAAQ,IAAK,IAC3CC,SAAUC,KAAKC,MAAsB,KAAhBD,KAAKE,UAC1BC,SAAS,YAAD,OAAcV,GACtBW,WAAY,sBACZC,iBAAkBV,IAAMW,MAAMC,SAC9BC,YAAab,IAAMc,QAAQC,cAC3BC,WAAW,YAAD,OAAclB,GACxBmB,MAAOZ,KAAKC,MAAsB,UAAhBD,KAAKE,UACvBW,SAAUb,KAAKE,SAAW,GAC1BY,UAAWnB,IAAMoB,KAAKC,YAbI,sCAgBrBC,EAAqB,oBAAA9B,EAAAC,OAAA,yEAAmCC,MAAM,IACtEC,KAAK,MACLC,KAAI,SAACC,EAAMC,GAAP,MAAkB,CACnBC,GAAG,GAAD,OAAKD,GACP1C,MAAO4C,IAAMC,MAAMC,WAAWC,QAAQ,IAAK,IAC3CC,SAAUC,KAAKC,MAAsB,KAAhBD,KAAKE,UAC1BC,SAAS,YAAD,OAAcV,GACtBW,WAAY,sBACZI,YAAab,IAAMc,QAAQC,cAC3BC,WAAW,YAAD,OAAclB,GACxByB,MAAOzB,EAAQ,IAAM,EACrB0B,cAAe1B,EAAQ,IAAM,EAC7BmB,MAAOZ,KAAKC,MAAsB,UAAhBD,KAAKE,UACvBW,SAAUb,KAAKE,SAAW,GAC1BY,UAAWnB,IAAMoB,KAAKC,YAdI,uC,iCCnB3B,SAASI,EAAeC,GAAqC,IAArBC,EAAoB,uDAAH,EAC5D,OACKD,GAAU,IAAX,WAA6BA,EAAS,KAAYE,QAAQD,GAA1D,KACCD,GAAU,IAAX,WAA0BA,EAAS,KAASE,QAAQD,GAApD,KACCD,GAAU,IAAX,WAAuBA,EAAS,KAAME,QAAQD,GAA9C,KACAD,EALR,mC,qICsDeG,MApCf,YAM2B,IALvBC,EAKsB,EALtBA,MAEAC,GAGsB,EAJtBC,MAIsB,EAHtBD,SACAE,EAEsB,EAFtBA,QACAnE,EACsB,EADtBA,QAEMJ,EAAmB,UAAZqE,EACT,kBAACG,EAAA,EAAD,CACIrE,KAAK,QACLoE,QAASA,EACTvE,KAAM,kBAAC,IAAD,CAAWyE,MAAO,CAACC,QAAS,KAClCC,YAAa,kBAAC,IAAD,QAGjB,kBAACH,EAAA,EAAD,CACID,QAASA,IAIjB,OACI,kBAACK,EAAA,EAAD,CACIvE,OAAK,EACLC,QAAM,EACNF,QAASA,GAET,kBAACyE,EAAA,EAAD,KACK7E,GAEL,kBAAC8E,EAAA,EAAD,CACItE,QAAS4D,MCAVW,IAnCf,YAM2B,IALvBV,EAKsB,EALtBA,QACA1E,EAIsB,EAJtBA,OACAqF,EAGsB,EAHtBA,iBAGsB,IAFtBC,oBAEsB,MAFP,GAEO,EADtBC,EACsB,EADtBA,SACsB,EACIhE,mBAAS+D,GADb,mBACfX,EADe,KACRa,EADQ,KAkBtB,OACI,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CACIC,eAAgB,KAChBC,WAnBO,SAACC,GAChB,IAAMrD,EAAO6C,EAAiBQ,GAC9B,OACI,kBAAC,EAAD,iBACQrD,EADR,CAEIkC,QAASA,EACTE,QAASD,IAAUnC,EAAKmC,MACxBlE,QAAS,WACL+E,EAAShD,EAAKmC,OACVY,GAAUA,EAAS/C,QAW3BxC,OAAQA,O,+SCIT8F,MArCf,SAAyB3F,GAA8B,IAAD,EAC1BoB,oBAAS,GADiB,mBAC3CC,EAD2C,KACrCC,EADqC,KAG5CsE,EAAc,kBAAMtE,GAAQ,IAE5BuE,EACF,kBAACC,EAAA,EAAD,CACIC,aAAc,CACVC,WAAY,OACZC,SAAU,UAEd5E,KAAMA,EACN6E,iBAAkB,IAClBC,QAASnG,EAAMmG,QACfpE,QAAS6D,EACTQ,OACI,kBAACC,EAAA,EAAD,CACIC,MAAM,YACNjG,KAAK,QACLC,QAASsF,GAHb,UAWNW,EAAUvG,EAAMkB,eAzBH,kBAAMI,GAAQ,MA2BjC,OACI,oCACKiF,EACAV,IC3BP5G,EAAYC,aAAW,SAACC,GAC1B,IAAMqH,EAAmC,CACrCC,SAAU,WACVC,MAAOvH,EAAMI,QAAQ,GACrBoH,gBAAiBxH,EAAM2B,QAAQ8F,KAAK,KACpCN,MAAOnH,EAAM2B,QAAQ+F,OAAOC,MAC5BC,SAAU,QAGRC,EAAqC,CACvCP,SAAU,WACVQ,KAAM,EACNP,MAAO,EACPQ,IAAK,EACLC,OAAQ,EACRC,OAAQ,QAGZ,OAAOhI,YAAa,CAChBiI,KAAM,CACFZ,SAAU,WACVa,OAAQ,IACRC,aAAcpI,EAAMqI,MAAMD,aAC1BE,SAAU,SACVd,gBAAiBxH,EAAM2B,QAAQ8F,KAAK,KACpCN,MAAOnH,EAAM2B,QAAQ+F,OAAOC,MAC5B,sCAAuC,CACnCY,QAAS,SAGjBC,KAAK,eACEX,GAEP7D,MAAM,eACC6D,EADF,CAEDY,MAAO,SAEXC,cAAc,aACVvB,MAAOnH,EAAM2B,QAAQ+F,OAAOC,OACzBE,GAEPc,WAAY,CACRJ,QAAS,cACTK,WAAY,SACZC,eAAgB,SAChBvB,SAAU,WACVnH,QAASH,EAAMI,QAAQ,KAAM,IAC7B4H,OAAQhI,EAAMI,QAAQ,GACtBmH,MAAOvH,EAAMI,QAAQ,GACrBgI,aAAcpI,EAAMqI,MAAMD,aAC1BZ,gBAAiBxH,EAAM2B,QAAQ8F,KAAK,KACpCN,MAAOnH,EAAM2B,QAAQ+F,OAAOC,OAEhCmB,WAAW,eACJzB,EADG,CAENU,IAAK/H,EAAMI,QAAQ,KAEvB2I,sBAAsB,eACf1B,EADc,CAEjBU,IAAK/H,EAAMI,QAAQ,aA0GhB4I,MA7Ff,YAOyB,IANrBC,EAMoB,EANpBA,IACAC,EAKoB,EALpBA,GACAC,EAIoB,EAJpBA,gBACA5I,EAGoB,EAHpBA,UAIMD,GADc,EAFpBkF,MAEoB,kEACJ1F,KAEV6I,EACF,kBAACS,EAAA,EAAD,CACI7I,UAAWD,EAAQqI,WACnBvD,QAAQ,UACRiE,UAAU,QAET,IAAIC,KAAKH,GAAiBI,qBAAqBC,UAAU,IAI5DC,EACF,kBAAC,EAAD,CACIzC,QAAS,yBACTjF,cAAe,SAAAZ,GAAO,OAClB,kBAACuI,EAAA,EAAD,CACIjJ,MAAM,cACNkJ,UAAU,QAEV,kBAACzC,EAAA,EAAD,CACI3G,UAAWD,EAAQwI,WACnB5H,KAAK,QACL0I,aAAW,SACXzI,QAASA,GAET,kBAAC,IAAD,CACI0I,SAAS,eAQ3BC,EACF,kBAACf,EAAA,EAAD,CACIhH,cAAe,SAAAZ,GAAO,OAClB,kBAACuI,EAAA,EAAD,CACIjJ,MAAM,mBACNkJ,UAAU,OACVC,aAAW,UAEX,kBAAC1C,EAAA,EAAD,CACI3G,UAAWD,EAAQyI,sBACnB7H,KAAK,QACLC,QAASA,GAET,kBAAC,IAAD,CACI0I,SAAS,eAQ3BE,EACF,kBAAC,IAAD,CACIxJ,UAAWD,EAAQkI,KACnBU,GAAIA,GAEJ,yBACI3I,UAAWD,EAAQ0D,MACnBiF,IAAKA,EACLe,IAAI,KAER,kBAAC,IAAD,CACIH,SAAS,QACTD,aAAW,SACXrJ,UAAWD,EAAQoI,iBAK/B,OACI,yBAAKnI,UAAW0J,YAAK3J,EAAQ4H,KAAM3H,IAC9BwJ,EACAN,EACAK,EACAnB,I,oCC5JEuB,MAVf,SAA4BrJ,GACxB,OACI,kBAACD,EAAA,EAAD,CACIH,MAAM,eACNM,KAAM,kBAAC,IAAD,MACNI,QAASN,EAAMM,WCgBZgJ,MApBf,YAA+E,IAA3ChJ,EAA0C,EAA1CA,QAYhC,OACI,kBAAC,EAAD,CACI6F,QAAS,yBACTjF,cAdqD,SAAAqI,GAAY,OACrE,kBAACxJ,EAAA,EAAD,CACIH,MAAO,wBACPM,KAAM,kBAAC,IAAD,MACNI,QAAS,WACDA,GAASA,IACbiJ,W,kBCYDC,MAnBf,YAA2E,IAAzClJ,EAAwC,EAAxCA,QAY9B,OACI,kBAAC4H,EAAA,EAAD,CACIhH,cAb2D,SAACuI,GAAD,OAC/D,kBAAC1J,EAAA,EAAD,CACIH,MAAO,mBACPM,KAAM,kBAAC,IAAD,MACNI,QAAS,WACLmJ,IACInJ,GAASA,W,kBCHdoJ,MATf,WACI,OACI,kBAAC3J,EAAA,EAAD,CACIH,MAAM,iBACNM,KAAM,kBAAC,IAAD,S,kBCKHyJ,MATf,WACI,OACI,kBAAC5J,EAAA,EAAD,CACIH,MAAM,0BACNM,KAAM,kBAAC,IAAD,S,SC4BH0J,MA1Bf,WACI,IAAMC,EACF,kBAACvE,EAAA,EAAD,KACI,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,OAIFwE,EACF,kBAACxE,EAAA,EAAD,KACI,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAACyE,EAAA,EAAD,OAIR,OACI,6BACKF,EACD,kBAACG,EAAA,EAAD,MACCF,I,QClBEG,OATf,WACI,OACI,kBAACC,EAAA,EAAD,CACIzI,KAAK,MACL0I,cAAe,kBAAM,kBAAC,EAAD,UC6B3BlL,GAAYC,aAAW,SAACC,GAAD,OAAkBC,YAAa,CACxDiI,KAAM,CACFK,QAAS,OACTK,WAAY,UAEhBqC,sBAAuB,CACnBC,cAAe,SACftC,WAAY,WAEhBuC,SAAU,CACNvC,WAAY,aACZwC,YAAa,EACbC,WAAY,EACZC,cAAe,GAEnBC,UAAW,CACPC,UAAW,OACXjD,QAAS,QACTE,MAAO,OACPH,SAAU,UAEdmD,aAAc,CACVC,UAAW,EACXC,aAAc,GAElBC,YAAa,CACTrD,QAAS,cACT,qBAAsB,WACtB,qBAAsB,EACtBD,SAAU,SACVuD,eAAgB,OAChBC,WAAY,KACZH,aAAc3L,EAAMI,QAAQ,KAEhC2L,cAAe,CACXxD,QAAS,QACTK,WAAY,SACZoD,WAAY,SACZC,aAAc,WACd3D,SAAU,SACVuD,eAAgB,QAEpBK,UAAW,CACPC,WAAYnM,EAAMI,QAAQ,IAC1BgM,cAAe,UAEnB9H,MAAO,CACHiE,QAAS,QACTyD,WAAY,SACZC,aAAc,WACd3D,SAAU,UAEd+D,UAAU,eACHrM,EAAMsM,WAAWC,QADf,CAEL/E,gBAAiBxH,EAAM2B,QAAQ8F,KAAK+E,KACpCrF,MAAOnH,EAAM2B,QAAQ8F,KAAKgF,KAC1BtM,QAASH,EAAMI,QAAQ,KAAM,IAC7BgI,aAAcpI,EAAMqI,MAAMD,eAE9BsE,YAAY,aACRnE,QAAS,SACNvI,EAAMsM,WAAWC,SAExB/H,UAAW,CACP+D,QAAS,SAEboE,MAAO,CACHC,KAAM,EACNhF,SAAU5H,EAAMI,QAAQ,IACxB0B,SAAU9B,EAAMI,QAAQ,IACxB+H,OAAQnI,EAAMI,QAAQ,KAE1ByM,uBAAwB,CACpBjF,SAAU,UACV9F,SAAU,UACVgL,UAAW9M,EAAMI,QAAQ,IACzBuL,aAAc3L,EAAMI,QAAQ,IAEhC2M,yBAA0B,CACtBC,YAAahN,EAAMI,QAAQ,SAmJpB6M,OA/If,YAeoB,IAAD,MAdf7H,eAce,MAdL,aAcK,EAbfwG,EAae,EAbfA,YACAzC,EAYe,EAZfA,gBACA+D,EAWe,EAXfA,cACAC,EAUe,EAVfA,SACApB,EASe,EATfA,cACAqB,EAQe,EARfA,UACAC,EAOe,EAPfA,gBACA/I,EAMe,EANfA,MACA+H,EAKe,EALfA,UACAK,EAIe,EAJfA,YACAlI,EAGe,EAHfA,UACA8I,EAEe,EAFfA,cACA/M,EACe,EADfA,UAEMD,EAAUR,KAEVyB,EAAUqK,EACZ,kBAACxC,EAAA,EAAD,CACI7I,UAAWD,EAAQsL,YACnBxG,QAAQ,QACR+B,MAAM,UACNkC,UAAWkE,IACXrE,GAAIgE,GAEHtB,GAEL,KAEEM,EAAYoB,EACd,kBAAC5D,EAAA,EAAD,CACIjJ,MAAM,YAEN,kBAAC,IAAD,CACIF,UAAWD,EAAQ4L,UACnBrC,SAAS,aAGjB,KAEE2D,EAAYzB,EACd,kBAAC3C,EAAA,EAAD,CACI7I,UAAWD,EAAQyL,cACnB3G,QAAQ,UACR+B,MAAM,UACNkC,UAAWkE,IACXrE,GAAImE,GAEHtB,EACAG,GAEL,KAEEjI,EAAqB,aAAZmB,GAA0BgI,EACrC,kBAACK,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CACIzE,IAAKmE,GAAa,GAClB/D,UAAWkE,IACXrE,GAAImE,KAGZ,KAEEM,EAAYrJ,EACd,0BAAM/D,UAAWD,EAAQgE,OACpBQ,YAAeR,GADpB,UAGA,KAEEsJ,EAAgBvB,EAClB,0BAAM9L,UAAWD,EAAQ+L,WACpBA,GAEL,KAEEwB,EAAkBnB,EACpB,0BAAMnM,UAAWD,EAAQoM,aACpBA,GAEL,KAEEoB,EAA4B,aAAZ1I,GAA0BZ,EAC5C,0BAAMjE,UAAWD,EAAQkE,WACpBuJ,YAAe,IAAIzE,KAAQ9E,IAEhC,KAEEwJ,EAAiBb,EACnB,kBAAC,EAAD,CACI5M,UAAW0J,YACP3J,EAAQqM,OADG,mBAEVrM,EAAQuM,uBAAqC,aAAZzH,GAFvB,cAGV9E,EAAQyM,yBAAuC,eAAZ3H,GAHzB,IAKf6D,IAAKkE,EACLjE,GAAIgE,EACJ/D,gBAAiBA,IAErB,KAEEsC,EACF,kBAAC5F,EAAA,EAAD,CACItF,UAAWD,EAAQmL,aACnBlK,QAASA,EACTiM,UACI,oCACKA,EACAG,EACAC,EACAC,EACAC,KAMjB,OACI,yBACIvN,UAAW0J,YACP1J,EACAD,EAAQ4H,KAFG,eAGV5H,EAAQ2K,sBAAoC,aAAZ7F,KAGpC4I,EACD,kBAACrI,EAAA,EAAD,CACIpF,UAAWD,EAAQ6K,SACnB8C,eAAgB,CACZ1N,UAAWD,EAAQiL,YAGtBtH,EACAwH,EACD,kBAACyC,EAAA,EAAD,KACI,kBAAC,GAAD,UCrOLjB,OApBf,SAAmBpM,GACf,OACI,kBAAC,GAAD,iBACQA,EADR,CAEI+K,YAAa/K,EAAMJ,MACnByM,cAAerM,EAAMgD,SACrBsF,gBAAiBtI,EAAM4C,SACvB0J,SAAUtM,EAAMiD,WAChBiI,cAAelL,EAAMqD,YACrBmJ,gBAAiBxM,EAAMwD,WACvB+I,UAAWvM,EAAMkD,iBACjBO,MAAOzD,EAAMyD,MACboI,YAAa7L,EAAMgE,cAAgB,sBAAwB,KAC3DwH,UAAWxL,EAAM+D,MAAQ,MAAQ,KACjC0I,cAAezM,EAAM0D,SACrBC,UAAW3D,EAAM2D,c,UCZvB1E,GAAYC,aAAW,SAACC,GAAD,OAAkBC,YAAa,CACxDiI,KAAM,CACFO,MAAO,OACPR,OAAQ,QA8BDkG,OA1Bf,YAAkD,IAA5BzN,EAA2B,EAA3BA,OACZJ,EAAUR,KAWhB,OACI,kBAACsO,EAAA,EAAD,CACI7N,UAAWD,EAAQ4H,KACnBqD,WAAS,EACTnL,QAAS,GAET,kBAACgG,GAAA,EAAD,CACIE,WAhBO,SAACpD,GAAD,OACf,kBAACkL,EAAA,EAAD,CAAMlL,MAAI,EAACmL,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAIC,IAAKxL,EAAKE,IACrD,kBAAC,GAAD,iBACQF,EADR,CAEIkC,QAAQ,gBAaR1E,OAAQA,MC1BlBZ,GAAYC,aAAW,SAACC,GAAD,OAAkBC,YAAa,CACxDiD,KAAM,CACFyI,aAAc3L,EAAMI,QAAQ,GAC5B,eAAgB,CACZuL,aAAc,SA6BXgD,OAxBf,YAA2D,IAArCjO,EAAoC,EAApCA,OACZJ,EAAUR,KAUhB,OACI,kBAACqG,EAAA,EAAD,CACIkD,UAAU,MACVuF,gBAAc,GAEd,kBAACxI,GAAA,EAAD,CACIE,WAdO,SAACpD,GAAD,OACf,kBAAC,GAAD,eACIwL,IAAKxL,EAAKE,GACV7C,UAAWD,EAAQ4C,MACfA,KAWAxC,OAAQA,M,8DCnBlBZ,GAAYC,aAAW,SAACC,GAAD,OAAkBC,YAAa,CACxD4O,aAAc,CACVtG,QAAS,OACTK,WAAY,SACZuD,WAAY,aAuDL2C,UAnDf,YAIiB,IAAD,IAHZtO,sBAGY,MAHK,OAGL,EAFZE,EAEY,EAFZA,OACAD,EACY,EADZA,MAEMH,EAAUR,KADJ,EAEkBmC,mBAASzB,GAF3B,mBAEL4E,EAFK,KAEI2J,EAFJ,KAINC,EAAUvO,EACZ,kBAACwO,GAAA,EAAD,CAASC,gBAAc,GACnB,kBAAC9F,EAAA,EAAD,CACIhE,QAAQ,MAEP3E,GAEL,2BAAOF,UAAWD,EAAQuO,cACtB,kBAACnF,EAAA,EAAD,CAASjJ,MAAM,QACX,kBAAC0O,GAAA,EAAD,CACIhI,MAAmB,SAAZ/B,EAAqB,YAAc,UAC1CjE,QAAS,kBAAM4N,EAAW,UAE1B,kBAAC,KAAD,QAGR,kBAACrF,EAAA,EAAD,CAASjJ,MAAM,QACX,kBAAC0O,GAAA,EAAD,CACI7M,KAAK,MACL6E,MAAmB,SAAZ/B,EAAqB,YAAc,UAC1CjE,QAAS,kBAAM4N,EAAW,UAE1B,kBAAC,KAAD,UAKhB,KAEEK,EAAsB,SAAZhK,EACZ,kBAAC,GAAD,CAAY1E,OAAQA,IAEpB,kBAAC,GAAD,CAAYA,OAAQA,IAGxB,OACI,oCACKsO,EACAI,K,+JChBEC,MAxCf,YAM2B,IALvB9N,EAKsB,EALtBA,QACAiM,EAIsB,EAJtBA,UACA8B,EAGsB,EAHtBA,gBACArJ,EAEsB,EAFtBA,SACGsJ,EACmB,sEACQtN,mBAASuN,QAAQD,EAAcjK,UADvC,mBACfA,EADe,KACNmK,EADM,KAEhBC,EAAS,kBAAMzJ,EAAWA,EAASX,GAAWmK,GAAYnK,IAE1DtE,EAA0BsO,EAC5B,kBAACpB,EAAA,EAAD,KACKoB,GAEL,KAEJ,OACI,kBAAC3J,EAAA,EAAD,CACIvE,OAAK,EACLC,QAAM,EACNF,QAASuO,GAET,kBAAC9J,EAAA,EAAD,KACI,kBAAC+J,EAAA,EAAD,iBACQJ,EADR,CAEIjK,QAASA,EACTW,SAAUyJ,EACVpN,KAAK,QACLsN,eAAa,MAGrB,kBAAC/J,EAAA,EAAD,CACItE,QAASA,EACTiM,UAAWA,IAEdxM,I,oCCRE6O,MA3Bf,YAG6B,IAFzBnP,EAEwB,EAFxBA,OACAqF,EACwB,EADxBA,iBAeA,OACI,kBAACI,EAAA,EAAD,CAAMyI,gBAAc,GAChB,kBAACxI,EAAA,EAAD,CACI1F,OAAQA,EACR4F,WAjBO,SAACC,GAChB,IAAMrD,EAAiC6C,EAAiBQ,GACxD,OACI,kBAAC,EAAD,CACImI,IAAKxL,EAAKmC,MACV9D,QAAS2B,EAAKiC,MACdmK,gBACI,kBAAC,IAAD,CAAUnI,MAAM,kB,SCVrB2I,MAZf,WACI,OACI,kBAACC,EAAD,CACIrP,OAAQsP,IACRjK,iBAAkB,SAAC7C,GAAD,MAA0B,CACxCiC,MAAOjC,EAAKzC,MACZ4E,MAAOnC,EAAKE,Q,SC8Bb2F,IA9Bf,SAA+BlI,GAC3B,IAAMkB,EAAgBlB,EAAMkB,eACxB,SAAAZ,GAAO,OACH,kBAAC+F,EAAA,EAAD,CACI9B,QAAQ,OACR6K,UAAW,kBAAC,IAAD,MACX9O,QAASA,GAHb,SAUR,OACI,kBAACU,EAAA,EAAD,CACIpB,MAAM,aACNqB,SAAS,KACTN,QAAS,kBAAC,EAAD,MACTO,cAAeA,EACfC,cAAe,kBACX,kBAACkF,EAAA,EAAD,CACI+I,UAAW,kBAAC,IAAD,OADf,4B,0GC7BDnK,E,OAAf,E,SCuDe8E,IAlDf,WACI,IASMpJ,EACF,kBAAC0O,EAAD,CACIxP,OAAQ,oBAAAmC,EAAAC,OAAA,yEAAY,CAChB,iBACA,+BACA,6BACA,4BACA,uBALI,sCAORiD,iBAAkB,SAACoK,GAAD,MAAqB,CACnChL,MAAOgL,EACP9K,MAAO8K,MAmBnB,OACI,kBAACtO,EAAA,EAAD,CACIpB,MAzCM,SA0CNe,QAASA,EACTO,cA1CmD,SAACZ,GAAD,OACvD,kBAACP,EAAA,EAAD,CACIH,MAHM,SAINM,KAAM,kBAAC,IAAD,MACNI,QAASA,KAuCTa,cAnBmD,SAAAY,GAAO,OAC9D,oCACI,kBAACsE,EAAA,EAAD,CAAQ/F,QAASyB,GAAjB,UAGA,kBAACsE,EAAA,EAAD,CACIC,MAAM,YACNhG,QAASyB,GAFb","file":"static/js/9.062638a1.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {createStyles, Theme} from \"@material-ui/core\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport Videos from \"../../components/Videos/Videos\";\r\nimport {generateGridVideos} from \"../../services/videosService\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) => createStyles({\r\n    main: {\r\n        padding: theme.spacing(0, 2, 2, 2)\r\n    }\r\n}));\r\n\r\nfunction HomePage() {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <>\r\n            <main className={classes.main}>\r\n                <Videos\r\n                    initialVariant=\"grid\"\r\n                    title=\"Recommended\"\r\n                    onLoad={generateGridVideos}\r\n                />\r\n            </main>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default HomePage;\r\n","import ListItem, {ListItemProps} from \"@material-ui/core/ListItem\";\r\nimport React from \"react\";\r\nimport {ListItemIcon, ListItemIconProps, ListItemSecondaryActionProps, ListItemTextProps} from \"@material-ui/core\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\n\r\nexport interface MenuListItemProps {\r\n    title: ListItemTextProps['primary'];\r\n    icon?: ListItemIconProps['children'];\r\n    endIcon?: ListItemSecondaryActionProps['children'];\r\n    selected?: ListItemProps['selected'];\r\n    onClick?: () => void;\r\n}\r\n\r\nfunction MenuListItem(props: MenuListItemProps) {\r\n    const listItemIcon = props.icon ? (\r\n        <ListItemIcon>\r\n            {props.icon}\r\n        </ListItemIcon>\r\n    ) : null;\r\n\r\n    const listItemSecondaryAction = props.endIcon ? (\r\n        <ListItemSecondaryAction>\r\n            <IconButton\r\n                size=\"small\"\r\n                onClick={props.onClick}\r\n            >\r\n                {props.endIcon}\r\n            </IconButton>\r\n        </ListItemSecondaryAction>\r\n    ) : null;\r\n\r\n    return (\r\n        <ListItem\r\n            dense\r\n            button\r\n            selected={props.selected}\r\n            onClick={props.onClick}\r\n        >\r\n            {listItemIcon}\r\n            <ListItemText\r\n                primary={props.title}\r\n            />\r\n            {listItemSecondaryAction}\r\n        </ListItem>\r\n    )\r\n}\r\n\r\nexport default MenuListItem;\r\n","import React, {ReactElement, ReactNode, useState} from \"react\";\r\nimport {createStyles, Dialog, DialogProps, Theme} from \"@material-ui/core\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport PopoverAppBar, {PopoverAppBarProps} from \"../PopoverAppBar\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\n\r\nexport interface DialogTriggerProps {\r\n    content: DialogProps['children'];\r\n    renderTrigger: (onClick: VoidFunction) => ReactElement;\r\n    renderActions?: (onClose: VoidFunction) => ReactNode;\r\n    title?: PopoverAppBarProps['title'];\r\n    maxWidth?: DialogProps['maxWidth'];\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) => createStyles({\r\n    content: {\r\n        padding: 0\r\n    },\r\n    actions: {\r\n        borderTop: `1px solid ${theme.palette.divider}`\r\n    }\r\n}));\r\n\r\nfunction DialogTrigger({\r\n    title,\r\n    maxWidth,\r\n    renderTrigger,\r\n    content,\r\n    renderActions\r\n}: DialogTriggerProps) {\r\n    const classes = useStyles();\r\n    const [open, setOpen] = useState(false);\r\n    const handleToggle = () => setOpen(!open);\r\n\r\n    const closeButton = (\r\n        <IconButton\r\n            edge=\"end\"\r\n            onClick={handleToggle}\r\n        >\r\n            <CloseIcon />\r\n        </IconButton>\r\n    );\r\n\r\n    const dialogAppBar = title ? (\r\n        <PopoverAppBar\r\n            title={title}\r\n            endAction={closeButton}\r\n        />\r\n    ) : null;\r\n\r\n    const dialogContent = (\r\n        <DialogContent className={classes.content}>\r\n            {content}\r\n        </DialogContent>\r\n    );\r\n\r\n    const dialogActions = renderActions ? (\r\n        <DialogActions className={classes.actions}>\r\n            {renderActions(() => setOpen(false))}\r\n        </DialogActions>\r\n    ) : null;\r\n\r\n    const dialog = (\r\n        <Dialog\r\n            open={open}\r\n            onClose={handleToggle}\r\n            maxWidth={maxWidth}\r\n        >\r\n            {dialogAppBar}\r\n            {dialogContent}\r\n            {dialogActions}\r\n        </Dialog>\r\n    );\r\n\r\n    const button = renderTrigger(handleToggle);\r\n\r\n    return (\r\n        <>\r\n            {button}\r\n            {dialog}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default DialogTrigger;\r\n","import faker from \"faker/locale/en\";\r\nimport {VideoModel} from \"../models/VideoModel\";\r\n\r\nexport const generateGridVideos = async (): Promise<VideoModel[]> => Array(12)\r\n    .fill(null)\r\n    .map((item, index) => ({\r\n        id: `${index}`,\r\n        title: faker.lorem.sentence().replace('.', ''),\r\n        duration: Math.round(Math.random() * 36000000),\r\n        videoUrl: `/watch?v=${index}`,\r\n        previewUrl: 'https://invalid_url',\r\n        channelAvatarUrl: faker.image.avatar(),\r\n        channelName: faker.company.companyName(),\r\n        channelUrl: `/channel/${index}`,\r\n        views: Math.round(Math.random() * 999999999),\r\n        verified: Math.random() > 0.5,\r\n        createdAt: faker.date.past()\r\n    }));\r\n\r\nexport const generateListVideos = async (): Promise<VideoModel[]> => Array(12)\r\n    .fill(null)\r\n    .map((item, index) => ({\r\n        id: `${index}`,\r\n        title: faker.lorem.sentence().replace('.', ''),\r\n        duration: Math.round(Math.random() * 36000000),\r\n        videoUrl: `/watch?v=${index}`,\r\n        previewUrl: 'https://invalid_url',\r\n        channelName: faker.company.companyName(),\r\n        channelUrl: `/channel/${index}`,\r\n        isNew: index % 2 === 0,\r\n        isRecommended: index % 2 === 1,\r\n        views: Math.round(Math.random() * 999999999),\r\n        verified: Math.random() > 0.5,\r\n        createdAt: faker.date.past()\r\n    }));\r\n","export function toStringNumber(number: number, fractionDigits = 1) {\r\n    return (\r\n        (number >= 1000000000) ? `${(number / 1000000000).toFixed(fractionDigits)}B` :\r\n        (number >= 1000000) ? `${(number / 1000000).toFixed(fractionDigits)}M` :\r\n        (number >= 1000) ? `${(number / 1000).toFixed(fractionDigits)}K` :\r\n        number\r\n    );\r\n}\r\n","import ListItemText from \"@material-ui/core/ListItemText\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport CheckIcon from \"@material-ui/icons/Check\";\r\nimport React from \"react\";\r\nimport {Radio} from \"@material-ui/core\";\r\n\r\nexport interface SingleChoiceItemBaseProps {\r\n    label: string;\r\n    value: string;\r\n}\r\n\r\nexport interface SingleChoiceItemProps extends SingleChoiceItemBaseProps {\r\n    variant?: 'check' | 'radio';\r\n    checked?: boolean;\r\n    onClick?: () => void;\r\n}\r\n\r\nfunction SingleChoiceItem({\r\n    label,\r\n    value,\r\n    variant ,\r\n    checked,\r\n    onClick\r\n}: SingleChoiceItemProps) {\r\n    const icon = variant === 'check' ? (\r\n        <Radio\r\n            size=\"small\"\r\n            checked={checked}\r\n            icon={<CheckIcon style={{opacity: 0}} />}\r\n            checkedIcon={<CheckIcon />}\r\n        />\r\n    ) : (\r\n        <Radio\r\n            checked={checked}\r\n        />\r\n    );\r\n\r\n    return (\r\n        <ListItem\r\n            dense\r\n            button\r\n            onClick={onClick}\r\n        >\r\n            <ListItemIcon>\r\n                {icon}\r\n            </ListItemIcon>\r\n            <ListItemText\r\n                primary={label}\r\n            />\r\n        </ListItem>\r\n    )\r\n}\r\n\r\nexport default SingleChoiceItem;\r\n","import React, {useState} from \"react\";\r\nimport {List} from \"@material-ui/core\";\r\nimport Items, {ItemsProps} from \"../Items\";\r\nimport SingleChoiceItem, {SingleChoiceItemBaseProps, SingleChoiceItemProps} from \"./SingleChoiceItem\";\r\n\r\nexport interface SingleChoiceListProps<T = any> {\r\n    onLoad: ItemsProps['onLoad'];\r\n    fromModelToProps: (model: any) => SingleChoiceItemBaseProps;\r\n    variant?: SingleChoiceItemProps['variant'];\r\n    initialValue?: SingleChoiceItemProps['value'];\r\n    onChange?: (item: SingleChoiceItemBaseProps) => void;\r\n}\r\n\r\nfunction SingleChoiceList({\r\n    variant,\r\n    onLoad,\r\n    fromModelToProps,\r\n    initialValue = '',\r\n    onChange\r\n}: SingleChoiceListProps) {\r\n    const [value, setValue] = useState(initialValue);\r\n\r\n    const renderItem = (model: any) => {\r\n        const item = fromModelToProps(model);\r\n        return (\r\n            <SingleChoiceItem\r\n                {...item}\r\n                variant={variant}\r\n                checked={value === item.value}\r\n                onClick={() => {\r\n                    setValue(item.value);\r\n                    if (onChange) onChange(item);\r\n                }}\r\n            />\r\n        )\r\n    };\r\n\r\n    return (\r\n        <List>\r\n            <Items\r\n                renderLoadMore={null}\r\n                renderItem={renderItem}\r\n                onLoad={onLoad}\r\n            />\r\n        </List>\r\n    );\r\n}\r\n\r\nexport default SingleChoiceList;\r\n","import React, {ReactElement, useState} from \"react\";\r\nimport {Snackbar, SnackbarProps} from \"@material-ui/core\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nexport interface SnackbarTriggerProps {\r\n    message: SnackbarProps['message'];\r\n    renderTrigger: (onClick: VoidFunction) => ReactElement;\r\n}\r\n\r\nfunction SnackbarTrigger(props: SnackbarTriggerProps) {\r\n    const [open, setOpen] = useState(false);\r\n    const handleOpen = () => setOpen(true);\r\n    const handleClose = () => setOpen(false);\r\n\r\n    const snackbar = (\r\n        <Snackbar\r\n            anchorOrigin={{\r\n                horizontal: 'left',\r\n                vertical: 'bottom'\r\n            }}\r\n            open={open}\r\n            autoHideDuration={5000}\r\n            message={props.message}\r\n            onClose={handleClose}\r\n            action={\r\n                <Button\r\n                    color=\"secondary\"\r\n                    size=\"small\"\r\n                    onClick={handleClose}\r\n                >\r\n                    UNDO\r\n                </Button>\r\n            }\r\n        />\r\n    );\r\n\r\n    const trigger = props.renderTrigger(handleOpen);\r\n\r\n    return (\r\n        <>\r\n            {trigger}\r\n            {snackbar}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SnackbarTrigger;\r\n","import React from \"react\";\r\nimport {createStyles, makeStyles, Theme} from \"@material-ui/core/styles\";\r\nimport PlayArrowIcon from \"@material-ui/icons/PlayArrow\";\r\nimport clsx from \"clsx\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport WatchLaterIcon from \"@material-ui/icons/WatchLater\";\r\nimport PlaylistPlayIcon from \"@material-ui/icons/PlaylistPlay\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {CreateCSSProperties} from \"@material-ui/styles/withStyles\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport {Link} from \"react-router-dom\";\r\nimport SaveToPlaylistTrigger from \"../../triggers/SaveToPlaylistTrigger\";\r\nimport SnackbarTrigger from \"../../triggers/SnackbarTrigger\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) => {\r\n    const buttonProps: CreateCSSProperties = {\r\n        position: 'absolute',\r\n        right: theme.spacing(1),\r\n        backgroundColor: theme.palette.grey[\"900\"],\r\n        color: theme.palette.common.white,\r\n        minWidth: 'auto',\r\n    };\r\n\r\n    const fullSizeProps: CreateCSSProperties = {\r\n        position: 'absolute',\r\n        left: 0,\r\n        right: 0,\r\n        top: 0,\r\n        bottom: 0,\r\n        margin: 'auto'\r\n    };\r\n\r\n    return createStyles({\r\n        root: {\r\n            position: 'relative',\r\n            height: 104,\r\n            borderRadius: theme.shape.borderRadius,\r\n            overflow: 'hidden',\r\n            backgroundColor: theme.palette.grey[\"800\"],\r\n            color: theme.palette.common.white,\r\n            '&:not(:hover) [aria-label=\"button\"]': {\r\n                display: 'none'\r\n            }\r\n        },\r\n        link: {\r\n            ...fullSizeProps\r\n        },\r\n        image: {\r\n            ...fullSizeProps,\r\n            width: '100%',\r\n        },\r\n        playArrowIcon: {\r\n            color: theme.palette.common.white,\r\n            ...fullSizeProps,\r\n        },\r\n        timeStatus: {\r\n            display: 'inline-flex',\r\n            alignItems: 'center',\r\n            justifyContent: 'center',\r\n            position: 'absolute',\r\n            padding: theme.spacing(.125, .5),\r\n            bottom: theme.spacing(1),\r\n            right: theme.spacing(1),\r\n            borderRadius: theme.shape.borderRadius,\r\n            backgroundColor: theme.palette.grey[\"900\"],\r\n            color: theme.palette.common.white\r\n        },\r\n        watchLater: {\r\n            ...buttonProps,\r\n            top: theme.spacing(1),\r\n        },\r\n        SaveToPlaylistTrigger: {\r\n            ...buttonProps,\r\n            top: theme.spacing(5.25),\r\n        }\r\n    });\r\n});\r\n\r\nexport interface VideoThumbnailProps {\r\n    src: string;\r\n    to: string;\r\n    durationSeconds: number;\r\n    className?: string;\r\n    [key: string]: any;\r\n}\r\n\r\nfunction VideoThumbnail({\r\n    src,\r\n    to,\r\n    durationSeconds,\r\n    className,\r\n    style,\r\n    ...otherProps\r\n}: VideoThumbnailProps) {\r\n    const classes = useStyles();\r\n\r\n    const timeStatus = (\r\n        <Typography\r\n            className={classes.timeStatus}\r\n            variant=\"caption\"\r\n            component=\"span\"\r\n        >\r\n            {new Date(durationSeconds).toLocaleTimeString().substring(3)}\r\n        </Typography>\r\n    );\r\n\r\n    const saveToWatchLaterButton = (\r\n        <SnackbarTrigger\r\n            message={'Saved to \"Watch later\"'}\r\n            renderTrigger={onClick => (\r\n                <Tooltip\r\n                    title=\"Watch later\"\r\n                    placement=\"left\"\r\n                >\r\n                    <Button\r\n                        className={classes.watchLater}\r\n                        size=\"small\"\r\n                        aria-label=\"button\"\r\n                        onClick={onClick}\r\n                    >\r\n                        <WatchLaterIcon\r\n                            fontSize=\"small\"\r\n                        />\r\n                    </Button>\r\n                </Tooltip>\r\n            )}\r\n        />\r\n    );\r\n\r\n    const saveToPlaylistTrigger = (\r\n        <SaveToPlaylistTrigger\r\n            renderTrigger={onClick => (\r\n                <Tooltip\r\n                    title=\"Save to playlist\"\r\n                    placement=\"left\"\r\n                    aria-label=\"button\"\r\n                >\r\n                    <Button\r\n                        className={classes.SaveToPlaylistTrigger}\r\n                        size=\"small\"\r\n                        onClick={onClick}\r\n                    >\r\n                        <PlaylistPlayIcon\r\n                            fontSize=\"small\"\r\n                        />\r\n                    </Button>\r\n                </Tooltip>\r\n            )}\r\n        />\r\n    );\r\n\r\n    const preview = (\r\n        <Link\r\n            className={classes.link}\r\n            to={to}\r\n        >\r\n            <img\r\n                className={classes.image}\r\n                src={src}\r\n                alt=\"\"\r\n            />\r\n            <PlayArrowIcon\r\n                fontSize=\"large\"\r\n                aria-label=\"button\"\r\n                className={classes.playArrowIcon}\r\n            />\r\n        </Link>\r\n    );\r\n\r\n    return (\r\n        <div className={clsx(classes.root, className)}>\r\n            {preview}\r\n            {saveToWatchLaterButton}\r\n            {saveToPlaylistTrigger}\r\n            {timeStatus}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default VideoThumbnail;\r\n","import React from \"react\";\r\nimport MenuListItem, {MenuListItemProps} from \"../common/MenuListItem\";\r\nimport PlaylistPlayIcon from \"@material-ui/icons/PlaylistPlay\";\r\n\r\nexport interface AddToQueueListItemProps {\r\n    onClick?: MenuListItemProps['onClick'];\r\n}\r\n\r\nfunction AddToQueueListItem(props: AddToQueueListItemProps) {\r\n    return (\r\n        <MenuListItem\r\n            title=\"Add to queue\"\r\n            icon={<PlaylistPlayIcon />}\r\n            onClick={props.onClick}\r\n        />\r\n    )\r\n}\r\n\r\nexport default AddToQueueListItem;\r\n","import React from \"react\";\r\nimport MenuListItem, {MenuListItemProps} from \"../common/MenuListItem\";\r\nimport WatchLaterIcon from \"@material-ui/icons/WatchLater\";\r\nimport SnackbarTrigger, {SnackbarTriggerProps} from \"../triggers/SnackbarTrigger\";\r\n\r\nexport interface SaveToWatchLaterListItemProps {\r\n    onClick?: MenuListItemProps['onClick'];\r\n}\r\n\r\nfunction SaveToWatchLaterListItem({ onClick }: SaveToWatchLaterListItemProps) {\r\n    const renderTrigger: SnackbarTriggerProps['renderTrigger'] = showSnackbar => (\r\n        <MenuListItem\r\n            title={'Save to \"Watch later\"'}\r\n            icon={<WatchLaterIcon />}\r\n            onClick={() => {\r\n                if (onClick) onClick();\r\n                showSnackbar();\r\n            }}\r\n        />\r\n    );\r\n\r\n    return (\r\n        <SnackbarTrigger\r\n            message={'Saved to \"Watch later\"'}\r\n            renderTrigger={renderTrigger}\r\n        />\r\n    )\r\n}\r\n\r\nexport default SaveToWatchLaterListItem;\r\n","import React from \"react\";\r\nimport MenuListItem, {MenuListItemProps} from \"../common/MenuListItem\";\r\nimport PlaylistAddIcon from \"@material-ui/icons/PlaylistAdd\";\r\nimport SaveToPlaylistTrigger, {SaveToPlaylistTriggerProps} from \"../triggers/SaveToPlaylistTrigger\";\r\n\r\nexport interface SaveToPlaylistListItemProps {\r\n    onClick?: MenuListItemProps['onClick'];\r\n}\r\n\r\nfunction SaveToPlaylistListItem({ onClick }: SaveToPlaylistListItemProps) {\r\n    const renderTrigger: SaveToPlaylistTriggerProps['renderTrigger'] = (showPlaylists) => (\r\n        <MenuListItem\r\n            title={'Save to playlist'}\r\n            icon={<PlaylistAddIcon />}\r\n            onClick={() => {\r\n                showPlaylists();\r\n                if (onClick) onClick();\r\n            }}\r\n        />\r\n    );\r\n\r\n    return (\r\n        <SaveToPlaylistTrigger\r\n            renderTrigger={renderTrigger}\r\n        />\r\n    )\r\n}\r\n\r\nexport default SaveToPlaylistListItem;\r\n","import React from \"react\";\r\nimport MenuListItem from \"../common/MenuListItem\";\r\nimport NotInterestedIcon from \"@material-ui/icons/NotInterested\";\r\n\r\nfunction NotInterestedListItem() {\r\n    return (\r\n        <MenuListItem\r\n            title=\"Not interested\"\r\n            icon={<NotInterestedIcon />}\r\n        />\r\n    )\r\n}\r\n\r\nexport default NotInterestedListItem;\r\n","import React from \"react\";\r\nimport MenuListItem from \"../common/MenuListItem\";\r\nimport RemoveCircleOutlineIcon from \"@material-ui/icons/RemoveCircleOutline\";\r\n\r\nfunction NotRecommendListItem() {\r\n    return (\r\n        <MenuListItem\r\n            title=\"Don't recommend channel\"\r\n            icon={<RemoveCircleOutlineIcon />}\r\n        />\r\n    )\r\n}\r\n\r\nexport default NotRecommendListItem;\r\n","import React from \"react\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport List from \"@material-ui/core/List\";\r\nimport AddToQueueListItem from \"../../listItems/AddToQueueListItem\";\r\nimport SaveToWatchLaterListItem from \"../../listItems/SaveToWatchLaterListItem\";\r\nimport SaveToPlaylistListItem from \"../../listItems/SaveToPlaylistListItem\";\r\nimport NotInterestedListItem from \"../../listItems/NotInterestedListItem\";\r\nimport NotRecommendListItem from \"../../listItems/NotRecommendListItem\";\r\nimport ReportListItem from \"../../listItems/ReportListItem\";\r\n\r\nfunction VideoMenu() {\r\n    const primaryList = (\r\n        <List>\r\n            <AddToQueueListItem/>\r\n            <SaveToWatchLaterListItem/>\r\n            <SaveToPlaylistListItem/>\r\n        </List>\r\n    );\r\n\r\n    const secondaryList = (\r\n        <List>\r\n            <NotInterestedListItem/>\r\n            <NotRecommendListItem/>\r\n            <ReportListItem/>\r\n        </List>\r\n    );\r\n\r\n    return (\r\n        <div>\r\n            {primaryList}\r\n            <Divider />\r\n            {secondaryList}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default VideoMenu;\r\n","import React from \"react\";\r\nimport VideoMenu from \"./VideoMenu\";\r\nimport PopoverButton from \"../../buttons/PopoverButton\";\r\n\r\nfunction VideoPopoverButton() {\r\n    return (\r\n        <PopoverButton\r\n            edge=\"end\"\r\n            renderContent={() => <VideoMenu />}\r\n        />\r\n    )\r\n}\r\n\r\nexport default VideoPopoverButton;\r\n","import React, {ReactNode} from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport clsx from \"clsx\";\r\nimport {formatDistance} from \"date-fns\";\r\nimport {createStyles, makeStyles, Theme} from \"@material-ui/core/styles\";\r\nimport {AvatarProps, ListItem} from \"@material-ui/core\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\r\nimport CheckCircleIcon from \"@material-ui/icons/CheckCircle\";\r\nimport VideoThumbnail, {VideoThumbnailProps} from \"./VideoThumbnail\";\r\nimport {toStringNumber} from \"../../../utils/numbers\";\r\nimport VideoPopoverButton from \"./VideoPopoverButton\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\n\r\nexport interface VideoItemBaseProps {\r\n    variant?: 'horizontal' | 'vertical',\r\n    className?: string;\r\n}\r\n\r\nexport interface VideoItemProps extends VideoItemBaseProps {\r\n    primaryText: ReactNode;\r\n    primaryTextTo: string;\r\n    durationSeconds: VideoThumbnailProps['durationSeconds'];\r\n    imageSrc: string;\r\n    secondaryText: ReactNode;\r\n    secondaryTextTo: string;\r\n    avatarSrc?: AvatarProps['src'];\r\n    views?: number;\r\n    captionText?: ReactNode;\r\n    labelText?: ReactNode;\r\n    showCheckIcon?: boolean;\r\n    createdAt?: Date;\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) => createStyles({\r\n    root: {\r\n        display: 'flex',\r\n        alignItems: 'center'\r\n    },\r\n    root_variant_vertical: {\r\n        flexDirection: 'column',\r\n        alignItems: 'initial'\r\n    },\r\n    listItem: {\r\n        alignItems: 'flex-start',\r\n        paddingLeft: 0,\r\n        paddingTop: 0,\r\n        paddingBottom: 0\r\n    },\r\n    container: {\r\n        listStyle: 'none',\r\n        display: 'block',\r\n        width: '100%',\r\n        overflow: 'hidden'\r\n    },\r\n    listItemText: {\r\n        marginTop: 0,\r\n        marginBottom: 0\r\n    },\r\n    primaryText: {\r\n        display: '-webkit-box',\r\n        '-webkit-box-orient': 'vertical',\r\n        '-webkit-line-clamp': 2,\r\n        overflow: 'hidden',\r\n        textDecoration: 'none',\r\n        lineHeight: 1.25,\r\n        marginBottom: theme.spacing(.5)\r\n    },\r\n    secondaryText: {\r\n        display: 'block',\r\n        alignItems: 'center',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n        overflow: 'hidden',\r\n        textDecoration: 'none'\r\n    },\r\n    checkIcon: {\r\n        marginLeft: theme.spacing(.5),\r\n        verticalAlign: 'middle'\r\n    },\r\n    views: {\r\n        display: 'block',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n        overflow: 'hidden'\r\n    },\r\n    labelText: {\r\n        ...theme.typography.caption,\r\n        backgroundColor: theme.palette.grey.A100,\r\n        color: theme.palette.grey.A400,\r\n        padding: theme.spacing(.125, .5),\r\n        borderRadius: theme.shape.borderRadius\r\n    },\r\n    captionText: {\r\n        display: 'block',\r\n        ...theme.typography.caption,\r\n    },\r\n    createdAt: {\r\n        display: 'block'\r\n    },\r\n    media: {\r\n        flex: 1,\r\n        minWidth: theme.spacing(20),\r\n        maxWidth: theme.spacing(20),\r\n        height: theme.spacing(13),\r\n    },\r\n    media_variant_vertical: {\r\n        minWidth: 'initial',\r\n        maxWidth: 'initial',\r\n        minHeight: theme.spacing(20),\r\n        marginBottom: theme.spacing(2)\r\n    },\r\n    media_variant_horizontal: {\r\n        marginRight: theme.spacing(2),\r\n    }\r\n}));\r\n\r\nfunction VideoItem({\r\n    variant = 'horizontal',\r\n    primaryText,\r\n    durationSeconds,\r\n    primaryTextTo,\r\n    imageSrc,\r\n    secondaryText,\r\n    avatarSrc,\r\n    secondaryTextTo,\r\n    views,\r\n    labelText,\r\n    captionText,\r\n    createdAt,\r\n    showCheckIcon,\r\n    className,\r\n}: VideoItemProps) {\r\n    const classes = useStyles();\r\n\r\n    const primary = primaryText ? (\r\n        <Typography\r\n            className={classes.primaryText}\r\n            variant=\"body1\"\r\n            color=\"inherit\"\r\n            component={Link}\r\n            to={primaryTextTo}\r\n        >\r\n            {primaryText}\r\n        </Typography>\r\n    ) : null;\r\n\r\n    const checkIcon = showCheckIcon ? (\r\n        <Tooltip\r\n            title=\"Verified\"\r\n        >\r\n            <CheckCircleIcon\r\n                className={classes.checkIcon}\r\n                fontSize=\"inherit\"\r\n            />\r\n        </Tooltip>\r\n    ) : null;\r\n\r\n    const secondary = secondaryText ? (\r\n        <Typography\r\n            className={classes.secondaryText}\r\n            variant=\"inherit\"\r\n            color=\"inherit\"\r\n            component={Link}\r\n            to={secondaryTextTo}\r\n        >\r\n            {secondaryText}\r\n            {checkIcon}\r\n        </Typography>\r\n    ) : null;\r\n\r\n    const avatar = variant === 'vertical' && avatarSrc ? (\r\n        <ListItemAvatar>\r\n            <Avatar\r\n                src={avatarSrc || ''}\r\n                component={Link}\r\n                to={secondaryTextTo}\r\n            />\r\n        </ListItemAvatar>\r\n    ) : null;\r\n\r\n    const viewsNode = views ? (\r\n        <span className={classes.views}>\r\n            {toStringNumber(views)} views\r\n        </span>\r\n    ) : null;\r\n\r\n    const labelTextNode = labelText ?(\r\n        <span className={classes.labelText}>\r\n            {labelText}\r\n        </span>\r\n    ) : null;\r\n\r\n    const captionTextNode = captionText ? (\r\n        <span className={classes.captionText}>\r\n            {captionText}\r\n        </span>\r\n    ) : null;\r\n\r\n    const createdAtNode = variant === 'vertical' && createdAt ? (\r\n        <span className={classes.createdAt}>\r\n            {formatDistance(new Date(), createdAt)}\r\n        </span>\r\n    ) : null;\r\n\r\n    const videoThumbnail = imageSrc ? (\r\n        <VideoThumbnail\r\n            className={clsx(\r\n                classes.media, {\r\n                [classes.media_variant_vertical]: variant === 'vertical',\r\n                [classes.media_variant_horizontal]: variant === 'horizontal'\r\n            })}\r\n            src={imageSrc}\r\n            to={primaryTextTo}\r\n            durationSeconds={durationSeconds}\r\n        />\r\n    ) : null;\r\n\r\n    const listItemText = (\r\n        <ListItemText\r\n            className={classes.listItemText}\r\n            primary={primary}\r\n            secondary={\r\n                <>\r\n                    {secondary}\r\n                    {viewsNode}\r\n                    {labelTextNode}\r\n                    {captionTextNode}\r\n                    {createdAtNode}\r\n                </>\r\n            }\r\n        />\r\n    );\r\n\r\n    return (\r\n        <div\r\n            className={clsx(\r\n                className,\r\n                classes.root, {\r\n                [classes.root_variant_vertical]: variant === 'vertical'\r\n            })}\r\n        >\r\n            {videoThumbnail}\r\n            <ListItem\r\n                className={classes.listItem}\r\n                ContainerProps={{\r\n                    className: classes.container\r\n                }}\r\n            >\r\n                {avatar}\r\n                {listItemText}\r\n                <ListItemSecondaryAction>\r\n                    <VideoPopoverButton\r\n                    />\r\n                </ListItemSecondaryAction>\r\n            </ListItem>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default VideoItem;\r\n","import React from \"react\";\r\nimport Component, {VideoItemBaseProps} from \"./VideoItem\";\r\nimport {VideoModel} from \"../../../models/VideoModel\";\r\n\r\nexport interface VideoItemProps extends VideoItemBaseProps, VideoModel {}\r\n\r\nfunction VideoItem(props: VideoItemProps) {\r\n    return (\r\n        <Component\r\n            {...props}\r\n            primaryText={props.title}\r\n            primaryTextTo={props.videoUrl}\r\n            durationSeconds={props.duration}\r\n            imageSrc={props.previewUrl}\r\n            secondaryText={props.channelName}\r\n            secondaryTextTo={props.channelUrl}\r\n            avatarSrc={props.channelAvatarUrl}\r\n            views={props.views}\r\n            captionText={props.isRecommended ? 'Recommended for you' : null}\r\n            labelText={props.isNew ? 'New' : null}\r\n            showCheckIcon={props.verified}\r\n            createdAt={props.createdAt}\r\n        />\r\n    )\r\n}\r\n\r\nexport default VideoItem;\r\n","import React from \"react\";\r\nimport {makeStyles, createStyles, Grid, Theme} from \"@material-ui/core\";\r\nimport VideoItem, {VideoItemProps} from \"../VideoItem\";\r\nimport Items, {ItemsProps} from \"../../common/Items\";\r\n\r\nexport interface VideosGridProps {\r\n    onLoad: ItemsProps['onLoad'];\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) => createStyles({\r\n    root: {\r\n        width: '100%',\r\n        margin: 0\r\n    }\r\n}));\r\n\r\nfunction VideosGrid({ onLoad }: VideosGridProps) {\r\n    const classes = useStyles();\r\n\r\n    const renderItem = (item: VideoItemProps) => (\r\n        <Grid item xl={2} lg={3} md={4} sm={6} xs={12} key={item.id}>\r\n            <VideoItem\r\n                {...item}\r\n                variant=\"vertical\"\r\n            />\r\n        </Grid>\r\n    );\r\n\r\n    return (\r\n        <Grid\r\n            className={classes.root}\r\n            container\r\n            spacing={2}\r\n        >\r\n            <Items\r\n                renderItem={renderItem}\r\n                onLoad={onLoad}\r\n            />\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default VideosGrid;\r\n","import React from \"react\";\r\nimport List from \"@material-ui/core/List\";\r\nimport VideoItem, {VideoItemProps} from \"../VideoItem\";\r\nimport {createStyles, makeStyles, Theme} from \"@material-ui/core/styles\";\r\nimport Items, {ItemsProps} from \"../../common/Items\";\r\n\r\nexport interface RecommendationsListProps {\r\n    onLoad: ItemsProps<VideoItemProps>['onLoad'];\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) => createStyles({\r\n    item: {\r\n        marginBottom: theme.spacing(2),\r\n        '&:last-child': {\r\n            marginBottom: 0\r\n        }\r\n    }\r\n}));\r\n\r\nfunction VideosList({ onLoad }: RecommendationsListProps) {\r\n    const classes = useStyles();\r\n\r\n    const renderItem = (item: VideoItemProps) => (\r\n        <VideoItem\r\n            key={item.id}\r\n            className={classes.item}\r\n            {...item}\r\n        />\r\n    );\r\n\r\n    return (\r\n        <List\r\n            component=\"div\"\r\n            disablePadding\r\n        >\r\n            <Items\r\n                renderItem={renderItem}\r\n                onLoad={onLoad}\r\n            />\r\n        </List>\r\n    );\r\n}\r\n\r\nexport default VideosList;\r\n","import React, {useState} from \"react\";\r\nimport VideosGrid from \"./VideosGrid\";\r\nimport {ItemsProps} from \"../common/Items\";\r\nimport VideosList from \"./VideosList\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport {createStyles, Theme, Typography} from \"@material-ui/core\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport ViewModuleIcon from \"@material-ui/icons/ViewModule\";\r\nimport ViewListIcon from \"@material-ui/icons/ViewList\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\n\r\nexport interface VideosProps {\r\n    initialVariant?: 'grid' | 'list';\r\n    onLoad: ItemsProps['onLoad'];\r\n    title?: string;\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) => createStyles({\r\n    toolbarAside: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        marginLeft: 'auto'\r\n    }\r\n}));\r\n\r\nfunction Videos({\r\n    initialVariant = 'list',\r\n    onLoad,\r\n    title\r\n}: VideosProps) {\r\n    const classes = useStyles();\r\n    const [variant, setVariant] = useState(initialVariant);\r\n\r\n    const toolbar = title ? (\r\n        <Toolbar disableGutters>\r\n            <Typography\r\n                variant=\"h6\"\r\n            >\r\n                {title}\r\n            </Typography>\r\n            <aside className={classes.toolbarAside}>\r\n                <Tooltip title=\"Grid\">\r\n                    <IconButton\r\n                        color={variant === 'grid' ? 'secondary' : 'default'}\r\n                        onClick={() => setVariant('grid')}\r\n                    >\r\n                        <ViewModuleIcon />\r\n                    </IconButton>\r\n                </Tooltip>\r\n                <Tooltip title=\"List\">\r\n                    <IconButton\r\n                        edge=\"end\"\r\n                        color={variant === 'list' ? 'secondary' : 'default'}\r\n                        onClick={() => setVariant('list')}\r\n                    >\r\n                        <ViewListIcon />\r\n                    </IconButton>\r\n                </Tooltip>\r\n            </aside>\r\n        </Toolbar>\r\n    ) : null;\r\n\r\n    const videos = (variant === 'grid') ? (\r\n        <VideosGrid onLoad={onLoad} />\r\n    ) : (\r\n        <VideosList onLoad={onLoad} />\r\n    );\r\n\r\n    return (\r\n        <>\r\n            {toolbar}\r\n            {videos}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Videos;\r\n","import React, {useState} from \"react\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport Checkbox, {CheckboxProps} from \"@material-ui/core/Checkbox\";\r\nimport ListItemText, {ListItemTextProps} from \"@material-ui/core/ListItemText\";\r\nimport ListItemSecondaryAction, {ListItemSecondaryActionProps} from \"@material-ui/core/ListItemSecondaryAction\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\n\r\ninterface CheckboxListItemBaseProps {\r\n    primary: ListItemTextProps['primary'];\r\n    secondary?: ListItemTextProps['secondary'];\r\n    secondaryAction?: ListItemSecondaryActionProps['children'];\r\n    onChange?: (checked: boolean) => void;\r\n}\r\n\r\nexport type CheckboxListItemProps = CheckboxProps & CheckboxListItemBaseProps;\r\n\r\nfunction CheckboxListItem({\r\n    primary,\r\n    secondary,\r\n    secondaryAction,\r\n    onChange,\r\n    ...CheckboxProps\r\n}: CheckboxListItemProps) {\r\n    const [checked, setChecked] = useState(Boolean(CheckboxProps.checked));\r\n    const toggle = () => onChange ? onChange(checked) : setChecked(!checked);\r\n\r\n    const listItemSecondaryAction = secondaryAction ? (\r\n        <ListItemSecondaryAction>\r\n            {secondaryAction}\r\n        </ListItemSecondaryAction>\r\n    ) : null;\r\n\r\n    return (\r\n        <ListItem\r\n            dense\r\n            button\r\n            onClick={toggle}\r\n        >\r\n            <ListItemIcon>\r\n                <Checkbox\r\n                    {...CheckboxProps}\r\n                    checked={checked}\r\n                    onChange={toggle}\r\n                    edge=\"start\"\r\n                    disableRipple\r\n                />\r\n            </ListItemIcon>\r\n            <ListItemText\r\n                primary={primary}\r\n                secondary={secondary}\r\n            />\r\n            {listItemSecondaryAction}\r\n        </ListItem>\r\n    )\r\n}\r\n\r\nexport default CheckboxListItem;\r\n","import CheckboxListItem from \"./CheckboxListItem\";\r\nimport LockIcon from \"@material-ui/icons/Lock\";\r\nimport List from \"@material-ui/core/List\";\r\nimport Items, {ItemsProps} from \"./Items\";\r\nimport React from \"react\";\r\n\r\nexport interface MultiChoiceListItemProps {\r\n    label: string;\r\n    value: string;\r\n}\r\n\r\nexport interface MultipleChoiceListProps {\r\n    onLoad: ItemsProps['onLoad'];\r\n    fromModelToProps: (item: any) => MultiChoiceListItemProps\r\n}\r\n\r\nfunction MultipleChoiceList({\r\n    onLoad,\r\n    fromModelToProps\r\n}: MultipleChoiceListProps) {\r\n    const renderItem = (model: any) => {\r\n        const item: MultiChoiceListItemProps = fromModelToProps(model);\r\n        return (\r\n            <CheckboxListItem\r\n                key={item.value}\r\n                primary={item.label}\r\n                secondaryAction={\r\n                    <LockIcon color=\"action\" />\r\n                }\r\n            />\r\n        )\r\n    };\r\n\r\n    return (\r\n        <List disablePadding>\r\n            <Items\r\n                onLoad={onLoad}\r\n                renderItem={renderItem}\r\n            />\r\n        </List>\r\n    )\r\n}\r\n\r\nexport default MultipleChoiceList;\r\n","import MultipleChoiceList from \"./common/MultipleChoice\";\r\nimport {generatePlaylists} from \"../services/playlistsService\";\r\nimport {PlaylistModel} from \"../models/PlaylistModel\";\r\nimport React from \"react\";\r\n\r\nfunction PlaylistsMultipleChoice() {\r\n    return (\r\n        <MultipleChoiceList\r\n            onLoad={generatePlaylists}\r\n            fromModelToProps={(item: PlaylistModel) => ({\r\n                label: item.title,\r\n                value: item.id\r\n            })}\r\n        />\r\n    )\r\n}\r\n\r\nexport default PlaylistsMultipleChoice;\r\n","import React from \"react\";\r\nimport PlaylistAddIcon from \"@material-ui/icons/PlaylistAdd\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport PlaylistsMultipleChoice from \"../PlaylistsMultipleChoice\";\r\nimport DialogTrigger, {DialogTriggerProps} from \"./DialogTrigger\";\r\n\r\nexport interface SaveToPlaylistTriggerProps {\r\n    renderTrigger?: DialogTriggerProps['renderTrigger'];\r\n}\r\n\r\nfunction SaveToPlaylistTrigger(props: SaveToPlaylistTriggerProps) {\r\n    const renderTrigger = props.renderTrigger || (\r\n        onClick => (\r\n            <Button\r\n                variant=\"text\"\r\n                startIcon={<PlaylistAddIcon />}\r\n                onClick={onClick}\r\n            >\r\n                Save\r\n            </Button>\r\n        )\r\n    );\r\n\r\n    return (\r\n        <DialogTrigger\r\n            title=\"Save to...\"\r\n            maxWidth=\"xs\"\r\n            content={<PlaylistsMultipleChoice />}\r\n            renderTrigger={renderTrigger}\r\n            renderActions={() => (\r\n                <Button\r\n                    startIcon={<AddIcon />}\r\n                >\r\n                    Create new playlist\r\n                </Button>\r\n            )}\r\n        />\r\n    )\r\n}\r\n\r\nexport default SaveToPlaylistTrigger;\r\n","import SingleChoiceList from \"./SingleChoiceList\";\r\n\r\nexport default SingleChoiceList;\r\n","import React from \"react\";\r\nimport MenuListItem from \"../common/MenuListItem\";\r\nimport FlagIcon from \"@material-ui/icons/Flag\";\r\nimport DialogTrigger, {DialogTriggerProps} from \"../triggers/DialogTrigger\";\r\nimport SingleChoiceList from \"../common/SingleChoice\";\r\nimport {Button} from \"@material-ui/core\";\r\n\r\nfunction ReportListItem() {\r\n    const title = 'Report';\r\n    const renderTrigger: DialogTriggerProps['renderTrigger'] = (onClick) => (\r\n        <MenuListItem\r\n            title={title}\r\n            icon={<FlagIcon />}\r\n            onClick={onClick}\r\n        />\r\n    );\r\n\r\n    const content = (\r\n        <SingleChoiceList\r\n            onLoad={async () => [\r\n                'Sexual content',\r\n                'Violent or repulsive content',\r\n                'Hateful or abusive content',\r\n                'Harmful or dangerous acts',\r\n                'Spam or misleading'\r\n            ]}\r\n            fromModelToProps={(reason: string) => ({\r\n                label: reason,\r\n                value: reason\r\n            })}\r\n        />\r\n    );\r\n\r\n    const renderActions: DialogTriggerProps['renderActions'] = onClose => (\r\n        <>\r\n            <Button onClick={onClose}>\r\n                Cancel\r\n            </Button>\r\n            <Button\r\n                color=\"secondary\"\r\n                onClick={onClose}\r\n            >\r\n                Report\r\n            </Button>\r\n        </>\r\n    );\r\n\r\n    return (\r\n        <DialogTrigger\r\n            title={title}\r\n            content={content}\r\n            renderTrigger={renderTrigger}\r\n            renderActions={renderActions}\r\n        />\r\n    )\r\n}\r\n\r\nexport default ReportListItem;\r\n"],"sourceRoot":""}