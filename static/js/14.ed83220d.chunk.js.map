{"version":3,"sources":["pages/ChannelPage/pages/ChannelVideosPage/index.tsx","pages/ChannelPage/pages/ChannelAboutPage/index.tsx","pages/ChannelPage/pages/ChannelFeaturedPage/index.tsx","pages/ChannelPage/pages/ChannelPlaylistsPage/index.tsx","pages/ChannelPage/pages/ChannelCommunityPage/index.tsx","pages/ChannelPage/pages/ChannelChannelsPage/index.tsx","pages/ChannelPage/ChannelRoutes.tsx","pages/ChannelPage/ChannelTabs.tsx","pages/ChannelPage/styles.ts","pages/ChannelPage/ChannelPage.tsx","components/common/MenuListItem.tsx","utils/numbers.ts","components/buttons/SubscribeButton.tsx","components/buttons/NotificationsToggleButton.tsx","components/ChannelToolbar.tsx"],"names":["CHANNEL_VIDEOS_PAGE_ROUTE","CHANNEL_VIDEOS_MENU_ITEM","title","to","Page","React","lazy","ChannelVideosPage","fallback","LinearProgress","CHANNEL_ABOUT_PAGE_ROUTE","CHANNEL_ABOUT_MENU_ITEM","ChannelAboutPage","CHANNEL_FEATURED_PAGE_ROUTE","CHANNEL_FEATURED_MENU_ITEM","ChannelFeaturedPage","CHANNEL_PLAYLISTS_PAGE_ROUTE","CHANNEL_PLAYLISTS_MENU_ITEM","ChannelPlaylistsPage","CHANNEL_COMMUNITY_PAGE_ROUTE","CHANNEL_COMMUNITY_MENU_ITEM","ChannelCommunityPage","CHANNEL_CHANNELS_PAGE_ROUTE","CHANNEL_CHANNELS_MENU_ITEM","ChannelChannelsPage","ChannelRoutes","path","CHANNEL_PAGE_ROUTE","component","ChannelTabs","match","useRouteMatch","location","useHistory","items","initialValue","findIndex","item","pathname","includes","useState","value","setValue","tabs","Tabs","variant","scrollButtons","map","index","Tab","key","label","NavLink","url","exact","onClick","activeClassName","generateBackgroundImageStyles","theme","bgColor","palette","grey","bgGradient","number","join","bgGradient2","backgroundColor","background","backgroundSize","bgSize","backgroundPosition","useStyles","makeStyles","createStyles","poster","position","height","spacing","header","maxWidth","breakpoints","width","margin","socialLinks","display","justifyContent","right","bottom","padding","borderRadius","shape","socialLink","alignItems","textDecoration","color","text","primary","marginRight","ChannelPage","classes","className","Array","fill","href","ChannelToolbar","MenuListItem","props","listItemIcon","icon","listItemSecondaryAction","endIcon","size","dense","button","selected","toStringNumber","fractionDigits","toFixed","SubscribeButton","subscribed","setSubscribed","disableElevation","NotificationsToggleButton","PopoverButton","renderContent","closePopover","List","renderItem","listItem","listItemPrimary","aside","marginLeft","notificationsButton","Toolbar","ListItem","disableGutters","ListItemAvatar","Avatar","src","faker","image","avatar","Link","ListItemText","Typography","company","companyName","secondary","Math","round","random"],"mappings":"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","file":"static/js/14.ed83220d.chunk.js","sourcesContent":["import React, {Suspense} from \"react\";\r\nimport {LinearProgress} from \"@material-ui/core\";\r\nimport {RouteLink} from \"../../../../components/common/LinkListItem\";\r\n\r\nexport const CHANNEL_VIDEOS_PAGE_ROUTE = '/videos';\r\n\r\nexport const CHANNEL_VIDEOS_MENU_ITEM: RouteLink = {\r\n    title: 'Videos',\r\n    to: CHANNEL_VIDEOS_PAGE_ROUTE\r\n};\r\n\r\nconst Page = React.lazy(() => import('./ChannelVideosPage'));\r\n\r\nfunction ChannelVideosPage() {\r\n\treturn (\r\n    <Suspense fallback={<LinearProgress />}>\r\n        <Page />\r\n    </Suspense>\r\n)\r\n}\r\n\r\nexport default ChannelVideosPage;\r\n","import React, {Suspense} from \"react\";\r\nimport {LinearProgress} from \"@material-ui/core\";\r\nimport {RouteLink} from \"../../../../components/common/LinkListItem\";\r\n\r\nexport const CHANNEL_ABOUT_PAGE_ROUTE = '/about';\r\n\r\nexport const CHANNEL_ABOUT_MENU_ITEM: RouteLink = {\r\n    title: 'About',\r\n    to: CHANNEL_ABOUT_PAGE_ROUTE\r\n};\r\n\r\nconst Page = React.lazy(() => import('./ChannelAboutPage'));\r\n\r\nfunction ChannelAboutPage() {\r\n\treturn (\r\n    <Suspense fallback={<LinearProgress />}>\r\n        <Page />\r\n    </Suspense>\r\n)\r\n}\r\n\r\nexport default ChannelAboutPage;\r\n","import React, {Suspense} from \"react\";\r\nimport {LinearProgress} from \"@material-ui/core\";\r\nimport {RouteLink} from \"../../../../components/common/LinkListItem\";\r\n\r\nexport const CHANNEL_FEATURED_PAGE_ROUTE = '/featured';\r\n\r\nexport const CHANNEL_FEATURED_MENU_ITEM: RouteLink = {\r\n    title: 'Home',\r\n    to: CHANNEL_FEATURED_PAGE_ROUTE\r\n};\r\n\r\nconst Page = React.lazy(() => import('./ChannelFeaturedPage'));\r\n\r\nfunction ChannelFeaturedPage() {\r\n\treturn (\r\n    <Suspense fallback={<LinearProgress />}>\r\n        <Page />\r\n    </Suspense>\r\n)\r\n}\r\n\r\nexport default ChannelFeaturedPage;\r\n","import React, {Suspense} from \"react\";\r\nimport {LinearProgress} from \"@material-ui/core\";\r\nimport {RouteLink} from \"../../../../components/common/LinkListItem\";\r\n\r\nexport const CHANNEL_PLAYLISTS_PAGE_ROUTE = '/playlists';\r\n\r\nexport const CHANNEL_PLAYLISTS_MENU_ITEM: RouteLink = {\r\n    title: 'Playlists',\r\n    to: CHANNEL_PLAYLISTS_PAGE_ROUTE\r\n};\r\n\r\nconst Page = React.lazy(() => import('./ChannelPlaylistsPage'));\r\n\r\nfunction ChannelPlaylistsPage() {\r\n\treturn (\r\n    <Suspense fallback={<LinearProgress />}>\r\n        <Page />\r\n    </Suspense>\r\n)\r\n}\r\n\r\nexport default ChannelPlaylistsPage;\r\n","import React, {Suspense} from \"react\";\r\nimport {LinearProgress} from \"@material-ui/core\";\r\nimport {RouteLink} from \"../../../../components/common/LinkListItem\";\r\n\r\nexport const CHANNEL_COMMUNITY_PAGE_ROUTE = '/community';\r\n\r\nexport const CHANNEL_COMMUNITY_MENU_ITEM: RouteLink = {\r\n    title: 'Community',\r\n    to: CHANNEL_COMMUNITY_PAGE_ROUTE\r\n};\r\n\r\nconst Page = React.lazy(() => import('./ChannelCommunityPage'));\r\n\r\nfunction ChannelCommunityPage() {\r\n\treturn (\r\n    <Suspense fallback={<LinearProgress />}>\r\n        <Page />\r\n    </Suspense>\r\n)\r\n}\r\n\r\nexport default ChannelCommunityPage;\r\n","import React, {Suspense} from \"react\";\r\nimport {LinearProgress} from \"@material-ui/core\";\r\nimport {RouteLink} from \"../../../../components/common/LinkListItem\";\r\n\r\nexport const CHANNEL_CHANNELS_PAGE_ROUTE = '/channels';\r\n\r\nexport const CHANNEL_CHANNELS_MENU_ITEM: RouteLink = {\r\n    title: 'Channels',\r\n    to: CHANNEL_CHANNELS_PAGE_ROUTE\r\n};\r\n\r\nconst Page = React.lazy(() => import('./ChannelChannelsPage'));\r\n\r\nfunction ChannelChannelsPage() {\r\n\treturn (\r\n    <Suspense fallback={<LinearProgress />}>\r\n        <Page />\r\n    </Suspense>\r\n)\r\n}\r\n\r\nexport default ChannelChannelsPage;\r\n","import React from \"react\";\r\nimport { Switch, Route, Redirect } from \"react-router-dom\";\r\nimport ChannelFeaturedPage, {CHANNEL_FEATURED_PAGE_ROUTE} from \"./pages/ChannelFeaturedPage\";\r\nimport ChannelVideosPage, {CHANNEL_VIDEOS_PAGE_ROUTE} from \"./pages/ChannelVideosPage\";\r\nimport ChannelPlaylistsPage, {CHANNEL_PLAYLISTS_PAGE_ROUTE} from \"./pages/ChannelPlaylistsPage\";\r\nimport ChannelCommunityPage, {CHANNEL_COMMUNITY_PAGE_ROUTE} from \"./pages/ChannelCommunityPage\";\r\nimport ChannelChannelsPage, {CHANNEL_CHANNELS_PAGE_ROUTE} from \"./pages/ChannelChannelsPage\";\r\nimport ChannelAboutPage, {CHANNEL_ABOUT_PAGE_ROUTE} from \"./pages/ChannelAboutPage\";\r\nimport {CHANNEL_PAGE_ROUTE} from \"./index\";\r\n\r\nfunction ChannelRoutes() {\r\n\treturn (\r\n    <Switch>\r\n        <Route path={CHANNEL_PAGE_ROUTE + CHANNEL_FEATURED_PAGE_ROUTE} component={ChannelFeaturedPage} />\r\n        <Route path={CHANNEL_PAGE_ROUTE + CHANNEL_VIDEOS_PAGE_ROUTE} component={ChannelVideosPage} />\r\n        <Route path={CHANNEL_PAGE_ROUTE + CHANNEL_PLAYLISTS_PAGE_ROUTE} component={ChannelPlaylistsPage} />\r\n        <Route path={CHANNEL_PAGE_ROUTE + CHANNEL_COMMUNITY_PAGE_ROUTE} component={ChannelCommunityPage} />\r\n        <Route path={CHANNEL_PAGE_ROUTE + CHANNEL_CHANNELS_PAGE_ROUTE} component={ChannelChannelsPage} />\r\n        <Route path={CHANNEL_PAGE_ROUTE + CHANNEL_ABOUT_PAGE_ROUTE} component={ChannelAboutPage} />\r\n        <Redirect to={CHANNEL_PAGE_ROUTE + CHANNEL_FEATURED_PAGE_ROUTE} />\r\n    </Switch>\r\n)\r\n}\r\n\r\nexport default ChannelRoutes;\r\n","import React, {useState} from \"react\";\r\nimport { useRouteMatch, useHistory } from \"react-router-dom\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport {Tabs} from \"@material-ui/core\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {CHANNEL_VIDEOS_MENU_ITEM} from \"./pages/ChannelVideosPage\";\r\nimport {CHANNEL_ABOUT_MENU_ITEM} from \"./pages/ChannelAboutPage\";\r\nimport {CHANNEL_FEATURED_MENU_ITEM} from \"./pages/ChannelFeaturedPage\";\r\nimport {CHANNEL_PLAYLISTS_MENU_ITEM} from \"./pages/ChannelPlaylistsPage\";\r\nimport {CHANNEL_COMMUNITY_MENU_ITEM} from \"./pages/ChannelCommunityPage\";\r\nimport {CHANNEL_CHANNELS_MENU_ITEM} from \"./pages/ChannelChannelsPage\";\r\nimport ChannelRoutes from \"./ChannelRoutes\";\r\nimport {RouteLink} from \"../../components/common/LinkListItem\";\r\n\r\nfunction ChannelTabs() {\r\n    const match = useRouteMatch();\r\n    const { location } = useHistory();\r\n    const items: RouteLink[] = [\r\n        CHANNEL_FEATURED_MENU_ITEM,\r\n        CHANNEL_VIDEOS_MENU_ITEM,\r\n        CHANNEL_PLAYLISTS_MENU_ITEM,\r\n        CHANNEL_COMMUNITY_MENU_ITEM,\r\n        CHANNEL_CHANNELS_MENU_ITEM,\r\n        CHANNEL_ABOUT_MENU_ITEM\r\n    ];\r\n    const initialValue = items.findIndex(item => location.pathname.includes(item.to));\r\n    const [value, setValue] = useState(initialValue);\r\n\r\n    const renderItem = (item: RouteLink, index: number) => (\r\n        <Tab\r\n            key={item.to}\r\n            label={item.title}\r\n            component={NavLink}\r\n            to={match.url + item.to}\r\n            exact={true}\r\n            onClick={() => setValue(index)}\r\n            activeClassName=\"Mui-selected\"\r\n        />\r\n    );\r\n\r\n    const tabs = (\r\n        <Tabs\r\n            value={value}\r\n            variant=\"scrollable\"\r\n            scrollButtons=\"auto\"\r\n        >\r\n            {items.map(renderItem)}\r\n        </Tabs>\r\n    );\r\n\r\n    return (\r\n        <>\r\n            {tabs}\r\n            <ChannelRoutes />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ChannelTabs;\r\n","import {Theme} from \"@material-ui/core/styles\";\r\nimport {CSSProperties} from \"react\";\r\n\r\nexport function generateBackgroundImageStyles(theme: Theme): CSSProperties {\r\n    const bgColor = [\r\n        theme.palette.grey[\"800\"],\r\n        theme.palette.grey[\"700\"],\r\n        theme.palette.grey[\"600\"]\r\n    ];\r\n    const bgSize = 80;\r\n    const bgGradient = [30, 150, 30, 150].map(number =>\r\n        `linear-gradient(${number}deg, ${bgColor[1]} 12%, transparent 12.5%, transparent 87%, ${bgColor[1]} 87.5%, ${bgColor[1]})`\r\n    ).join(',');\r\n    const bgGradient2 = [60, 60].map(number =>\r\n        `linear-gradient(${number}deg, ${bgColor[2]} 25%, transparent 25.5%, transparent 75%, ${bgColor[2]} 75%, ${bgColor[2]})`\r\n    ).join(',');\r\n\r\n    return {\r\n        backgroundColor: bgColor[0],\r\n        background: `${bgGradient}, ${bgGradient2}`,\r\n        backgroundSize: `${bgSize / 2}px ${bgSize}px`,\r\n        backgroundPosition: `\r\n            0 0, \r\n            0 0, \r\n            ${bgSize / 4}px ${bgSize / 2}px, \r\n            ${bgSize / 4}px ${bgSize / 2}px, \r\n            0 0, \r\n            ${bgSize / 4}px ${bgSize / 2}px\r\n        `\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport {createStyles, makeStyles, Theme} from \"@material-ui/core/styles\";\r\nimport ChannelToolbar from \"../../components/ChannelToolbar\";\r\nimport ChannelTabs from \"./ChannelTabs\";\r\nimport {generateBackgroundImageStyles} from \"./styles\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) => {\r\n    return createStyles({\r\n        poster: {\r\n            position: 'relative',\r\n            height: theme.spacing(25),\r\n            ...generateBackgroundImageStyles(theme)\r\n        },\r\n        header: {\r\n            maxWidth: theme.breakpoints.width('md'),\r\n            margin: '0 auto'\r\n        },\r\n        socialLinks: {\r\n            position: 'absolute',\r\n            display: 'flex',\r\n            justifyContent: 'space-between',\r\n            right: theme.spacing(2),\r\n            bottom: theme.spacing(2),\r\n            background: 'rgba(0,0,0,.24)',\r\n            margin: 0,\r\n            padding: theme.spacing(1),\r\n            borderRadius: theme.shape.borderRadius\r\n        },\r\n        socialLink: {\r\n            display: 'inline-flex',\r\n            alignItems: 'center',\r\n            justifyContent: 'center',\r\n            width: theme.spacing(3),\r\n            height: theme.spacing(3),\r\n            borderRadius: '50%',\r\n            backgroundColor: theme.palette.grey[\"800\"],\r\n            textDecoration: 'none',\r\n            color: theme.palette.text.primary,\r\n            '&:not(:last-child)': {\r\n                marginRight: theme.spacing(1)\r\n            }\r\n        }\r\n    })\r\n});\r\n\r\nfunction ChannelPage() {\r\n    const classes = useStyles();\r\n\r\n    const renderSocialLink = (item: string, index: number) => (\r\n        <a\r\n            href=\"#\"\r\n            className={classes.socialLink}\r\n            key={index}\r\n        />\r\n    );\r\n\r\n    const poster = (\r\n        <div\r\n            className={classes.poster}\r\n        >\r\n            <ul className={classes.socialLinks}>\r\n                {Array(5).fill(null).map(renderSocialLink)}\r\n            </ul>\r\n        </div>\r\n    );\r\n\r\n    const header = (\r\n        <header className={classes.header}>\r\n            <ChannelToolbar />\r\n            <ChannelTabs />\r\n        </header>\r\n    );\r\n\r\n    return (\r\n        <>\r\n            {poster}\r\n            {header}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ChannelPage;\r\n","import ListItem, {ListItemProps} from \"@material-ui/core/ListItem\";\r\nimport React from \"react\";\r\nimport {ListItemIcon, ListItemIconProps, ListItemSecondaryActionProps, ListItemTextProps} from \"@material-ui/core\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\n\r\nexport interface MenuListItemProps {\r\n    title: ListItemTextProps['primary'];\r\n    icon?: ListItemIconProps['children'];\r\n    endIcon?: ListItemSecondaryActionProps['children'];\r\n    selected?: ListItemProps['selected'];\r\n    onClick?: () => void;\r\n}\r\n\r\nfunction MenuListItem(props: MenuListItemProps) {\r\n    const listItemIcon = props.icon ? (\r\n        <ListItemIcon>\r\n            {props.icon}\r\n        </ListItemIcon>\r\n    ) : null;\r\n\r\n    const listItemSecondaryAction = props.endIcon ? (\r\n        <ListItemSecondaryAction>\r\n            <IconButton\r\n                size=\"small\"\r\n                onClick={props.onClick}\r\n            >\r\n                {props.endIcon}\r\n            </IconButton>\r\n        </ListItemSecondaryAction>\r\n    ) : null;\r\n\r\n    return (\r\n        <ListItem\r\n            dense\r\n            button\r\n            selected={props.selected}\r\n            onClick={props.onClick}\r\n        >\r\n            {listItemIcon}\r\n            <ListItemText\r\n                primary={props.title}\r\n            />\r\n            {listItemSecondaryAction}\r\n        </ListItem>\r\n    )\r\n}\r\n\r\nexport default MenuListItem;\r\n","export function toStringNumber(number: number, fractionDigits = 1) {\r\n    return (\r\n        (number >= 1000000000) ? `${(number / 1000000000).toFixed(fractionDigits)}B` :\r\n        (number >= 1000000) ? `${(number / 1000000).toFixed(fractionDigits)}M` :\r\n        (number >= 1000) ? `${(number / 1000).toFixed(fractionDigits)}K` :\r\n        number\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport Button, {ButtonProps} from \"@material-ui/core/Button\";\r\n\r\nexport interface SubscribeButtonProps extends ButtonProps {}\r\n\r\nfunction SubscribeButton(props: SubscribeButtonProps) {\r\n    const [subscribed, setSubscribed] = React.useState(false);\r\n    const toggle = () => setSubscribed(!subscribed);\r\n    return (\r\n       <Button\r\n           variant=\"contained\"\r\n           disableElevation\r\n           {...props}\r\n           color={subscribed ? 'default' : (props.color || 'primary')}\r\n           onClick={toggle}\r\n       >\r\n           {subscribed ? 'Subscribed' : 'Subscribe'}\r\n       </Button>\r\n   )\r\n}\r\n\r\nexport default SubscribeButton;\r\n","import React, {useState} from \"react\";\r\nimport NotificationsIcon from \"@material-ui/icons/Notifications\";\r\nimport NotificationsOffIcon from \"@material-ui/icons/NotificationsOff\";\r\nimport NotificationsActiveIcon from \"@material-ui/icons/NotificationsActive\";\r\nimport PopoverButton, {PopoverButtonProps} from \"./PopoverButton\";\r\nimport MenuListItem, {MenuListItemProps} from \"../common/MenuListItem\";\r\nimport {List} from \"@material-ui/core\";\r\n\r\nexport interface NotificationsToggleButtonProps {\r\n    className: PopoverButtonProps['className'];\r\n}\r\n\r\nfunction NotificationsToggleButton(props: NotificationsToggleButtonProps) {\r\n    const [value, setValue] = useState(1);\r\n    let items: MenuListItemProps[] = [\r\n        { title: 'All', icon: <NotificationsActiveIcon /> },\r\n        { title: 'Personalized', icon: <NotificationsIcon /> },\r\n        { title: 'None', icon: <NotificationsOffIcon /> },\r\n    ];\r\n\r\n    const renderItem = (closePopover: VoidFunction) => (item: MenuListItemProps, index: number) => (\r\n        <MenuListItem\r\n            title={item.title}\r\n            icon={item.icon}\r\n            selected={index === value}\r\n            onClick={() => {\r\n                setValue(index);\r\n                closePopover();\r\n            }}\r\n        />\r\n    );\r\n\r\n    const renderContent: PopoverButtonProps['renderContent'] = closePopover => (\r\n        <List>\r\n            {items.map(renderItem(closePopover))}\r\n        </List>\r\n    )\r\n\r\n    return (\r\n        <PopoverButton\r\n            {...props}\r\n            renderContent={renderContent}\r\n        >\r\n            {items[value].icon}\r\n        </PopoverButton>\r\n    )\r\n}\r\n\r\nexport default NotificationsToggleButton;\r\n","import React from \"react\";\r\nimport faker from \"faker/locale/en\";\r\nimport Toolbar, {ToolbarProps} from \"@material-ui/core/Toolbar\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport {createStyles, makeStyles, Theme} from \"@material-ui/core/styles\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {Typography} from \"@material-ui/core\";\r\nimport {toStringNumber} from \"../utils/numbers\";\r\nimport SubscribeButton from \"./buttons/SubscribeButton\";\r\nimport NotificationsToggleButton from \"./buttons/NotificationsToggleButton\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) => createStyles({\r\n    listItem: {\r\n        width: 'auto'\r\n    },\r\n    listItemPrimary: {\r\n        textDecoration: 'none'\r\n    },\r\n    aside: {\r\n        marginLeft: 'auto'\r\n    },\r\n    notificationsButton: {\r\n        marginLeft: theme.spacing(1)\r\n    }\r\n}));\r\n\r\nexport interface ChannelToolbar extends ToolbarProps {}\r\n\r\nfunction ChannelToolbar(props: ChannelToolbar) {\r\n    const classes = useStyles();\r\n    return (\r\n        <Toolbar {...props}>\r\n            <ListItem\r\n                className={classes.listItem}\r\n                disableGutters\r\n            >\r\n                <ListItemAvatar>\r\n                    <Avatar\r\n                        src={faker.image.avatar()}\r\n                        component={Link}\r\n                        to=\"/channel/1\"\r\n                    />\r\n                </ListItemAvatar>\r\n                <ListItemText\r\n                    primary={\r\n                        <Typography\r\n                            className={classes.listItemPrimary}\r\n                            component={Link}\r\n                            to=\"/channel/1\"\r\n                            color=\"inherit\"\r\n                        >\r\n                            {faker.company.companyName()}\r\n                        </Typography>\r\n                    }\r\n                    secondary={`${toStringNumber(Math.round(Math.random() * 9999999), 0)} subscribers`}\r\n                />\r\n            </ListItem>\r\n            <aside className={classes.aside}>\r\n                <SubscribeButton />\r\n                <NotificationsToggleButton\r\n                    className={classes.notificationsButton}\r\n                />\r\n            </aside>\r\n        </Toolbar>\r\n    );\r\n}\r\n\r\nexport default ChannelToolbar;\r\n"],"sourceRoot":""}