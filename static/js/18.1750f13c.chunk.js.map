{"version":3,"sources":["services/videosService.ts","components/core/Videos/index.tsx","pages/ChannelPage/pages/ChannelVideosPage/ChannelVideosPage.tsx"],"names":["generateGridVideos","a","async","Array","fill","map","item","index","id","title","faker","lorem","sentence","replace","duration","Math","round","random","videoUrl","previewUrl","channelAvatarUrl","image","avatar","channelName","company","companyName","channelUrl","views","verified","createdAt","date","past","generateListVideos","isNew","isRecommended","Component","React","lazy","Videos","props","fallback","ChannelVideosPage","initialVariant","onLoad"],"mappings":"iNAGaA,EAAqB,oBAAAC,EAAAC,OAAA,yEAAmCC,MAAM,IACtEC,KAAK,MACLC,KAAI,SAACC,EAAMC,GAAP,MAAkB,CACnBC,GAAG,GAAD,OAAKD,GACPE,MAAOC,IAAMC,MAAMC,WAAWC,QAAQ,IAAK,IAC3CC,SAAUC,KAAKC,MAAsB,KAAhBD,KAAKE,UAC1BC,SAAS,YAAD,OAAcX,GACtBY,WAAY,sBACZC,iBAAkBV,IAAMW,MAAMC,SAC9BC,YAAab,IAAMc,QAAQC,cAC3BC,WAAW,YAAD,OAAcnB,GACxBoB,MAAOZ,KAAKC,MAAsB,UAAhBD,KAAKE,UACvBW,SAAUb,KAAKE,SAAW,GAC1BY,UAAWnB,IAAMoB,KAAKC,YAbI,sCAgBrBC,EAAqB,oBAAA/B,EAAAC,OAAA,yEAAmCC,MAAM,IACtEC,KAAK,MACLC,KAAI,SAACC,EAAMC,GAAP,MAAkB,CACnBC,GAAG,GAAD,OAAKD,GACPE,MAAOC,IAAMC,MAAMC,WAAWC,QAAQ,IAAK,IAC3CC,SAAUC,KAAKC,MAAsB,KAAhBD,KAAKE,UAC1BC,SAAS,YAAD,OAAcX,GACtBY,WAAY,sBACZI,YAAab,IAAMc,QAAQC,cAC3BC,WAAW,YAAD,OAAcnB,GACxB0B,MAAO1B,EAAQ,IAAM,EACrB2B,cAAe3B,EAAQ,IAAM,EAC7BoB,MAAOZ,KAAKC,MAAsB,UAAhBD,KAAKE,UACvBW,SAAUb,KAAKE,SAAW,GAC1BY,UAAWnB,IAAMoB,KAAKC,YAdI,uC,iCCnBlC,4BAIMI,EAAYC,IAAMC,MAAK,kBAAM,+DAUpBC,IARf,SAAgBC,GACZ,OACI,kBAAC,WAAD,CAAUC,SAAU,kBAAC,IAAD,OAChB,kBAACL,EAAcI,M,iCCT3B,6CAaeE,UATf,WACC,OACG,kBAAC,IAAD,CACIC,eAAe,OACfC,OAAQX","file":"static/js/18.1750f13c.chunk.js","sourcesContent":["import faker from \"faker/locale/en\";\nimport {VideoModel} from \"../models/VideoModel\";\n\nexport const generateGridVideos = async (): Promise<VideoModel[]> => Array(12)\n    .fill(null)\n    .map((item, index) => ({\n        id: `${index}`,\n        title: faker.lorem.sentence().replace('.', ''),\n        duration: Math.round(Math.random() * 36000000),\n        videoUrl: `/watch?v=${index}`,\n        previewUrl: 'https://invalid_url',\n        channelAvatarUrl: faker.image.avatar(),\n        channelName: faker.company.companyName(),\n        channelUrl: `/channel/${index}`,\n        views: Math.round(Math.random() * 999999999),\n        verified: Math.random() > 0.5,\n        createdAt: faker.date.past()\n    }));\n\nexport const generateListVideos = async (): Promise<VideoModel[]> => Array(12)\n    .fill(null)\n    .map((item, index) => ({\n        id: `${index}`,\n        title: faker.lorem.sentence().replace('.', ''),\n        duration: Math.round(Math.random() * 36000000),\n        videoUrl: `/watch?v=${index}`,\n        previewUrl: 'https://invalid_url',\n        channelName: faker.company.companyName(),\n        channelUrl: `/channel/${index}`,\n        isNew: index % 2 === 0,\n        isRecommended: index % 2 === 1,\n        views: Math.round(Math.random() * 999999999),\n        verified: Math.random() > 0.5,\n        createdAt: faker.date.past()\n    }));\n","import React, { Suspense } from \"react\";\nimport {VideosProps} from \"./Videos\";\nimport SuspenseFallback from \"../../../layouts/SuspenseFallback\";\n\nconst Component = React.lazy(() => import('./Videos'));\n\nfunction Videos(props: VideosProps) {\n    return (\n        <Suspense fallback={<SuspenseFallback />}>\n            <Component {...props} />\n        </Suspense>\n    )\n}\n\nexport default Videos;\n","import React from \"react\";\nimport Videos from \"../../../../components/core/Videos\";\nimport {generateListVideos} from \"../../../../services/videosService\";\n\nfunction ChannelVideosPage() {\n\treturn (\n    <Videos\n        initialVariant=\"grid\"\n        onLoad={generateListVideos}\n    />\n)\n}\n\nexport default ChannelVideosPage;\n"],"sourceRoot":""}