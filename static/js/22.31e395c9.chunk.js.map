{"version":3,"sources":["components/triggers/DialogTrigger.tsx","components/menus/AccountsMenu/AccountsList.tsx","components/forms/SignInForm.tsx","components/forms/SignUpForm.tsx","components/forms/RecoveryForm.tsx","components/triggers/SignInDialogTrigger.tsx","components/listItems/AddAccountListItem.tsx","components/menus/AccountsMenu/AccountsMenu.tsx"],"names":["useStyles","makeStyles","theme","createStyles","content","padding","actions","borderTop","palette","divider","DialogTrigger","title","maxWidth","renderTrigger","renderActions","classes","useState","open","setOpen","handleToggle","closeButton","edge","onClick","dialogAppBar","endAction","dialogContent","className","dialogActions","dialog","onClose","button","AccountsList","onLoad","List","Items","renderItem","item","AccountListItem","key","id","avatarSrc","avatarUrl","fullName","email","selected","renderLoadMore","root","display","flexDirection","alignItems","avatar","backgroundColor","secondary","main","marginBottom","spacing","form","width","marginTop","recoveryLink","cursor","marginRight","SignInForm","props","onSignUp","useHistory","onRecovery","React","showPassword","setShowPassword","login","password","values","setValues","handleSignUp","handleRecovery","handleChange","prop","event","target","value","Avatar","Typography","component","variant","noValidate","Grid","container","xs","TextField","fullWidth","label","name","autoComplete","onChange","type","InputProps","endAdornment","InputAdornment","position","IconButton","aria-label","onMouseDown","preventDefault","Tooltip","placement","Visibility","VisibilityOff","Button","color","Box","justify","paper","margin","SignUpForm","onSignIn","handleSignIn","sm","FormControlLabel","control","Checkbox","justifyContent","description","textAlign","RecoveryForm","SignInDialogTrigger","signInView","setView","signUpView","recoveryView","view","AddAccountListItem","openDialog","MenuListItem","icon","AccountsMenu","actionsList","SignOutListItem","Divider"],"mappings":"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","file":"static/js/22.31e395c9.chunk.js","sourcesContent":["import React, {ReactElement, ReactNode, useState} from \"react\";\r\nimport {createStyles, Dialog, DialogProps, Theme} from \"@material-ui/core\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport PopoverAppBar, {PopoverAppBarProps} from \"../PopoverAppBar\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\n\r\nexport interface DialogTriggerProps {\r\n    content: DialogProps['children'];\r\n    renderTrigger: (onClick: VoidFunction) => ReactElement;\r\n    renderActions?: (onClose: VoidFunction) => ReactNode;\r\n    title?: PopoverAppBarProps['title'];\r\n    maxWidth?: DialogProps['maxWidth'];\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) => createStyles({\r\n    content: {\r\n        padding: 0\r\n    },\r\n    actions: {\r\n        borderTop: `1px solid ${theme.palette.divider}`\r\n    }\r\n}));\r\n\r\nfunction DialogTrigger({\r\n    title,\r\n    maxWidth,\r\n    renderTrigger,\r\n    content,\r\n    renderActions\r\n}: DialogTriggerProps) {\r\n    const classes = useStyles();\r\n    const [open, setOpen] = useState(false);\r\n    const handleToggle = () => setOpen(!open);\r\n\r\n    const closeButton = (\r\n        <IconButton\r\n            edge=\"end\"\r\n            onClick={handleToggle}\r\n        >\r\n            <CloseIcon />\r\n        </IconButton>\r\n    );\r\n\r\n    const dialogAppBar = title ? (\r\n        <PopoverAppBar\r\n            title={title}\r\n            endAction={closeButton}\r\n        />\r\n    ) : null;\r\n\r\n    const dialogContent = (\r\n        <DialogContent className={classes.content}>\r\n            {content}\r\n        </DialogContent>\r\n    );\r\n\r\n    const dialogActions = renderActions ? (\r\n        <DialogActions className={classes.actions}>\r\n            {renderActions(() => setOpen(false))}\r\n        </DialogActions>\r\n    ) : null;\r\n\r\n    const dialog = (\r\n        <Dialog\r\n            open={open}\r\n            onClose={handleToggle}\r\n            maxWidth={maxWidth}\r\n        >\r\n            {dialogAppBar}\r\n            {dialogContent}\r\n            {dialogActions}\r\n        </Dialog>\r\n    );\r\n\r\n    const button = renderTrigger(handleToggle);\r\n\r\n    return (\r\n        <>\r\n            {button}\r\n            {dialog}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default DialogTrigger;\r\n","import React from \"react\";\r\nimport {List} from \"@material-ui/core\";\r\nimport AccountListItem from \"./AccountListItem\";\r\nimport Items, {ItemsProps} from \"../../common/Items\";\r\nimport {AccountModel} from \"../../../models/AccountModel\";\r\n\r\nexport interface AccountsListProps {\r\n    onLoad: ItemsProps['onLoad'];\r\n}\r\n\r\nfunction AccountsList({ onLoad }: AccountsListProps) {\r\n    const renderItem = (item: AccountModel) => (\r\n        <AccountListItem\r\n            key={item.id}\r\n            avatarSrc={item.avatarUrl}\r\n            fullName={item.fullName}\r\n            email={item.email}\r\n            selected={false}\r\n            onClick={() => null}\r\n        />\r\n    );\r\n\r\n    return (\r\n        <List>\r\n            <Items\r\n                renderItem={renderItem}\r\n                renderLoadMore={null}\r\n                onLoad={onLoad}\r\n            />\r\n        </List>\r\n    )\r\n}\r\n\r\nexport default AccountsList;\r\n","import React from \"react\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport {Link as StyledLink} from \"@material-ui/core\";\r\nimport {createStyles, makeStyles, Theme} from \"@material-ui/core/styles\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport {IconButton} from \"@material-ui/core\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport {Visibility, VisibilityOff} from \"@material-ui/icons\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport SettingsBackupRestoreIcon from \"@material-ui/icons/SettingsBackupRestore\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) => createStyles({\r\n    root: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    avatar: {\r\n        backgroundColor: theme.palette.secondary.main,\r\n        marginBottom: theme.spacing(2)\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    recoveryLink: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        cursor: 'pointer',\r\n        '&>svg': {\r\n            marginRight: theme.spacing(1)\r\n        }\r\n    }\r\n}));\r\n\r\ninterface SignInFormState {\r\n    login: string;\r\n    password: string;\r\n}\r\n\r\nexport interface SignInFormProps {\r\n    onSignUp?: VoidFunction;\r\n    onRecovery?: VoidFunction;\r\n}\r\n\r\nexport function SignInForm(props: SignInFormProps) {\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const {onSignUp, onRecovery} = props;\r\n    const [showPassword, setShowPassword] = React.useState(false);\r\n    const [values, setValues] = React.useState<SignInFormState>({\r\n        login: '',\r\n        password: ''\r\n    });\r\n\r\n    const handleSignUp = onSignUp;\r\n        //|| (() => history.push(SIGN_UP_PAGE_ROUTE_PATH));\r\n    const handleRecovery = onRecovery;\r\n        //|| (() => history.push(RECOVERY_PAGE_ROUTE_PATH));\r\n\r\n    const handleChange = (prop: keyof SignInFormState) => (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        setValues({ ...values, [prop]: event.target.value });\r\n    };\r\n\r\n    const handleShowPassword = () => {\r\n        setShowPassword(!showPassword);\r\n    };\r\n\r\n    const handleMouseDownPassword = (event: React.MouseEvent<HTMLButtonElement>) => {\r\n        event.preventDefault();\r\n    };\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Avatar className={classes.avatar}>\r\n                <LockOutlinedIcon />\r\n            </Avatar>\r\n            <Typography\r\n                component=\"h1\"\r\n                variant=\"h5\"\r\n            >\r\n                Вход\r\n            </Typography>\r\n            <Typography\r\n                component=\"p\"\r\n                variant=\"subtitle1\"\r\n            >\r\n                Используйте свой аккаунт\r\n            </Typography>\r\n            <form noValidate className={classes.form}>\r\n                <Grid container spacing={2}>\r\n                    <Grid item xs={12}>\r\n                        <TextField\r\n                            variant=\"outlined\"\r\n                            fullWidth\r\n                            id=\"login\"\r\n                            label=\"Телефон или адрес эл. почты\"\r\n                            name=\"login\"\r\n                            autoComplete=\"login\"\r\n                            value={values.login}\r\n                            onChange={handleChange('login')}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <TextField\r\n                            id=\"outlined-adornment-password\"\r\n                            fullWidth\r\n                            variant=\"outlined\"\r\n                            type={showPassword ? 'text' : 'password'}\r\n                            label=\"Пароль\"\r\n                            autoComplete=\"current-password\"\r\n                            value={values.password}\r\n                            onChange={handleChange('password')}\r\n                            InputProps={{\r\n                                endAdornment: (\r\n                                    <InputAdornment position=\"end\">\r\n                                        <IconButton\r\n                                            edge=\"end\"\r\n                                            aria-label=\"toggle password visibility\"\r\n                                            onClick={handleShowPassword}\r\n                                            onMouseDown={handleMouseDownPassword}\r\n                                        >\r\n                                            <Tooltip\r\n                                                placement=\"left\"\r\n                                                title={showPassword ? 'Скрыть пароль' : 'Показать пароль'}\r\n                                            >\r\n                                                {showPassword ? <Visibility /> : <VisibilityOff />}\r\n                                            </Tooltip>\r\n                                        </IconButton>\r\n                                    </InputAdornment>\r\n                                ),\r\n                            }}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <StyledLink\r\n                            className={classes.recoveryLink}\r\n                            onClick={handleRecovery}\r\n                        >\r\n                            <SettingsBackupRestoreIcon />\r\n                            Забыли пароль?\r\n                        </StyledLink>\r\n                    </Grid>\r\n                    <Grid item xs={6}>\r\n                        <Button\r\n                            color=\"primary\"\r\n                            onClick={handleSignUp}\r\n                        >\r\n                            Создать аккаунт\r\n                        </Button>\r\n                    </Grid>\r\n                    <Grid item xs={6} component={Box} display=\"flex\" justify=\"flex-end\">\r\n                        <Button\r\n                            type=\"submit\"\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                        >\r\n                            Войти\r\n                        </Button>\r\n                    </Grid>\r\n                </Grid>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SignInForm;\r\n","import React from \"react\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport {createStyles, makeStyles, Theme} from \"@material-ui/core/styles\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport {IconButton} from \"@material-ui/core\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport {Visibility, VisibilityOff} from \"@material-ui/icons\";\r\nimport PersonIcon from \"@material-ui/icons/Person\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) => createStyles({\r\n    paper: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n}));\r\n\r\nexport interface SignUpFormProps {\r\n    onSignIn?: VoidFunction;\r\n}\r\n\r\nexport function SignUpForm(props: SignUpFormProps) {\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const {onSignIn} = props;\r\n    const [showPassword, setShowPassword] = React.useState(false);\r\n\r\n    const handleSignIn = onSignIn;\r\n    //|| (() => history.push(SIGN_IN_PAGE_ROUTE_PATH));\r\n\r\n    const handleShowPassword = () => {\r\n        setShowPassword(!showPassword);\r\n    };\r\n\r\n    const handleMouseDownPassword = (event: React.MouseEvent<HTMLButtonElement>) => {\r\n        event.preventDefault();\r\n    };\r\n\r\n    return (\r\n        <div className={classes.paper}>\r\n            <Avatar className={classes.avatar}>\r\n                <PersonIcon />\r\n            </Avatar>\r\n            <Typography component=\"h1\" variant=\"h5\">\r\n                Создайте аккаунт\r\n            </Typography>\r\n            <form className={classes.form} noValidate>\r\n                <Grid container spacing={2}>\r\n                    <Grid item xs={12} sm={6}>\r\n                        <TextField\r\n                            autoComplete=\"firstName\"\r\n                            name=\"firstName\"\r\n                            variant=\"outlined\"\r\n                            fullWidth\r\n                            id=\"firstName\"\r\n                            label=\"Имя\"\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6}>\r\n                        <TextField\r\n                            variant=\"outlined\"\r\n                            fullWidth\r\n                            id=\"lastName\"\r\n                            label=\"Фамилия\"\r\n                            name=\"lastName\"\r\n                            autoComplete=\"lastName\"\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <TextField\r\n                            variant=\"outlined\"\r\n                            fullWidth\r\n                            id=\"email\"\r\n                            label=\"Телефон или адрес эл. почты\"\r\n                            name=\"email\"\r\n                            autoComplete=\"email\"\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <TextField\r\n                            id=\"outlined-adornment-password\"\r\n                            fullWidth\r\n                            variant=\"outlined\"\r\n                            type={showPassword ? 'text' : 'password'}\r\n                            label=\"Пароль\"\r\n                            autoComplete=\"current-password\"\r\n                            InputProps={{\r\n                                endAdornment: (\r\n                                    <InputAdornment position=\"end\">\r\n                                        <IconButton\r\n                                            edge=\"end\"\r\n                                            aria-label=\"toggle password visibility\"\r\n                                            onClick={handleShowPassword}\r\n                                            onMouseDown={handleMouseDownPassword}\r\n                                        >\r\n                                            <Tooltip\r\n                                                placement=\"left\"\r\n                                                title={showPassword ? 'Скрыть пароль' : 'Показать пароль'}\r\n                                            >\r\n                                                {showPassword ? <Visibility /> : <VisibilityOff />}\r\n                                            </Tooltip>\r\n                                        </IconButton>\r\n                                    </InputAdornment>\r\n                                ),\r\n                            }}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <FormControlLabel\r\n                            control={<Checkbox value=\"allowExtraEmails\" color=\"primary\" />}\r\n                            label=\"Я хочу получать уведомления и новости\"\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={6}>\r\n                        <Button\r\n                            color=\"primary\"\r\n                            onClick={handleSignIn}\r\n                        >\r\n                            Войти\r\n                        </Button>\r\n                    </Grid>\r\n                    <Grid item xs={6} component={Box} display=\"flex\" justifyContent=\"flex-end\">\r\n                        <Button\r\n                            type=\"submit\"\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                        >\r\n                            Создать\r\n                        </Button>\r\n                    </Grid>\r\n                </Grid>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SignUpForm;\r\n","import React from \"react\";\r\nimport {useHistory} from 'react-router-dom';\r\nimport {createStyles, makeStyles, Theme} from '@material-ui/core/styles';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport SettingsBackupRestoreIcon from '@material-ui/icons/SettingsBackupRestore';\r\n\r\nconst useStyles = makeStyles((theme: Theme) => createStyles({\r\n    root: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        backgroundColor: theme.palette.secondary.main,\r\n        marginBottom: theme.spacing(2)\r\n    },\r\n    description: {\r\n        textAlign: 'center'\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n}));\r\n\r\ninterface RecoveryFormState {\r\n    login: string;\r\n}\r\n\r\nexport interface RecoveryFormProps {\r\n    onSignIn?: VoidFunction;\r\n}\r\n\r\nexport function RecoveryForm(props: RecoveryFormProps) {\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const {onSignIn} = props;\r\n    const [values, setValues] = React.useState<RecoveryFormState>({\r\n        login: '',\r\n    });\r\n\r\n    const handleSignIn = onSignIn;\r\n    //|| (() => history.push(SIGN_IN_PAGE_ROUTE_PATH));\r\n\r\n    const handleChange = (prop: keyof RecoveryFormState) => (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        setValues({ ...values, [prop]: event.target.value });\r\n    };\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Avatar className={classes.avatar}>\r\n                <SettingsBackupRestoreIcon />\r\n            </Avatar>\r\n            <Typography\r\n                component=\"h1\"\r\n                variant=\"h5\"\r\n            >\r\n                Восстановление доступа\r\n            </Typography>\r\n            <Typography\r\n                component=\"p\"\r\n                variant=\"subtitle1\"\r\n                className={classes.description}\r\n            >\r\n                Укажите данные указанные при регистрации\r\n            </Typography>\r\n            <form noValidate className={classes.form}>\r\n                <Grid container spacing={2}>\r\n                    <Grid item xs={12}>\r\n                        <TextField\r\n                            variant=\"outlined\"\r\n                            fullWidth\r\n                            id=\"login\"\r\n                            label=\"Телефон или адрес эл. почты\"\r\n                            name=\"login\"\r\n                            autoComplete=\"login\"\r\n                            value={values.login}\r\n                            onChange={handleChange('login')}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={6}>\r\n                        <Button\r\n                            color=\"primary\"\r\n                            onClick={handleSignIn}\r\n                        >\r\n                            Войти\r\n                        </Button>\r\n                    </Grid>\r\n                    <Grid item xs={6} component={Box} display=\"flex\" justify=\"flex-end\">\r\n                        <Button\r\n                            type=\"submit\"\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                        >\r\n                            Подтвердить\r\n                        </Button>\r\n                    </Grid>\r\n                </Grid>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default RecoveryForm;\r\n","import React, {ReactNode, useState} from \"react\";\r\nimport DialogTrigger, {DialogTriggerProps} from \"./DialogTrigger\";\r\nimport SignInForm from \"../forms/SignInForm\";\r\nimport {createStyles, makeStyles, Theme} from \"@material-ui/core/styles\";\r\nimport SignUpForm from \"../forms/SignUpForm\";\r\nimport RecoveryForm from \"../forms/RecoveryForm\";\r\n\r\nexport interface SignInDialogTriggerProps {\r\n    renderTrigger: DialogTriggerProps['renderTrigger'];\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) => createStyles({\r\n    content: {\r\n        padding: theme.spacing(3)\r\n    }\r\n}));\r\n\r\nfunction SignInDialogTrigger({\r\n    renderTrigger\r\n}: SignInDialogTriggerProps) {\r\n    const classes = useStyles();\r\n\r\n    const signInView = (\r\n        <SignInForm\r\n            onSignUp={() => setView(signUpView)}\r\n            onRecovery={() => setView(recoveryView)}\r\n        />\r\n    );\r\n\r\n    const signUpView = (\r\n        <SignUpForm\r\n            onSignIn={() => setView(signInView)}\r\n        />\r\n    );\r\n\r\n    const recoveryView = (\r\n        <RecoveryForm\r\n            onSignIn={() => setView(signInView)}\r\n        />\r\n    );\r\n\r\n    const [view, setView] = useState<ReactNode>(signInView);\r\n\r\n    const content = (\r\n        <div className={classes.content}>\r\n            {view}\r\n        </div>\r\n    );\r\n\r\n    return (\r\n        <DialogTrigger\r\n            maxWidth=\"xs\"\r\n            content={content}\r\n            renderTrigger={renderTrigger}\r\n        />\r\n    )\r\n}\r\n\r\nexport default SignInDialogTrigger;\r\n","import React from \"react\";\r\nimport MenuListItem from \"../common/MenuListItem\";\r\nimport PersonAddIcon from \"@material-ui/icons/PersonAdd\";\r\nimport SignInDialogTrigger, {SignInDialogTriggerProps} from \"../triggers/SignInDialogTrigger\";\r\n\r\nfunction AddAccountListItem() {\r\n    const renderTrigger: SignInDialogTriggerProps['renderTrigger'] = (openDialog) => (\r\n        <MenuListItem\r\n            title=\"Add account\"\r\n            icon={<PersonAddIcon />}\r\n            onClick={openDialog}\r\n        />\r\n    );\r\n\r\n    return (\r\n        <SignInDialogTrigger\r\n            renderTrigger={renderTrigger}\r\n        />\r\n    )\r\n}\r\n\r\nexport default AddAccountListItem;\r\n","import React from \"react\";\r\nimport {List} from \"@material-ui/core\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport AccountsList, {AccountsListProps} from \"./AccountsList\";\r\nimport SignOutListItem from \"../../listItems/SignOutListItem\";\r\nimport AddAccountListItem from \"../../listItems/AddAccountListItem\";\r\n\r\nexport interface AccountsMenuProps extends AccountsListProps {}\r\n\r\nfunction AccountsMenu({ onLoad }: AccountsMenuProps) {\r\n    const actionsList = (\r\n        <List>\r\n            <AddAccountListItem/>\r\n            <SignOutListItem/>\r\n        </List>\r\n    );\r\n\r\n    return (\r\n        <div>\r\n            <AccountsList\r\n                onLoad={onLoad}\r\n            />\r\n            <Divider />\r\n            {actionsList}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AccountsMenu;\r\n"],"sourceRoot":""}