{"version":3,"sources":["components/VideoPlayer.tsx","components/common/CollapseText.tsx","components/listItems/AddTranslationsListItem.tsx","components/menus/VideoMenu/index.tsx","pages/WatchPage/WatchPage.tsx","components/common/MenuListItem.tsx","components/triggers/DialogTrigger.tsx","services/videosService.ts","utils/numbers.ts","components/common/SingleChoice/SingleChoiceItem.tsx","components/common/SingleChoice/SingleChoiceList.tsx","components/Videos/index.tsx","components/common/CheckboxListItem.tsx","components/common/MultipleChoice.tsx","components/PlaylistsMultipleChoice.tsx","components/triggers/SaveToPlaylistTrigger.tsx","components/common/SingleChoice/index.tsx","components/listItems/ReportListItem.tsx","components/Comments/index.tsx","components/buttons/SubscribeButton.tsx","services/commentsService.ts","components/buttons/ToggleCountButton.tsx","components/buttons/LikeButton.tsx","components/buttons/DislikeButton.tsx","components/buttons/LikeDislikeButton.tsx","components/buttons/NotificationsToggleButton.tsx","components/ChannelToolbar.tsx"],"names":["useStyles","makeStyles","theme","createStyles","root","backgroundColor","palette","grey","borderRadius","shape","VideoPlayer","width","height","classes","className","style","collapse","marginBottom","spacing","CollapseText","initialText","additionalText","otherProps","React","useState","open","setOpen","renderText","text","Typography","variant","Collapse","in","button","Button","size","onClick","AddTranslationsListItem","LinkListItem","title","to","icon","TranslateIcon","VideoMenu","List","ReportListItem","display","justifyContent","marginTop","lineHeight","main","flex","padding","maxWidth","aside","toolbar","toolbarViews","marginRight","toolbarCreatedAt","toolbarAside","marginLeft","autoplayToolbar","minHeight","collapseText","breakpoints","up","paddingLeft","WatchPage","Toolbar","disableGutters","Math","round","random","toLocaleString","faker","date","past","toLocaleDateString","LikeDislikeButton","initialLikes","initialDislikes","startIcon","SaveToPlaylistTrigger","PopoverButton","renderContent","lorem","sentence","Divider","ChannelToolbar","sentences","Comments","onLoad","generateComments","id","Date","toString","component","htmlFor","Switch","inputProps","defaultChecked","renderAutoplayListItem","Videos","generateListVideos","MenuListItem","props","listItemIcon","listItemSecondaryAction","endIcon","dense","selected","primary","content","actions","borderTop","divider","DialogTrigger","renderTrigger","renderActions","handleToggle","closeButton","edge","dialogAppBar","endAction","dialogContent","dialogActions","dialog","onClose","generateGridVideos","a","async","Array","fill","map","item","index","replace","duration","videoUrl","previewUrl","channelAvatarUrl","image","avatar","channelName","company","companyName","channelUrl","views","verified","createdAt","isNew","isRecommended","toStringNumber","number","fractionDigits","toFixed","SingleChoiceItem","label","value","checked","Radio","opacity","checkedIcon","ListItem","ListItemIcon","ListItemText","SingleChoiceList","fromModelToProps","initialValue","onChange","setValue","Items","renderLoadMore","renderItem","model","Component","lazy","fallback","CheckboxListItem","secondary","secondaryAction","CheckboxProps","Boolean","setChecked","toggle","ListItemSecondaryAction","Checkbox","disableRipple","MultipleChoiceList","disablePadding","key","color","PlaylistsMultipleChoice","MultipleChoice","generatePlaylists","SingleChoice","reason","SubscribeButton","subscribed","setSubscribed","disableElevation","_","avatarUrl","userName","name","firstName","lastName","recent","likes","dislikes","liked","disliked","edited","alignItems","verticalAlign","typography","cursor","userSelect","paddingRight","ToggleCountButton","IconButtonProps","undefined","valueBox","IconButton","LikeButton","fontSize","DislikeButton","initialChecked","LikeButtonProps","DislikeButtonProps","setState","handleCheck","NotificationsToggleButton","items","closePopover","listItem","listItemPrimary","textDecoration","notificationsButton","ListItemAvatar","Avatar","src","Link"],"mappings":"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","file":"static/js/7.1e173017.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {createStyles, makeStyles, Theme} from \"@material-ui/core/styles\";\r\n\r\ninterface VideoPlayerProps {\r\n    width?: number,\r\n    height?: number\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) => createStyles({\r\n    root: {\r\n        backgroundColor: theme.palette.grey[\"800\"],\r\n        borderRadius: theme.shape.borderRadius\r\n    }\r\n}));\r\n\r\nfunction VideoPlayer({ width, height }: VideoPlayerProps) {\r\n    const classes = useStyles();\r\n    return (\r\n        <div\r\n            className={classes.root}\r\n            style={{\r\n                width: width,\r\n                height: height\r\n            }}\r\n        />\r\n    )\r\n}\r\n\r\nexport default VideoPlayer;\r\n","import React, {HTMLProps} from \"react\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Collapse from \"@material-ui/core/Collapse\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {createStyles, makeStyles, Theme} from \"@material-ui/core/styles\";\r\n\r\ninterface CollapseText extends HTMLProps<HTMLDivElement> {\r\n    initialText: string;\r\n    additionalText?: string;\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) => createStyles({\r\n    collapse: {\r\n        marginBottom: theme.spacing(1)\r\n    }\r\n}));\r\n\r\nfunction CollapseText({ initialText, additionalText, ...otherProps }: CollapseText) {\r\n    const classes = useStyles();\r\n    const [open, setOpen] = React.useState(false);\r\n    const toggle = () => setOpen(!open);\r\n\r\n    const renderText = (text: string) => (\r\n        <Typography variant=\"body1\">\r\n            {text}\r\n        </Typography>\r\n    );\r\n\r\n    const collapse = (\r\n        <Collapse in={open} className={classes.collapse}>\r\n            {renderText(additionalText || '')}\r\n        </Collapse>\r\n    );\r\n\r\n    const button = (\r\n        <Button\r\n            variant=\"text\"\r\n            size=\"small\"\r\n            onClick={toggle}\r\n        >\r\n            {open ? 'Show less' : 'Show more'}\r\n        </Button>\r\n    );\r\n\r\n    return (\r\n        <div {...otherProps}>\r\n            {renderText(initialText)}\r\n            {additionalText ? collapse : null}\r\n            {additionalText ? button : null}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CollapseText;\r\n","import React from \"react\";\r\nimport TranslateIcon from \"@material-ui/icons/Translate\";\r\nimport LinkListItem from \"../common/LinkListItem\";\r\n\r\nfunction AddTranslationsListItem() {\r\n    return (\r\n        <LinkListItem\r\n            title=\"Add translations\"\r\n            to=\"/video/translations\"\r\n            icon={TranslateIcon}\r\n        />\r\n    )\r\n}\r\n\r\nexport default AddTranslationsListItem;\r\n","import React from \"react\";\r\nimport {List} from \"@material-ui/core\";\r\nimport ReportListItem from \"../../listItems/ReportListItem\";\r\nimport AddTranslationsListItem from \"../../listItems/AddTranslationsListItem\";\r\n\r\nfunction VideoMenu() {\r\n    return (\r\n        <List>\r\n            <ReportListItem/>\r\n            <AddTranslationsListItem/>\r\n        </List>\r\n    )\r\n}\r\n\r\nexport default VideoMenu;\r\n","import React from \"react\";\r\nimport faker from \"faker/locale/en\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {createStyles, Theme} from \"@material-ui/core\";\r\nimport VideoPlayer from \"../../components/VideoPlayer\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport MoreHorizIcon from \"@material-ui/icons/MoreHoriz\";\r\nimport ShareIcon from \"@material-ui/icons/Share\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\nimport CollapseText from \"../../components/common/CollapseText\";\r\nimport Comments from \"../../components/Comments\";\r\nimport LikeDislikeButton from \"../../components/buttons/LikeDislikeButton\";\r\nimport ChannelToolbar from \"../../components/ChannelToolbar\";\r\nimport {generateListVideos} from \"../../services/videosService\";\r\nimport Videos from \"../../components/Videos\";\r\nimport PopoverButton from \"../../components/buttons/PopoverButton\";\r\nimport VideoMenu from \"../../components/menus/VideoMenu\";\r\nimport SaveToPlaylistTrigger from \"../../components/triggers/SaveToPlaylistTrigger\";\r\nimport {generateComments} from \"../../services/commentsService\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) => createStyles({\r\n    root: {\r\n        display: 'flex',\r\n        justifyContent: 'center'\r\n    },\r\n    title: {\r\n        marginTop: theme.spacing(2),\r\n        lineHeight: 1.25\r\n    },\r\n    main: {\r\n        flex: 1,\r\n        padding: theme.spacing(3, 2),\r\n        maxWidth: 992\r\n    },\r\n    aside: {\r\n        flex: 1,\r\n        maxWidth: 425,\r\n        padding: theme.spacing(2)\r\n    },\r\n    toolbar: {},\r\n    toolbarViews: {\r\n        marginRight: theme.spacing(2)\r\n    },\r\n    toolbarCreatedAt: {},\r\n    toolbarAside: {\r\n        marginLeft: 'auto',\r\n    },\r\n    autoplayToolbar: {\r\n        minHeight: 'initial',\r\n        marginBottom: theme.spacing(2)\r\n    },\r\n    collapseText: {\r\n        marginBottom: theme.spacing(2),\r\n        [theme.breakpoints.up('lg')]: {\r\n            paddingLeft: theme.spacing(7)\r\n        }\r\n    }\r\n}));\r\n\r\nfunction WatchPage() {\r\n    const classes = useStyles();\r\n\r\n    const toolbar = (\r\n      <Toolbar disableGutters className={classes.toolbar}>\r\n          <Typography className={classes.toolbarViews}>\r\n              {Math.round(Math.random() * 9999999).toLocaleString()} views\r\n          </Typography>\r\n          <Typography className={classes.toolbarCreatedAt}>\r\n              {faker.date.past().toLocaleDateString()}\r\n          </Typography>\r\n          <aside className={classes.toolbarAside}>\r\n              <LikeDislikeButton\r\n                  initialLikes={Math.round(Math.random() * 999999)}\r\n                  initialDislikes={Math.round(Math.random() * 99999)}\r\n              />\r\n              <Button\r\n                  variant=\"text\"\r\n                  startIcon={<ShareIcon />}\r\n              >\r\n                  Share\r\n              </Button>\r\n              <SaveToPlaylistTrigger />\r\n              <PopoverButton\r\n                  renderContent={() => <VideoMenu />}\r\n              >\r\n                  <MoreHorizIcon />\r\n              </PopoverButton>\r\n          </aside>\r\n      </Toolbar>\r\n    );\r\n\r\n    const main = (\r\n        <main className={classes.main}>\r\n            <VideoPlayer\r\n                height={538}\r\n            />\r\n            <Typography variant=\"h6\" className={classes.title}>\r\n                {faker.lorem.sentence(20)}\r\n            </Typography>\r\n            {toolbar}\r\n            <Divider />\r\n            <ChannelToolbar disableGutters />\r\n            <CollapseText\r\n                className={classes.collapseText}\r\n                initialText={faker.lorem.sentences(5)}\r\n                additionalText={faker.lorem.sentences(20)}\r\n            />\r\n            <Divider />\r\n            <Comments onLoad={generateComments} />\r\n        </main>\r\n    );\r\n\r\n    const renderAutoplayListItem = () => {\r\n        const id = (+new Date()).toString(16);\r\n        return (\r\n            <Toolbar\r\n                className={classes.autoplayToolbar}\r\n                disableGutters\r\n            >\r\n                <Typography>\r\n                    Up next\r\n                </Typography>\r\n                <aside className={classes.toolbarAside}>\r\n                    <Typography\r\n                        variant=\"button\"\r\n                        component=\"label\"\r\n                        htmlFor={id}\r\n                    >\r\n                        Autoplay\r\n                    </Typography>\r\n                    <Switch\r\n                        inputProps={{\r\n                            id: id\r\n                        }}\r\n                        defaultChecked={true}\r\n                    />\r\n                </aside>\r\n            </Toolbar>\r\n        )\r\n    };\r\n\r\n    const aside = (\r\n        <aside className={classes.aside}>\r\n            {renderAutoplayListItem()}\r\n            <Videos\r\n                onLoad={generateListVideos}\r\n            />\r\n        </aside>\r\n    );\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            {main}\r\n            {aside}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default WatchPage;\r\n","import ListItem, {ListItemProps} from \"@material-ui/core/ListItem\";\r\nimport React from \"react\";\r\nimport {ListItemIcon, ListItemIconProps, ListItemSecondaryActionProps, ListItemTextProps} from \"@material-ui/core\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\n\r\nexport interface MenuListItemProps {\r\n    title: ListItemTextProps['primary'];\r\n    icon?: ListItemIconProps['children'];\r\n    endIcon?: ListItemSecondaryActionProps['children'];\r\n    selected?: ListItemProps['selected'];\r\n    onClick?: () => void;\r\n}\r\n\r\nfunction MenuListItem(props: MenuListItemProps) {\r\n    const listItemIcon = props.icon ? (\r\n        <ListItemIcon>\r\n            {props.icon}\r\n        </ListItemIcon>\r\n    ) : null;\r\n\r\n    const listItemSecondaryAction = props.endIcon ? (\r\n        <ListItemSecondaryAction>\r\n            <IconButton\r\n                size=\"small\"\r\n                onClick={props.onClick}\r\n            >\r\n                {props.endIcon}\r\n            </IconButton>\r\n        </ListItemSecondaryAction>\r\n    ) : null;\r\n\r\n    return (\r\n        <ListItem\r\n            dense\r\n            button\r\n            selected={props.selected}\r\n            onClick={props.onClick}\r\n        >\r\n            {listItemIcon}\r\n            <ListItemText\r\n                primary={props.title}\r\n            />\r\n            {listItemSecondaryAction}\r\n        </ListItem>\r\n    )\r\n}\r\n\r\nexport default MenuListItem;\r\n","import React, {ReactElement, ReactNode, useState} from \"react\";\r\nimport {createStyles, Dialog, DialogProps, Theme} from \"@material-ui/core\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport PopoverAppBar, {PopoverAppBarProps} from \"../PopoverAppBar\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\n\r\nexport interface DialogTriggerProps {\r\n    content: DialogProps['children'];\r\n    renderTrigger: (onClick: VoidFunction) => ReactElement;\r\n    renderActions?: (onClose: VoidFunction) => ReactNode;\r\n    title?: PopoverAppBarProps['title'];\r\n    maxWidth?: DialogProps['maxWidth'];\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) => createStyles({\r\n    content: {\r\n        padding: 0\r\n    },\r\n    actions: {\r\n        borderTop: `1px solid ${theme.palette.divider}`\r\n    }\r\n}));\r\n\r\nfunction DialogTrigger({\r\n    title,\r\n    maxWidth,\r\n    renderTrigger,\r\n    content,\r\n    renderActions\r\n}: DialogTriggerProps) {\r\n    const classes = useStyles();\r\n    const [open, setOpen] = useState(false);\r\n    const handleToggle = () => setOpen(!open);\r\n\r\n    const closeButton = (\r\n        <IconButton\r\n            edge=\"end\"\r\n            onClick={handleToggle}\r\n        >\r\n            <CloseIcon />\r\n        </IconButton>\r\n    );\r\n\r\n    const dialogAppBar = title ? (\r\n        <PopoverAppBar\r\n            title={title}\r\n            endAction={closeButton}\r\n        />\r\n    ) : null;\r\n\r\n    const dialogContent = (\r\n        <DialogContent className={classes.content}>\r\n            {content}\r\n        </DialogContent>\r\n    );\r\n\r\n    const dialogActions = renderActions ? (\r\n        <DialogActions className={classes.actions}>\r\n            {renderActions(() => setOpen(false))}\r\n        </DialogActions>\r\n    ) : null;\r\n\r\n    const dialog = (\r\n        <Dialog\r\n            open={open}\r\n            onClose={handleToggle}\r\n            maxWidth={maxWidth}\r\n        >\r\n            {dialogAppBar}\r\n            {dialogContent}\r\n            {dialogActions}\r\n        </Dialog>\r\n    );\r\n\r\n    const button = renderTrigger(handleToggle);\r\n\r\n    return (\r\n        <>\r\n            {button}\r\n            {dialog}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default DialogTrigger;\r\n","import faker from \"faker/locale/en\";\r\nimport {VideoModel} from \"../models/VideoModel\";\r\n\r\nexport const generateGridVideos = async (): Promise<VideoModel[]> => Array(12)\r\n    .fill(null)\r\n    .map((item, index) => ({\r\n        id: `${index}`,\r\n        title: faker.lorem.sentence().replace('.', ''),\r\n        duration: Math.round(Math.random() * 36000000),\r\n        videoUrl: `/watch?v=${index}`,\r\n        previewUrl: 'https://invalid_url',\r\n        channelAvatarUrl: faker.image.avatar(),\r\n        channelName: faker.company.companyName(),\r\n        channelUrl: `/channel/${index}`,\r\n        views: Math.round(Math.random() * 999999999),\r\n        verified: Math.random() > 0.5,\r\n        createdAt: faker.date.past()\r\n    }));\r\n\r\nexport const generateListVideos = async (): Promise<VideoModel[]> => Array(12)\r\n    .fill(null)\r\n    .map((item, index) => ({\r\n        id: `${index}`,\r\n        title: faker.lorem.sentence().replace('.', ''),\r\n        duration: Math.round(Math.random() * 36000000),\r\n        videoUrl: `/watch?v=${index}`,\r\n        previewUrl: 'https://invalid_url',\r\n        channelName: faker.company.companyName(),\r\n        channelUrl: `/channel/${index}`,\r\n        isNew: index % 2 === 0,\r\n        isRecommended: index % 2 === 1,\r\n        views: Math.round(Math.random() * 999999999),\r\n        verified: Math.random() > 0.5,\r\n        createdAt: faker.date.past()\r\n    }));\r\n","export function toStringNumber(number: number, fractionDigits = 1) {\r\n    return (\r\n        (number >= 1000000000) ? `${(number / 1000000000).toFixed(fractionDigits)}B` :\r\n        (number >= 1000000) ? `${(number / 1000000).toFixed(fractionDigits)}M` :\r\n        (number >= 1000) ? `${(number / 1000).toFixed(fractionDigits)}K` :\r\n        number\r\n    );\r\n}\r\n","import ListItemText from \"@material-ui/core/ListItemText\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport CheckIcon from \"@material-ui/icons/Check\";\r\nimport React from \"react\";\r\nimport {Radio} from \"@material-ui/core\";\r\n\r\nexport interface SingleChoiceItemBaseProps {\r\n    label: string;\r\n    value: string;\r\n}\r\n\r\nexport interface SingleChoiceItemProps extends SingleChoiceItemBaseProps {\r\n    variant?: 'check' | 'radio';\r\n    checked?: boolean;\r\n    onClick?: () => void;\r\n}\r\n\r\nfunction SingleChoiceItem({\r\n    label,\r\n    value,\r\n    variant ,\r\n    checked,\r\n    onClick\r\n}: SingleChoiceItemProps) {\r\n    const icon = variant === 'check' ? (\r\n        <Radio\r\n            size=\"small\"\r\n            checked={checked}\r\n            icon={<CheckIcon style={{opacity: 0}} />}\r\n            checkedIcon={<CheckIcon />}\r\n        />\r\n    ) : (\r\n        <Radio\r\n            checked={checked}\r\n        />\r\n    );\r\n\r\n    return (\r\n        <ListItem\r\n            dense\r\n            button\r\n            onClick={onClick}\r\n        >\r\n            <ListItemIcon>\r\n                {icon}\r\n            </ListItemIcon>\r\n            <ListItemText\r\n                primary={label}\r\n            />\r\n        </ListItem>\r\n    )\r\n}\r\n\r\nexport default SingleChoiceItem;\r\n","import React, {useState} from \"react\";\r\nimport {List} from \"@material-ui/core\";\r\nimport Items, {ItemsProps} from \"../Items\";\r\nimport SingleChoiceItem, {SingleChoiceItemBaseProps, SingleChoiceItemProps} from \"./SingleChoiceItem\";\r\n\r\nexport interface SingleChoiceListProps<T = any> {\r\n    onLoad: ItemsProps['onLoad'];\r\n    fromModelToProps: (model: any) => SingleChoiceItemBaseProps;\r\n    variant?: SingleChoiceItemProps['variant'];\r\n    initialValue?: SingleChoiceItemProps['value'];\r\n    onChange?: (item: SingleChoiceItemBaseProps) => void;\r\n}\r\n\r\nfunction SingleChoiceList({\r\n    variant,\r\n    onLoad,\r\n    fromModelToProps,\r\n    initialValue = '',\r\n    onChange\r\n}: SingleChoiceListProps) {\r\n    const [value, setValue] = useState(initialValue);\r\n\r\n    const renderItem = (model: any) => {\r\n        const item = fromModelToProps(model);\r\n        return (\r\n            <SingleChoiceItem\r\n                {...item}\r\n                variant={variant}\r\n                checked={value === item.value}\r\n                onClick={() => {\r\n                    setValue(item.value);\r\n                    if (onChange) onChange(item);\r\n                }}\r\n            />\r\n        )\r\n    };\r\n\r\n    return (\r\n        <List>\r\n            <Items\r\n                renderLoadMore={null}\r\n                renderItem={renderItem}\r\n                onLoad={onLoad}\r\n            />\r\n        </List>\r\n    );\r\n}\r\n\r\nexport default SingleChoiceList;\r\n","import React, { Suspense } from \"react\";\r\nimport {VideosProps} from \"./Videos\";\r\nimport SuspenseFallback from \"../common/SuspenseFallback\";\r\n\r\nconst Component = React.lazy(() => import('./Videos'));\r\n\r\nfunction Videos(props: VideosProps) {\r\n    return (\r\n        <Suspense fallback={<SuspenseFallback />}>\r\n            <Component {...props} />\r\n        </Suspense>\r\n    )\r\n}\r\n\r\nexport default Videos;\r\n","import React, {useState} from \"react\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport Checkbox, {CheckboxProps} from \"@material-ui/core/Checkbox\";\r\nimport ListItemText, {ListItemTextProps} from \"@material-ui/core/ListItemText\";\r\nimport ListItemSecondaryAction, {ListItemSecondaryActionProps} from \"@material-ui/core/ListItemSecondaryAction\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\n\r\ninterface CheckboxListItemBaseProps {\r\n    primary: ListItemTextProps['primary'];\r\n    secondary?: ListItemTextProps['secondary'];\r\n    secondaryAction?: ListItemSecondaryActionProps['children'];\r\n    onChange?: (checked: boolean) => void;\r\n}\r\n\r\nexport type CheckboxListItemProps = CheckboxProps & CheckboxListItemBaseProps;\r\n\r\nfunction CheckboxListItem({\r\n    primary,\r\n    secondary,\r\n    secondaryAction,\r\n    onChange,\r\n    ...CheckboxProps\r\n}: CheckboxListItemProps) {\r\n    const [checked, setChecked] = useState(Boolean(CheckboxProps.checked));\r\n    const toggle = () => onChange ? onChange(checked) : setChecked(!checked);\r\n\r\n    const listItemSecondaryAction = secondaryAction ? (\r\n        <ListItemSecondaryAction>\r\n            {secondaryAction}\r\n        </ListItemSecondaryAction>\r\n    ) : null;\r\n\r\n    return (\r\n        <ListItem\r\n            dense\r\n            button\r\n            onClick={toggle}\r\n        >\r\n            <ListItemIcon>\r\n                <Checkbox\r\n                    {...CheckboxProps}\r\n                    checked={checked}\r\n                    onChange={toggle}\r\n                    edge=\"start\"\r\n                    disableRipple\r\n                />\r\n            </ListItemIcon>\r\n            <ListItemText\r\n                primary={primary}\r\n                secondary={secondary}\r\n            />\r\n            {listItemSecondaryAction}\r\n        </ListItem>\r\n    )\r\n}\r\n\r\nexport default CheckboxListItem;\r\n","import CheckboxListItem from \"./CheckboxListItem\";\r\nimport LockIcon from \"@material-ui/icons/Lock\";\r\nimport List from \"@material-ui/core/List\";\r\nimport Items, {ItemsProps} from \"./Items\";\r\nimport React from \"react\";\r\n\r\nexport interface MultiChoiceListItemProps {\r\n    label: string;\r\n    value: string;\r\n}\r\n\r\nexport interface MultipleChoiceListProps {\r\n    onLoad: ItemsProps['onLoad'];\r\n    fromModelToProps: (item: any) => MultiChoiceListItemProps\r\n}\r\n\r\nfunction MultipleChoiceList({\r\n    onLoad,\r\n    fromModelToProps\r\n}: MultipleChoiceListProps) {\r\n    const renderItem = (model: any) => {\r\n        const item: MultiChoiceListItemProps = fromModelToProps(model);\r\n        return (\r\n            <CheckboxListItem\r\n                key={item.value}\r\n                primary={item.label}\r\n                secondaryAction={\r\n                    <LockIcon color=\"action\" />\r\n                }\r\n            />\r\n        )\r\n    };\r\n\r\n    return (\r\n        <List disablePadding>\r\n            <Items\r\n                onLoad={onLoad}\r\n                renderItem={renderItem}\r\n            />\r\n        </List>\r\n    )\r\n}\r\n\r\nexport default MultipleChoiceList;\r\n","import MultipleChoiceList from \"./common/MultipleChoice\";\r\nimport {generatePlaylists} from \"../services/playlistsService\";\r\nimport {PlaylistModel} from \"../models/PlaylistModel\";\r\nimport React from \"react\";\r\n\r\nfunction PlaylistsMultipleChoice() {\r\n    return (\r\n        <MultipleChoiceList\r\n            onLoad={generatePlaylists}\r\n            fromModelToProps={(item: PlaylistModel) => ({\r\n                label: item.title,\r\n                value: item.id\r\n            })}\r\n        />\r\n    )\r\n}\r\n\r\nexport default PlaylistsMultipleChoice;\r\n","import React from \"react\";\r\nimport PlaylistAddIcon from \"@material-ui/icons/PlaylistAdd\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport PlaylistsMultipleChoice from \"../PlaylistsMultipleChoice\";\r\nimport DialogTrigger, {DialogTriggerProps} from \"./DialogTrigger\";\r\n\r\nexport interface SaveToPlaylistTriggerProps {\r\n    renderTrigger?: DialogTriggerProps['renderTrigger'];\r\n}\r\n\r\nfunction SaveToPlaylistTrigger(props: SaveToPlaylistTriggerProps) {\r\n    const renderTrigger = props.renderTrigger || (\r\n        onClick => (\r\n            <Button\r\n                variant=\"text\"\r\n                startIcon={<PlaylistAddIcon />}\r\n                onClick={onClick}\r\n            >\r\n                Save\r\n            </Button>\r\n        )\r\n    );\r\n\r\n    return (\r\n        <DialogTrigger\r\n            title=\"Save to...\"\r\n            maxWidth=\"xs\"\r\n            content={<PlaylistsMultipleChoice />}\r\n            renderTrigger={renderTrigger}\r\n            renderActions={() => (\r\n                <Button\r\n                    startIcon={<AddIcon />}\r\n                >\r\n                    Create new playlist\r\n                </Button>\r\n            )}\r\n        />\r\n    )\r\n}\r\n\r\nexport default SaveToPlaylistTrigger;\r\n","import SingleChoiceList from \"./SingleChoiceList\";\r\n\r\nexport default SingleChoiceList;\r\n","import React from \"react\";\r\nimport MenuListItem from \"../common/MenuListItem\";\r\nimport FlagIcon from \"@material-ui/icons/Flag\";\r\nimport DialogTrigger, {DialogTriggerProps} from \"../triggers/DialogTrigger\";\r\nimport SingleChoiceList from \"../common/SingleChoice\";\r\nimport {Button} from \"@material-ui/core\";\r\n\r\nfunction ReportListItem() {\r\n    const title = 'Report';\r\n    const renderTrigger: DialogTriggerProps['renderTrigger'] = (onClick) => (\r\n        <MenuListItem\r\n            title={title}\r\n            icon={<FlagIcon />}\r\n            onClick={onClick}\r\n        />\r\n    );\r\n\r\n    const content = (\r\n        <SingleChoiceList\r\n            onLoad={async () => [\r\n                'Sexual content',\r\n                'Violent or repulsive content',\r\n                'Hateful or abusive content',\r\n                'Harmful or dangerous acts',\r\n                'Spam or misleading'\r\n            ]}\r\n            fromModelToProps={(reason: string) => ({\r\n                label: reason,\r\n                value: reason\r\n            })}\r\n        />\r\n    );\r\n\r\n    const renderActions: DialogTriggerProps['renderActions'] = onClose => (\r\n        <>\r\n            <Button onClick={onClose}>\r\n                Cancel\r\n            </Button>\r\n            <Button\r\n                color=\"secondary\"\r\n                onClick={onClose}\r\n            >\r\n                Report\r\n            </Button>\r\n        </>\r\n    );\r\n\r\n    return (\r\n        <DialogTrigger\r\n            title={title}\r\n            content={content}\r\n            renderTrigger={renderTrigger}\r\n            renderActions={renderActions}\r\n        />\r\n    )\r\n}\r\n\r\nexport default ReportListItem;\r\n","import React, {Suspense} from \"react\";\r\nimport SuspenseFallback from \"../common/SuspenseFallback\";\r\nimport {CommentsProps} from \"./Comments\";\r\n\r\nconst Component = React.lazy(() => import('./Comments'));\r\n\r\nfunction Comments(props: CommentsProps) {\r\n    return (\r\n        <Suspense fallback={<SuspenseFallback/>}>\r\n            <Component {...props} />\r\n        </Suspense>\r\n    )\r\n}\r\n\r\nexport default Comments;\r\n","import React from \"react\";\r\nimport Button, {ButtonProps} from \"@material-ui/core/Button\";\r\n\r\nexport interface SubscribeButtonProps extends ButtonProps {}\r\n\r\nfunction SubscribeButton(props: SubscribeButtonProps) {\r\n    const [subscribed, setSubscribed] = React.useState(false);\r\n    const toggle = () => setSubscribed(!subscribed);\r\n    return (\r\n       <Button\r\n           variant=\"contained\"\r\n           disableElevation\r\n           {...props}\r\n           color={subscribed ? 'default' : (props.color || 'primary')}\r\n           onClick={toggle}\r\n       >\r\n           {subscribed ? 'Subscribed' : 'Subscribe'}\r\n       </Button>\r\n   )\r\n}\r\n\r\nexport default SubscribeButton;\r\n","import faker from \"faker/locale/en\";\r\nimport {CommentModel} from \"../models/CommentModel\";\r\n\r\nexport const generateComments = async (): Promise<CommentModel[]> => {\r\n    return Array(12).fill(null).map((_, index) => ({\r\n        id: index.toString(),\r\n        avatarUrl: faker.image.avatar(),\r\n        userName: `${faker.name.firstName()} ${faker.name.lastName()}`,\r\n        verified: Math.random() > 0.5,\r\n        text: faker.lorem.text(),\r\n        createdAt: faker.date.recent(),\r\n        likes: Math.round(Math.random() * 9999),\r\n        dislikes: Math.round(Math.random() * 9999),\r\n        liked: index % 4 === 0,\r\n        disliked: !(index % 4 === 0),\r\n        edited: index % 3 === 0\r\n    }));\r\n};\r\n","import React, {ReactNode} from \"react\";\r\nimport IconButton, {IconButtonProps} from \"@material-ui/core/IconButton\";\r\nimport {createStyles, Theme, Typography} from \"@material-ui/core\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {toStringNumber} from \"../../utils/numbers\";\r\n\r\nexport interface ToggleCountButtonProps extends IconButtonProps {\r\n    value?: number;\r\n    checked?: boolean;\r\n    icon?: ReactNode;\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) => createStyles({\r\n    root: {\r\n        display: 'inline-flex',\r\n        alignItems: 'center',\r\n        verticalAlign: 'middle',\r\n    },\r\n    typography: {\r\n        cursor: 'pointer',\r\n        userSelect: 'none',\r\n        paddingRight: theme.spacing(1),\r\n        paddingLeft: theme.spacing(.5)\r\n    }\r\n}));\r\n\r\nfunction ToggleCountButton({\r\n    value=  0,\r\n    checked = false,\r\n    icon,\r\n    onClick,\r\n    ...IconButtonProps\r\n}: ToggleCountButtonProps) {\r\n    const classes = useStyles();\r\n    const color = checked ? 'secondary' : undefined;\r\n    const id = (+new Date()).toString(16);\r\n\r\n    const valueBox = (\r\n        <Typography\r\n            className={classes.typography}\r\n            variant={IconButtonProps.size === 'small' ? 'body2' : 'button'}\r\n            color={color}\r\n            component=\"label\"\r\n            htmlFor={id}\r\n        >\r\n            {toStringNumber(value)}\r\n        </Typography>\r\n    );\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <IconButton\r\n                {...IconButtonProps}\r\n                id={id}\r\n                onClick={onClick}\r\n                color={color}\r\n            >\r\n                {icon ? icon : value}\r\n            </IconButton>\r\n            {icon ? valueBox : null}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ToggleCountButton;\r\n","import React from \"react\";\r\nimport ToggleCountButton, {ToggleCountButtonProps} from \"./ToggleCountButton\";\r\nimport ThumbUpIcon from \"@material-ui/icons/ThumbUp\";\r\n\r\nexport interface LikeButtonProps extends ToggleCountButtonProps {}\r\n\r\nfunction LikeButton(props: LikeButtonProps) {\r\n    return (\r\n        <ToggleCountButton\r\n            {...props}\r\n            icon={<ThumbUpIcon fontSize={props.size === 'small' ? 'small' : 'default'}/>}\r\n        />\r\n    )\r\n}\r\n\r\nexport default LikeButton;\r\n","import React from \"react\";\r\nimport ToggleCountButton, {ToggleCountButtonProps} from \"./ToggleCountButton\";\r\nimport ThumbDownIcon from \"@material-ui/icons/ThumbDown\";\r\n\r\nexport interface DislikeButtonProps extends ToggleCountButtonProps {}\r\n\r\nfunction DislikeButton(props: DislikeButtonProps) {\r\n    return (\r\n        <ToggleCountButton\r\n            {...props}\r\n            icon={<ThumbDownIcon fontSize={props.size === 'small' ? 'small' : 'default'}/>}\r\n        />\r\n    )\r\n}\r\n\r\nexport default DislikeButton;\r\n","import React from \"react\";\r\nimport LikeButton, {LikeButtonProps} from \"./LikeButton\";\r\nimport DislikeButton from \"./DislikeButton\";\r\nimport {ToggleCountButtonProps} from \"./ToggleCountButton\";\r\nimport {IconButtonProps} from \"@material-ui/core\";\r\n\r\nexport interface LikeDislikeButtonProps {\r\n    initialLikes?: ToggleCountButtonProps['value'];\r\n    initialDislikes?: ToggleCountButtonProps['value'];\r\n    initialChecked?: 'like' | 'dislike' | 'none';\r\n    LikeButtonProps?: Partial<LikeButtonProps>;\r\n    DislikeButtonProps?: Partial<IconButtonProps>;\r\n}\r\n\r\nfunction LikeDislikeButton({\r\n    initialLikes = 0,\r\n    initialDislikes = 0,\r\n    initialChecked = 'none',\r\n    LikeButtonProps,\r\n    DislikeButtonProps\r\n}: LikeDislikeButtonProps) {\r\n    const [{ likes, dislikes, checked }, setState] = React.useState({\r\n        likes: initialLikes,\r\n        dislikes: initialDislikes,\r\n        checked: initialChecked\r\n    });\r\n    const handleCheck = (checked: LikeDislikeButtonProps['initialChecked'] = 'none') => () => setState({\r\n        likes: initialLikes + (checked === 'like' ? 1 : 0),\r\n        dislikes: initialDislikes + (checked === 'dislike' ? 1 : 0),\r\n        checked: checked\r\n    });\r\n\r\n    return (\r\n        <>\r\n            <LikeButton\r\n                {...LikeButtonProps}\r\n                value={likes}\r\n                checked={checked === 'like'}\r\n                onClick={handleCheck('like')}\r\n            />\r\n            <DislikeButton\r\n                {...DislikeButtonProps}\r\n                value={dislikes}\r\n                checked={checked === 'dislike'}\r\n                onClick={handleCheck('dislike')}\r\n            />\r\n        </>\r\n    );\r\n}\r\n\r\nexport default LikeDislikeButton;\r\n","import React, {useState} from \"react\";\r\nimport NotificationsIcon from \"@material-ui/icons/Notifications\";\r\nimport NotificationsOffIcon from \"@material-ui/icons/NotificationsOff\";\r\nimport NotificationsActiveIcon from \"@material-ui/icons/NotificationsActive\";\r\nimport PopoverButton, {PopoverButtonProps} from \"./PopoverButton\";\r\nimport MenuListItem, {MenuListItemProps} from \"../common/MenuListItem\";\r\nimport {List} from \"@material-ui/core\";\r\n\r\nexport interface NotificationsToggleButtonProps {\r\n    className: PopoverButtonProps['className'];\r\n}\r\n\r\nfunction NotificationsToggleButton(props: NotificationsToggleButtonProps) {\r\n    const [value, setValue] = useState(1);\r\n    let items: MenuListItemProps[] = [\r\n        { title: 'All', icon: <NotificationsActiveIcon /> },\r\n        { title: 'Personalized', icon: <NotificationsIcon /> },\r\n        { title: 'None', icon: <NotificationsOffIcon /> },\r\n    ];\r\n\r\n    const renderItem = (closePopover: VoidFunction) => (item: MenuListItemProps, index: number) => (\r\n        <MenuListItem\r\n            title={item.title}\r\n            icon={item.icon}\r\n            selected={index === value}\r\n            onClick={() => {\r\n                setValue(index);\r\n                closePopover();\r\n            }}\r\n        />\r\n    );\r\n\r\n    const renderContent: PopoverButtonProps['renderContent'] = closePopover => (\r\n        <List>\r\n            {items.map(renderItem(closePopover))}\r\n        </List>\r\n    )\r\n\r\n    return (\r\n        <PopoverButton\r\n            {...props}\r\n            renderContent={renderContent}\r\n        >\r\n            {items[value].icon}\r\n        </PopoverButton>\r\n    )\r\n}\r\n\r\nexport default NotificationsToggleButton;\r\n","import React from \"react\";\r\nimport faker from \"faker/locale/en\";\r\nimport Toolbar, {ToolbarProps} from \"@material-ui/core/Toolbar\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport {createStyles, makeStyles, Theme} from \"@material-ui/core/styles\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {Typography} from \"@material-ui/core\";\r\nimport {toStringNumber} from \"../utils/numbers\";\r\nimport SubscribeButton from \"./buttons/SubscribeButton\";\r\nimport NotificationsToggleButton from \"./buttons/NotificationsToggleButton\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) => createStyles({\r\n    listItem: {\r\n        width: 'auto'\r\n    },\r\n    listItemPrimary: {\r\n        textDecoration: 'none'\r\n    },\r\n    aside: {\r\n        marginLeft: 'auto'\r\n    },\r\n    notificationsButton: {\r\n        marginLeft: theme.spacing(1)\r\n    }\r\n}));\r\n\r\nexport interface ChannelToolbar extends ToolbarProps {}\r\n\r\nfunction ChannelToolbar(props: ChannelToolbar) {\r\n    const classes = useStyles();\r\n    return (\r\n        <Toolbar {...props}>\r\n            <ListItem\r\n                className={classes.listItem}\r\n                disableGutters\r\n            >\r\n                <ListItemAvatar>\r\n                    <Avatar\r\n                        src={faker.image.avatar()}\r\n                        component={Link}\r\n                        to=\"/channel/1\"\r\n                    />\r\n                </ListItemAvatar>\r\n                <ListItemText\r\n                    primary={\r\n                        <Typography\r\n                            className={classes.listItemPrimary}\r\n                            component={Link}\r\n                            to=\"/channel/1\"\r\n                            color=\"inherit\"\r\n                        >\r\n                            {faker.company.companyName()}\r\n                        </Typography>\r\n                    }\r\n                    secondary={`${toStringNumber(Math.round(Math.random() * 9999999), 0)} subscribers`}\r\n                />\r\n            </ListItem>\r\n            <aside className={classes.aside}>\r\n                <SubscribeButton />\r\n                <NotificationsToggleButton\r\n                    className={classes.notificationsButton}\r\n                />\r\n            </aside>\r\n        </Toolbar>\r\n    );\r\n}\r\n\r\nexport default ChannelToolbar;\r\n"],"sourceRoot":""}