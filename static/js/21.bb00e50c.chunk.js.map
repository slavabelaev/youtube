{"version":3,"sources":["components/common/Category.tsx","pages/TrendingPage/TrendingPage.tsx","services/videosService.ts","components/core/Videos/index.tsx"],"names":["useStyles","makeStyles","theme","createStyles","root","display","flexDirection","alignItems","avatar","width","spacing","height","marginBottom","Category","props","classes","className","Avatar","src","avatarSrc","Typography","title","maxWidth","breakpoints","margin","header","main","padding","category","TrendingPage","map","item","Divider","Videos","onLoad","generateListVideos","generateGridVideos","a","async","Array","fill","index","id","faker","lorem","sentence","replace","duration","Math","round","random","videoUrl","previewUrl","channelAvatarUrl","image","channelName","company","companyName","channelUrl","views","verified","createdAt","date","past","isNew","isRecommended","Component","React","lazy","fallback"],"mappings":"oKAUMA,EAAYC,aAAW,SAACC,GAAD,OAAkBC,YAAa,CACxDC,KAAM,CACFC,QAAS,OACTC,cAAe,SACfC,WAAY,UAEhBC,OAAQ,CACJC,MAAOP,EAAMQ,QAAQ,IACrBC,OAAQT,EAAMQ,QAAQ,IACtBE,aAAcV,EAAMQ,QAAQ,SAoBrBG,MAhBf,SAAkBC,GACd,IAAMC,EAAUf,IAEhB,OACI,yBAAKgB,UAAWD,EAAQX,MACpB,kBAACa,EAAA,EAAD,CACID,UAAWD,EAAQP,OACnBU,IAAKJ,EAAMK,YAEf,kBAACC,EAAA,EAAD,KACKN,EAAMO,S,2BCzBjBrB,EAAYC,aAAW,SAACC,GAAD,OAAkBC,YAAa,CACxDC,KAAM,CACFkB,SAAUpB,EAAMqB,YAAYd,MAAM,MAClCe,OAAQ,QAEZC,OAAQ,CACJpB,QAAS,QAEbqB,KAAM,CACFC,QAASzB,EAAMQ,QAAQ,EAAG,IAE9BkB,SAAU,CACND,QAASzB,EAAMQ,QAAQ,SAkChBmB,UA9Bf,WACI,IAAMd,EAAUf,IAchB,OACI,yBAAKgB,UAAWD,EAAQX,MACpB,4BAAQY,UAAWD,EAAQU,QAfC,CAChC,CAAEJ,MAAO,QAASF,UAAW,IAC7B,CAAEE,MAAO,SAAUF,UAAW,IAC9B,CAAEE,MAAO,OAAQF,UAAW,IAC5B,CAAEE,MAAO,QAASF,UAAW,KAYTW,KATD,SAACC,GAAD,OACnB,yBAAKf,UAAWD,EAAQa,UACpB,kBAAC,EAAaG,QASd,kBAACC,EAAA,EAAD,MACA,0BAAMhB,UAAWD,EAAQW,MACrB,kBAACO,EAAA,EAAD,CACIC,OAAQC,U,2IC5CfC,EAAqB,oBAAAC,EAAAC,OAAA,yEAAmCC,MAAM,IACtEC,KAAK,MACLV,KAAI,SAACC,EAAMU,GAAP,MAAkB,CACnBC,GAAG,GAAD,OAAKD,GACPpB,MAAOsB,IAAMC,MAAMC,WAAWC,QAAQ,IAAK,IAC3CC,SAAUC,KAAKC,MAAsB,KAAhBD,KAAKE,UAC1BC,SAAS,YAAD,OAAcV,GACtBW,WAAY,sBACZC,iBAAkBV,IAAMW,MAAM9C,SAC9B+C,YAAaZ,IAAMa,QAAQC,cAC3BC,WAAW,YAAD,OAAcjB,GACxBkB,MAAOX,KAAKC,MAAsB,UAAhBD,KAAKE,UACvBU,SAAUZ,KAAKE,SAAW,GAC1BW,UAAWlB,IAAMmB,KAAKC,YAbI,sCAgBrB5B,EAAqB,oBAAAE,EAAAC,OAAA,yEAAmCC,MAAM,IACtEC,KAAK,MACLV,KAAI,SAACC,EAAMU,GAAP,MAAkB,CACnBC,GAAG,GAAD,OAAKD,GACPpB,MAAOsB,IAAMC,MAAMC,WAAWC,QAAQ,IAAK,IAC3CC,SAAUC,KAAKC,MAAsB,KAAhBD,KAAKE,UAC1BC,SAAS,YAAD,OAAcV,GACtBW,WAAY,sBACZG,YAAaZ,IAAMa,QAAQC,cAC3BC,WAAW,YAAD,OAAcjB,GACxBuB,MAAOvB,EAAQ,IAAM,EACrBwB,cAAexB,EAAQ,IAAM,EAC7BkB,MAAOX,KAAKC,MAAsB,UAAhBD,KAAKE,UACvBU,SAAUZ,KAAKE,SAAW,GAC1BW,UAAWlB,IAAMmB,KAAKC,YAdI,uC,iCCnBlC,4BAIMG,EAAYC,IAAMC,MAAK,kBAAM,+DAUpBnC,IARf,SAAgBnB,GACZ,OACI,kBAAC,WAAD,CAAUuD,SAAU,kBAAC,IAAD,OAChB,kBAACH,EAAcpD","file":"static/js/21.bb00e50c.chunk.js","sourcesContent":["import React from \"react\";\nimport {Avatar, AvatarProps, createStyles, Theme} from \"@material-ui/core\";\nimport Typography from \"@material-ui/core/Typography\";\nimport {makeStyles} from \"@material-ui/core/styles\";\n\nexport interface CategoryProps {\n    avatarSrc: AvatarProps['src'];\n    title: string;\n}\n\nconst useStyles = makeStyles((theme: Theme) => createStyles({\n    root: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    avatar: {\n        width: theme.spacing(10),\n        height: theme.spacing(10),\n        marginBottom: theme.spacing(1)\n    }\n}));\n\nfunction Category(props: CategoryProps) {\n    const classes = useStyles();\n\n    return (\n        <div className={classes.root}>\n            <Avatar\n                className={classes.avatar}\n                src={props.avatarSrc}\n            />\n            <Typography>\n                {props.title}\n            </Typography>\n        </div>\n    )\n}\n\nexport default Category;\n","import React from \"react\";\nimport {createStyles, Theme} from \"@material-ui/core\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport Category, {CategoryProps} from \"../../components/common/Category\";\nimport Divider from \"@material-ui/core/Divider\";\nimport {generateListVideos} from \"../../services/videosService\";\nimport Videos from \"../../components/core/Videos\";\n\nconst useStyles = makeStyles((theme: Theme) => createStyles({\n    root: {\n        maxWidth: theme.breakpoints.width('md'),\n        margin: 'auto'\n    },\n    header: {\n        display: 'flex'\n    },\n    main: {\n        padding: theme.spacing(3, 0)\n    },\n    category: {\n        padding: theme.spacing(2)\n    }\n}));\n\nfunction TrendingPage() {\n    const classes = useStyles();\n    const categories: CategoryProps[] = [\n        { title: 'Music', avatarSrc: '' },\n        { title: 'Gaming', avatarSrc: '' },\n        { title: 'News', avatarSrc: '' },\n        { title: 'Films', avatarSrc: '' },\n    ];\n\n    const renderCategory = (item: CategoryProps) => (\n        <div className={classes.category}>\n            <Category {...item} />\n        </div>\n    );\n\n    return (\n        <div className={classes.root}>\n            <header className={classes.header}>\n                {categories.map(renderCategory)}\n            </header>\n            <Divider />\n            <main className={classes.main}>\n                <Videos\n                    onLoad={generateListVideos}\n                />\n            </main>\n        </div>\n    )\n}\n\nexport default TrendingPage;\n","import faker from \"faker/locale/en\";\nimport {VideoModel} from \"../models/VideoModel\";\n\nexport const generateGridVideos = async (): Promise<VideoModel[]> => Array(12)\n    .fill(null)\n    .map((item, index) => ({\n        id: `${index}`,\n        title: faker.lorem.sentence().replace('.', ''),\n        duration: Math.round(Math.random() * 36000000),\n        videoUrl: `/watch?v=${index}`,\n        previewUrl: 'https://invalid_url',\n        channelAvatarUrl: faker.image.avatar(),\n        channelName: faker.company.companyName(),\n        channelUrl: `/channel/${index}`,\n        views: Math.round(Math.random() * 999999999),\n        verified: Math.random() > 0.5,\n        createdAt: faker.date.past()\n    }));\n\nexport const generateListVideos = async (): Promise<VideoModel[]> => Array(12)\n    .fill(null)\n    .map((item, index) => ({\n        id: `${index}`,\n        title: faker.lorem.sentence().replace('.', ''),\n        duration: Math.round(Math.random() * 36000000),\n        videoUrl: `/watch?v=${index}`,\n        previewUrl: 'https://invalid_url',\n        channelName: faker.company.companyName(),\n        channelUrl: `/channel/${index}`,\n        isNew: index % 2 === 0,\n        isRecommended: index % 2 === 1,\n        views: Math.round(Math.random() * 999999999),\n        verified: Math.random() > 0.5,\n        createdAt: faker.date.past()\n    }));\n","import React, { Suspense } from \"react\";\nimport {VideosProps} from \"./Videos\";\nimport SuspenseFallback from \"../../../layouts/SuspenseFallback\";\n\nconst Component = React.lazy(() => import('./Videos'));\n\nfunction Videos(props: VideosProps) {\n    return (\n        <Suspense fallback={<SuspenseFallback />}>\n            <Component {...props} />\n        </Suspense>\n    )\n}\n\nexport default Videos;\n"],"sourceRoot":""}