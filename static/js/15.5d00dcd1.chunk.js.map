{"version":3,"sources":["components/common/MenuListItem.tsx","components/common/SingleChoice/SingleChoiceItem.tsx","components/common/SingleChoice/SingleChoiceList.tsx","components/menus/AccountsMenu/AccountListItem.tsx","pages/SignInPage/index.tsx","components/listItems/SignOutListItem.tsx","components/listItems/PersonalChannelListItem.tsx","components/listItems/PaidMembershipsListItem.tsx","components/listItems/StudioListItem.tsx","components/listItems/SwitchAccountListItem.tsx","components/listItems/DarkThemeListItem.tsx","components/listItems/LocationListItem.tsx","components/listItems/PersonalDataListItem.tsx","components/listItems/KeyboardShortcutsListItem.tsx","components/listItems/RestrictedModeListItem.tsx","components/listItems/LanguageListItem.tsx","services/locationsService.ts","components/core/LocationChoiceList/index.tsx","components/menus/AccountMenu/views/LocationView.tsx","services/languagesService.ts","components/core/LanguageChoiceList/index.tsx","components/menus/AccountMenu/views/LanguageView.tsx","components/common/DescriptionBox.tsx","components/common/SwitchListItem.tsx","components/listItems/RestrictedModeSwitchListItem.tsx","components/menus/AccountMenu/views/RestrictedModeView.tsx","components/listItems/DarkThemeSwitchListItem.tsx","components/menus/AccountMenu/views/DarkThemeView.tsx","services/accountsService.tsx","components/menus/AccountsMenu/index.tsx","components/menus/AccountMenu/views/AccountsView.tsx","components/menus/AccountMenu/AccountMenu.tsx"],"names":["MenuListItem","props","listItemIcon","icon","listItemSecondaryAction","endIcon","size","onClick","dense","button","selected","primary","title","SingleChoiceItem","label","variant","value","checked","Radio","style","opacity","checkedIcon","ListItem","ListItemIcon","ListItemText","SingleChoiceList","onLoad","itemToProps","initialValue","onChange","useState","setValue","List","Items","renderLoadMore","renderItem","model","item","AccountListItem","fullName","email","avatarSrc","listItemAvatar","src","listItemText","secondary","listItemBody","Boolean","SIGN_OUT_PAGE_ROUTE","React","lazy","SignInPage","SignOutListItem","LinkListItem","to","ExitToAppIcon","PersonalChannelListItem","CHANNEL_PAGE_ROUTE","AccountBoxIcon","PaidMembershipsListItem","PAID_MEMBERSHIPS_PAGE_ROUTE","MonetizationOnIcon","StudioListItem","STUDIO_PAGE_ROUTE","PlayCircleFilledIcon","SwitchAccountListItem","DarkThemeListItem","themeContext","useContext","ThemeContext","statusText","theme","palette","type","LocationListItem","context","LocationContext","locationName","location","PersonalDataListItem","PERSONAL_DATA_PAGE_ROUTE","SecurityIcon","KeyboardShortcutsListItem","RestrictedModeListItem","RestrictedModeContext","enabled","LanguageListItem","LanguageContext","languageName","language","generateLocations","a","async","code","LocationChoiceList","switchLocation","LocationView","onBack","PopoverAppBar","generateLanguages","LanguageChoiceList","switchLanguage","LanguageView","useStyles","makeStyles","createStyles","root","padding","spacing","DescriptionBox","paragraphs","classes","className","map","text","index","Typography","component","gutterBottom","key","SwitchListItem","SwitchProps","htmlFor","ListItemSecondaryAction","Switch","id","RestrictedModeSwitchListItem","event","switchEnabled","RestrictedModeView","DarkThemeSwitchListItem","darkThemeEnabled","switchMode","DarkThemeView","generateAccounts","Array","fill","_","toString","avatarUrl","faker","image","avatar","name","firstName","lastName","internet","Component","AccountsMenu","fallback","SuspenseFallback","AccountsView","AccountMenu","primaryList","setView","accountsView","secondaryList","darkThemeView","languageView","SettingsListItem","HelpListItem","SendFeedbackListItem","accountHeader","color","Link","target","href","ListItemAvatar","footerList","locationView","restrictedModeView","initialView","Divider","view"],"mappings":"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","file":"static/js/15.5d00dcd1.chunk.js","sourcesContent":["import ListItem, {ListItemProps} from \"@material-ui/core/ListItem\";\nimport React from \"react\";\nimport {ListItemIcon, ListItemIconProps, ListItemSecondaryActionProps, ListItemTextProps} from \"@material-ui/core\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\nimport IconButton from \"@material-ui/core/IconButton\";\n\nexport interface MenuListItemProps {\n    title: ListItemTextProps['primary'];\n    icon?: ListItemIconProps['children'];\n    endIcon?: ListItemSecondaryActionProps['children'];\n    selected?: ListItemProps['selected'];\n    onClick?: () => void;\n}\n\nfunction MenuListItem(props: MenuListItemProps) {\n    const listItemIcon = props.icon ? (\n        <ListItemIcon>\n            {props.icon}\n        </ListItemIcon>\n    ) : null;\n\n    const listItemSecondaryAction = props.endIcon ? (\n        <ListItemSecondaryAction>\n            <IconButton\n                size=\"small\"\n                onClick={props.onClick}\n            >\n                {props.endIcon}\n            </IconButton>\n        </ListItemSecondaryAction>\n    ) : null;\n\n    return (\n        <ListItem\n            dense\n            button\n            selected={props.selected}\n            onClick={props.onClick}\n        >\n            {listItemIcon}\n            <ListItemText\n                primary={props.title}\n            />\n            {listItemSecondaryAction}\n        </ListItem>\n    )\n}\n\nexport default MenuListItem;\n","import ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport CheckIcon from \"@material-ui/icons/Check\";\nimport React from \"react\";\nimport {Radio} from \"@material-ui/core\";\n\nexport interface SingleChoiceItemBaseProps {\n    label: string;\n    value: string;\n}\n\nexport interface SingleChoiceItemProps extends SingleChoiceItemBaseProps {\n    variant?: 'check' | 'radio';\n    checked?: boolean;\n    onClick?: () => void;\n}\n\nfunction SingleChoiceItem({\n    label,\n    value,\n    variant ,\n    checked,\n    onClick\n}: SingleChoiceItemProps) {\n    const icon = variant === 'check' ? (\n        <Radio\n            size=\"small\"\n            checked={checked}\n            icon={<CheckIcon style={{opacity: 0}} />}\n            checkedIcon={<CheckIcon />}\n        />\n    ) : (\n        <Radio\n            checked={checked}\n        />\n    );\n\n    return (\n        <ListItem\n            dense\n            button\n            onClick={onClick}\n        >\n            <ListItemIcon>\n                {icon}\n            </ListItemIcon>\n            <ListItemText\n                primary={label}\n            />\n        </ListItem>\n    )\n}\n\nexport default SingleChoiceItem;\n","import React, {useState} from \"react\";\nimport {List} from \"@material-ui/core\";\nimport Items, {ItemsProps} from \"../Items\";\nimport SingleChoiceItem, {SingleChoiceItemBaseProps, SingleChoiceItemProps} from \"./SingleChoiceItem\";\n\nexport interface SingleChoiceListProps<T = any> {\n    onLoad: ItemsProps['onLoad'];\n    itemToProps: (model: any) => SingleChoiceItemBaseProps;\n    variant?: SingleChoiceItemProps['variant'];\n    initialValue?: SingleChoiceItemProps['value'];\n    onChange?: (item: SingleChoiceItemBaseProps) => void;\n}\n\nfunction SingleChoiceList({\n    variant,\n    onLoad,\n    itemToProps,\n    initialValue = '',\n    onChange\n}: SingleChoiceListProps) {\n    const [value, setValue] = useState(initialValue);\n\n    const renderItem = (model: any) => {\n        const item = itemToProps(model);\n        return (\n            <SingleChoiceItem\n                {...item}\n                variant={variant}\n                checked={value === item.value}\n                onClick={() => {\n                    setValue(item.value);\n                    if (onChange) onChange(item);\n                }}\n            />\n        )\n    };\n\n    return (\n        <List>\n            <Items\n                renderLoadMore={null}\n                renderItem={renderItem}\n                onLoad={onLoad}\n            />\n        </List>\n    );\n}\n\nexport default SingleChoiceList;\n","import React from \"react\";\nimport ListItem, {ListItemProps} from \"@material-ui/core/ListItem\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\nimport CheckIcon from \"@material-ui/icons/Check\";\n\nexport interface AccountListItemProps {\n    avatarSrc?: string;\n    fullName: string;\n    email: string;\n    selected?: boolean;\n    onClick?: ListItemProps['onClick'];\n}\n\nexport function AccountListItem({\n    fullName,\n    email,\n    avatarSrc,\n    selected = false,\n    onClick\n}: AccountListItemProps) {\n    const listItemSecondaryAction = (\n        <ListItemSecondaryAction>\n            <CheckIcon />\n        </ListItemSecondaryAction>\n    );\n\n    const listItemAvatar = (\n        <ListItemAvatar>\n            <Avatar src={avatarSrc} />\n        </ListItemAvatar>\n    );\n\n    const listItemText = (\n        <ListItemText\n            primary={fullName}\n            secondary={email}\n        />\n    );\n\n    const listItemBody = (\n        <>\n            {listItemAvatar}\n            {listItemText}\n            {selected ? listItemSecondaryAction : null}\n        </>\n    );\n\n    return Boolean(onClick) ? (\n        <ListItem dense button>\n            {listItemBody}\n        </ListItem>\n    ) : (\n        <ListItem dense>\n            {listItemBody}\n        </ListItem>\n    )\n}\n\nexport default AccountListItem;\n","import React, {Suspense} from \"react\";\nimport {LinearProgress} from \"@material-ui/core\";\nimport Layout from \"../../layouts/Layout\";\n\n\nexport const SIGN_OUT_PAGE_ROUTE = '/sign-out';\n\n\n\nconst Page = React.lazy(() => import('./SignInPage'));\n\nfunction SignInPage() {\n\treturn (\n    <Layout>\n        <Suspense fallback={<LinearProgress />}>\n            <Page />\n        </Suspense>\n    </Layout>\n)\n}\n\nexport default SignInPage;\n","import React from \"react\";\nimport LinkListItem from \"../common/LinkListItem\";\nimport {SIGN_OUT_PAGE_ROUTE} from \"../../pages/SignInPage\";\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\n\nfunction SignOutListItem() {\n    return (\n        <LinkListItem\n            title=\"Sign out\"\n            to={SIGN_OUT_PAGE_ROUTE}\n            icon={ExitToAppIcon}\n        />\n    )\n}\n\nexport default SignOutListItem;\n","import React from \"react\";\nimport LinkListItem from \"../common/LinkListItem\";\nimport {CHANNEL_PAGE_ROUTE} from \"../../pages/ChannelPage\";\nimport AccountBoxIcon from \"@material-ui/icons/AccountBox\";\n\nfunction PersonalChannelListItem() {\n    return (\n        <LinkListItem\n            title=\"Your channel\"\n            to={`${CHANNEL_PAGE_ROUTE}/user`}\n            icon={AccountBoxIcon}\n        />\n    )\n}\n\nexport default PersonalChannelListItem;\n","import React from \"react\";\nimport LinkListItem from \"../common/LinkListItem\";\nimport {PAID_MEMBERSHIPS_PAGE_ROUTE} from \"../../pages/PaidMembershipsPage\";\nimport MonetizationOnIcon from \"@material-ui/icons/MonetizationOn\";\n\nfunction PaidMembershipsListItem() {\n    return (\n        <LinkListItem\n            title=\"Paid memberships\"\n            to={PAID_MEMBERSHIPS_PAGE_ROUTE}\n            icon={MonetizationOnIcon}\n        />\n    )\n}\n\nexport default PaidMembershipsListItem;\n","import React from \"react\";\nimport LinkListItem from \"../common/LinkListItem\";\nimport {STUDIO_PAGE_ROUTE} from \"../../pages/StudioPage\";\nimport PlayCircleFilledIcon from \"@material-ui/icons/PlayCircleFilled\";\n\nfunction StudioListItem() {\n    return (\n        <LinkListItem\n            title=\"YonTube Studio\"\n            to={STUDIO_PAGE_ROUTE}\n            icon={PlayCircleFilledIcon}\n        />\n    )\n}\n\nexport default StudioListItem;\n","import React from \"react\";\nimport MenuListItem, {MenuListItemProps} from \"../common/MenuListItem\";\nimport RecentActorsIcon from \"@material-ui/icons/RecentActors\";\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\n\nexport interface SwitchAccountListItemProps {\n    onClick: MenuListItemProps['onClick'];\n}\n\nfunction SwitchAccountListItem({ onClick }: SwitchAccountListItemProps) {\n    return (\n        <MenuListItem\n            title=\"Switch account\"\n            icon={<RecentActorsIcon />}\n            endIcon={<ChevronRightIcon />}\n            onClick={onClick}\n        />\n    )\n}\n\nexport default SwitchAccountListItem;\n","import React, {useContext} from \"react\";\nimport MenuListItem, {MenuListItemProps} from \"../common/MenuListItem\";\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\nimport BrightnessIcon from \"@material-ui/icons/Brightness4\";\nimport {ThemeContext} from \"../../contexts/ThemeContext\";\n\nexport interface DarkThemeListItemProps {\n    onClick: MenuListItemProps['onClick'];\n}\n\nfunction DarkThemeListItem({ onClick }: DarkThemeListItemProps) {\n    const themeContext = useContext(ThemeContext);\n    const darkThemeEnabled = themeContext?.theme.palette.type === 'dark';\n    const statusText = darkThemeEnabled ? 'On' : 'Off';\n    return (\n        <MenuListItem\n            title={`Dark theme: ${statusText}`}\n            icon={<BrightnessIcon />}\n            endIcon={<ChevronRightIcon />}\n            onClick={onClick}\n        />\n    )\n}\n\nexport default DarkThemeListItem;\n","import React, {useContext} from \"react\";\nimport MenuListItem, {MenuListItemProps} from \"../common/MenuListItem\";\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\nimport {LocationContext} from \"../../contexts/LocationContext\";\n\nexport interface LocationListItemProps {\n    onClick: MenuListItemProps['onClick'];\n}\n\nfunction LocationListItem({ onClick }: LocationListItemProps) {\n    const context = useContext(LocationContext);\n    const locationName = context?.location?.label;\n    return (\n        <MenuListItem\n            title={`Location: ${locationName}`}\n            endIcon={<ChevronRightIcon />}\n            onClick={onClick}\n        />\n    )\n}\n\nexport default LocationListItem;\n","import React from \"react\";\nimport LinkListItem from \"../common/LinkListItem\";\nimport {PERSONAL_DATA_PAGE_ROUTE} from \"../../pages/PersonalDataPage\";\nimport SecurityIcon from \"@material-ui/icons/Security\";\n\nfunction PersonalDataListItem() {\n    return (\n        <LinkListItem\n            title=\"Your data in YonTube\"\n            to={PERSONAL_DATA_PAGE_ROUTE}\n            icon={SecurityIcon}\n        />\n    )\n}\n\nexport default PersonalDataListItem;\n","import React from \"react\";\nimport MenuListItem from \"../common/MenuListItem\";\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\nimport KeyboardIcon from \"@material-ui/icons/Keyboard\";\n\nfunction KeyboardShortcutsListItem() {\n    return (\n        <MenuListItem\n            title=\"Keyboard shortcuts\"\n            icon={<KeyboardIcon />}\n            endIcon={<ChevronRightIcon />}\n        />\n    )\n}\n\nexport default KeyboardShortcutsListItem;\n","import React, {useContext} from \"react\";\nimport MenuListItem, {MenuListItemProps} from \"../common/MenuListItem\";\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\nimport {RestrictedModeContext} from \"../../contexts/RestrictedModeContext\";\n\nexport interface RestrictedModeListItemProps {\n    onClick: MenuListItemProps['onClick'];\n}\n\nfunction RestrictedModeListItem({ onClick }: RestrictedModeListItemProps) {\n    const context = useContext(RestrictedModeContext);\n    const statusText = context?.enabled ? 'On' : 'Off';\n    return (\n        <MenuListItem\n            title={`Restricted mode: ${statusText}`}\n            endIcon={<ChevronRightIcon />}\n            onClick={onClick}\n        />\n    )\n}\n\nexport default RestrictedModeListItem;\n","import React, {useContext} from \"react\";\nimport MenuListItem, {MenuListItemProps} from \"../common/MenuListItem\";\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\nimport TranslateIcon from \"@material-ui/icons/Translate\";\nimport {LanguageContext} from \"../../contexts/LanguageContext\";\n\nexport interface LanguageListItemProps {\n    onClick: MenuListItemProps['onClick'];\n}\n\nfunction LanguageListItem({ onClick }: LanguageListItemProps) {\n    const context = useContext(LanguageContext);\n    const languageName = context?.language?.label;\n    return (\n        <MenuListItem\n            title={`Language: ${languageName}`}\n            icon={<TranslateIcon />}\n            endIcon={<ChevronRightIcon />}\n            onClick={onClick}\n        />\n    )\n}\n\nexport default LanguageListItem;\n","import {LocationModel} from \"../models/LocationModel\";\n\nexport const generateLocations = async (): Promise<LocationModel[]> => [\n    { label: 'USA', code: 'en' },\n    { label: 'Россия', code: 'ru' },\n];\n","import React, {useContext} from \"react\";\nimport {LocationModel} from \"../../../models/LocationModel\";\nimport SingleChoiceList from \"../../common/SingleChoice/SingleChoiceList\";\nimport {LocationContext} from \"../../../contexts/LocationContext\";\nimport {generateLocations} from \"../../../services/locationsService\";\n\nfunction LocationChoiceList() {\n    const context = useContext(LocationContext);\n\n    return (\n        <SingleChoiceList\n            variant=\"check\"\n            initialValue={context?.location.code}\n            onLoad={generateLocations}\n            itemToProps={(model: LocationModel) => ({\n                label: model.label,\n                value: model.code\n            })}\n            onChange={item => context?.switchLocation({\n                label: item.label,\n                code: item.value\n            })}\n        />\n    )\n}\nexport default LocationChoiceList;\n","import React from \"react\";\nimport PopoverAppBar from \"../../../core/PopoverAppBar\";\nimport LocationsList from \"../../../core/LocationChoiceList\";\nimport {AccountMenuViewProps} from \"../AccountMenuViewProps\";\n\nexport interface LocationViewProps extends AccountMenuViewProps {}\n\nfunction LocationView({ onBack }: LocationViewProps) {\n    return (\n        <div>\n            <PopoverAppBar\n                title=\"Choose your location\"\n                onBack={onBack}\n            />\n            <LocationsList />\n        </div>\n    )\n}\n\nexport default LocationView;\n","import {LanguageModel} from \"../models/LanguageModel\";\n\nexport const generateLanguages = async (): Promise<LanguageModel[]> => [\n    { label: 'English', code: 'en' },\n    { label: 'Русский', code: 'ru' },\n];\n","import React, {useContext} from \"react\";\nimport {generateLanguages} from \"../../../services/languagesService\";\nimport {LanguageModel} from \"../../../models/LanguageModel\";\nimport SingleChoiceList from \"../../common/SingleChoice/SingleChoiceList\";\nimport {LanguageContext} from \"../../../contexts/LanguageContext\";\n\nfunction LanguageChoiceList() {\n    const context = useContext(LanguageContext);\n    \n    return (\n        <SingleChoiceList\n            variant=\"check\"\n            initialValue={context?.language.code}\n            onLoad={generateLanguages}\n            itemToProps={(language: LanguageModel) => ({\n                label: language.label,\n                value: language.code\n            })}\n            onChange={item => context?.switchLanguage({\n                label: item.label,\n                code: item.value\n            })}\n        />\n    )\n}\nexport default LanguageChoiceList;\n","import React from \"react\";\nimport PopoverAppBar from \"../../../core/PopoverAppBar\";\nimport LanguagesList from \"../../../core/LanguageChoiceList\";\nimport {AccountMenuViewProps} from \"../AccountMenuViewProps\";\n\nexport interface LanguageViewProps extends AccountMenuViewProps {}\n\nfunction LanguageView({ onBack }: LanguageViewProps) {\n    return (\n        <div>\n            <PopoverAppBar\n                title=\"Choose your language\"\n                onBack={onBack}\n            />\n            <LanguagesList />\n        </div>\n    )\n}\n\nexport default LanguageView;\n","import {createStyles, makeStyles, Theme} from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport React from \"react\";\n\nconst useStyles = makeStyles((theme: Theme) => createStyles({\n    root: {\n        padding: theme.spacing(3)\n    }\n}));\n\ninterface DescriptionBoxProps {\n    paragraphs: string[]\n}\n\nfunction DescriptionBox({ paragraphs }: DescriptionBoxProps) {\n    const classes = useStyles();\n\n    const renderItem = (text: string, index: number) => (\n        <Typography\n            component=\"p\"\n            gutterBottom\n            key={index}\n        >\n            {text}\n        </Typography>\n    );\n\n    return (\n        <div className={classes.root}>\n            {paragraphs.map(renderItem)}\n        </div>\n    );\n}\n\nexport default DescriptionBox;\n","import React from \"react\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport {ListItemIcon, ListItemIconProps, ListItemTextProps, SwitchProps} from \"@material-ui/core\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\nimport Switch from \"@material-ui/core/Switch\";\n\ninterface SwitchListItemBaseProps {\n    title: ListItemTextProps['primary'];\n    icon?: ListItemIconProps['children'];\n}\n\nexport type SwitchListItemProps = SwitchListItemBaseProps & SwitchProps;\n\nfunction SwitchListItem({\n    title,\n    icon,\n    ...SwitchProps\n}: SwitchListItemProps) {\n    const listItemIcon = icon ? (\n        <ListItemIcon>\n            {icon}\n        </ListItemIcon>\n    ) : null;\n\n    return (\n        <ListItem\n            dense\n            button\n            component=\"label\"\n            htmlFor=\"dark-mode-switch\"\n        >\n            {listItemIcon}\n            <ListItemText\n                primary={title}\n            />\n            <ListItemSecondaryAction>\n                <Switch\n                    id=\"dark-mode-switch\"\n                    {...SwitchProps}\n                />\n            </ListItemSecondaryAction>\n        </ListItem>\n    )\n}\n\nexport default SwitchListItem;\n","import React, {useContext} from \"react\";\nimport SwitchListItem from \"../common/SwitchListItem\";\nimport SecurityIcon from \"@material-ui/icons/Security\";\nimport {RestrictedModeContext} from \"../../contexts/RestrictedModeContext\";\n\nfunction RestrictedModeSwitchListItem() {\n    const context = useContext(RestrictedModeContext);\n    return (\n        <SwitchListItem\n            title=\"Restricted mode\"\n            icon={<SecurityIcon />}\n            checked={context?.enabled}\n            onChange={(event, checked) => context?.switchEnabled(checked)}\n        />\n    );\n}\n\nexport default RestrictedModeSwitchListItem;\n","import React from \"react\";\nimport PopoverAppBar from \"../../../core/PopoverAppBar\";\nimport DescriptionBox from \"../../../common/DescriptionBox\";\nimport List from \"@material-ui/core/List\";\nimport RestrictedModeSwitchListItem from \"../../../listItems/RestrictedModeSwitchListItem\";\nimport {AccountMenuViewProps} from \"../AccountMenuViewProps\";\n\nexport interface RestrictedModeViewProps extends AccountMenuViewProps {}\n\nfunction RestrictedModeView({ onBack }: RestrictedModeViewProps) {\n    return (\n        <div>\n            <PopoverAppBar\n                title=\"Restricted mode\"\n                onBack={onBack}\n            />\n            <DescriptionBox\n                paragraphs={[\n                    'This helps hide potentially mature videos. No filter is 100% accurate.',\n                    'This setting only applies to this browser.'\n                ]}\n            />\n            <List>\n                <RestrictedModeSwitchListItem/>\n            </List>\n        </div>\n    )\n}\n\nexport default RestrictedModeView;\n","import React, {useContext} from \"react\";\nimport Brightness4Icon from \"@material-ui/icons/Brightness4\";\nimport SwitchListItem from \"../common/SwitchListItem\";\nimport {ThemeContext} from \"../../contexts/ThemeContext\";\n\nfunction DarkThemeSwitchListItem() {\n    const themeContext = useContext(ThemeContext);\n    const darkThemeEnabled = themeContext?.theme.palette.type === 'dark';\n    return (\n        <SwitchListItem\n            title=\"Dark Theme\"\n            icon={<Brightness4Icon />}\n            checked={darkThemeEnabled}\n            onChange={(event, checked) => {\n                themeContext?.switchMode(checked ? 'dark' : 'light');\n            }}\n        />\n    );\n}\n\nexport default DarkThemeSwitchListItem;\n","import React from \"react\";\nimport PopoverAppBar from \"../../../core/PopoverAppBar\";\nimport DescriptionBox from \"../../../common/DescriptionBox\";\nimport List from \"@material-ui/core/List\";\nimport DarkThemeSwitchListItem from \"../../../listItems/DarkThemeSwitchListItem\";\nimport {AccountMenuViewProps} from \"../AccountMenuViewProps\";\n\nexport interface DarkThemeViewProps extends AccountMenuViewProps {}\n\nfunction DarkThemeView({ onBack }: DarkThemeViewProps) {\n    return (\n        <div>\n            <PopoverAppBar\n                title=\"Dark Theme\"\n                onBack={onBack}\n            />\n            <DescriptionBox\n                paragraphs={[\n                    'Dark theme turns the light surfaces of the page dark, creating an experience ideal for night. Try it out!',\n                    'Dark theme turns the light surfaces of the page dark, creating an experience ideal for night. Try it out!',\n                    'Your Dark theme setting will apply to this browser only.'\n                ]}\n            />\n            <List>\n                <DarkThemeSwitchListItem />\n            </List>\n        </div>\n    )\n}\n\nexport default DarkThemeView;\n","import faker from \"faker/locale/en\";\nimport {AccountModel} from \"../models/AccountModel\";\n\nexport const generateAccounts = async (): Promise<AccountModel[]> => await Array(3).fill(null)\n    .map((_, index) => ({\n        id: index.toString(),\n        avatarUrl: faker.image.avatar(),\n        fullName: `${faker.name.firstName()} ${faker.name.lastName()}`,\n        email: faker.internet.email()\n    }));\n","import React, {Suspense} from \"react\";\nimport SuspenseFallback from \"../../../layouts/SuspenseFallback\";\nimport {generateAccounts} from \"../../../services/accountsService\";\n\nconst Component = React.lazy(() => import('./AccountsMenu'));\n\nfunction AccountsMenu() {\n\treturn (\n    <Suspense fallback={<SuspenseFallback />}>\n        <Component onLoad={generateAccounts} />\n    </Suspense>\n)\n}\n\nexport default AccountsMenu;\n","import React from \"react\";\nimport AccountsMenu from \"../../AccountsMenu\";\nimport PopoverAppBar from \"../../../core/PopoverAppBar\";\nimport {AccountMenuViewProps} from \"../AccountMenuViewProps\";\n\nexport interface AccountsViewProps extends AccountMenuViewProps {}\n\nfunction AccountsView({ onBack }: AccountsViewProps) {\n    return (\n        <div>\n            <PopoverAppBar\n                title=\"Accounts\"\n                onBack={onBack}\n            />\n            <AccountsMenu />\n        </div>\n    )\n}\n\nexport default AccountsView;\n","import React from \"react\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Link from \"@material-ui/core/Link\";\nimport PersonalChannelListItem from \"../../listItems/PersonalChannelListItem\";\nimport PaidMembershipsListItem from \"../../listItems/PaidMembershipsListItem\";\nimport StudioListItem from \"../../listItems/StudioListItem\";\nimport SwitchAccountListItem from \"../../listItems/SwitchAccountListItem\";\nimport SignOutListItem from \"../../listItems/SignOutListItem\";\nimport DarkThemeListItem from \"../../listItems/DarkThemeListItem\";\nimport LocationListItem from \"../../listItems/LocationListItem\";\nimport SettingsListItem from \"../../listItems/SettingsListItem\";\nimport PersonalDataListItem from \"../../listItems/PersonalDataListItem\";\nimport HelpListItem from \"../../listItems/HelpListItem\";\nimport SendFeedbackListItem from \"../../listItems/SendFeedbackListItem\";\nimport KeyboardShortcutsListItem from \"../../listItems/KeyboardShortcutsListItem\";\nimport RestrictedModeListItem from \"../../listItems/RestrictedModeListItem\";\nimport LanguageListItem from \"../../listItems/LanguageListItem\";\nimport AccountListItem from \"../AccountsMenu/AccountListItem\";\nimport LocationView from \"./views/LocationView\";\nimport LanguageView from \"./views/LanguageView\";\nimport RestrictedModeView from \"./views/RestrictedModeView\";\nimport DarkThemeView from \"./views/DarkThemeView\";\nimport AccountsView from \"./views/AccountsView\";\n\nfunction AccountMenu() {\n    const primaryList = (\n        <List>\n            <PersonalChannelListItem/>\n            <PaidMembershipsListItem/>\n            <StudioListItem/>\n            <SwitchAccountListItem \n                onClick={() => setView(accountsView)}\n            />\n            <SignOutListItem/>\n        </List>\n    );\n\n    const secondaryList = (\n        <List>\n            <DarkThemeListItem \n                onClick={() => setView(darkThemeView)}\n            />\n            <LanguageListItem \n                onClick={() => setView(languageView)}\n            />\n            <SettingsListItem/>\n            <PersonalDataListItem/>\n            <HelpListItem/>\n            <SendFeedbackListItem/>\n            <KeyboardShortcutsListItem/>\n        </List>\n    );\n\n    const accountHeader = (\n        <List>\n            <AccountListItem\n                fullName=\"Slava Belaev\"\n                email=\"slav@belaev.pro\"\n            />\n\n            <ListItem\n                dense\n                color=\"secondary\"\n                component={Link}\n                target=\"_blank\"\n                href=\"https://myaccount.google.com\"\n            >\n                <ListItemAvatar />\n                <ListItemText\n                    primary=\"Manage your account\"\n                />\n            </ListItem>\n        </List>\n    );\n\n    const footerList = (\n        <List>\n            <LocationListItem\n                onClick={() => setView(locationView)}\n            />\n            <RestrictedModeListItem\n                onClick={() => setView(restrictedModeView)}\n            />\n        </List>\n    );\n\n    const initialView = (\n        <div>\n            {accountHeader}\n            <Divider />\n            {primaryList}\n            <Divider />\n            {secondaryList}\n            <Divider />\n            {footerList}\n        </div>\n    );\n\n    const accountsView = (\n        <AccountsView\n            onBack={() => setView(initialView)}\n        />\n    );\n\n    const darkThemeView = (\n        <DarkThemeView\n            onBack={() => setView(initialView)}\n        />\n    );\n\n    const restrictedModeView = (\n        <RestrictedModeView\n            onBack={() => setView(initialView)}\n        />\n    );\n\n    const languageView = (\n        <LanguageView\n            onBack={() => setView(initialView)}\n        />\n    );\n\n    const locationView = (\n        <LocationView\n            onBack={() => setView(initialView)}\n        />\n    );\n\n    const [view, setView] = React.useState(initialView);\n    return view;\n}\n\nexport default AccountMenu;\n"],"sourceRoot":""}