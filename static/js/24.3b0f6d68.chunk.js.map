{"version":3,"sources":["components/core/Channels/Channel.tsx","components/core/Channels/Channels.tsx"],"names":["useStyles","makeStyles","theme","createStyles","root","display","flexDirection","alignItems","avatar","width","height","marginBottom","spacing","title","textDecoration","textAlign","whiteSpace","overflow","textOverflow","subscribersLabel","Channel","props","classes","className","Avatar","src","avatarSrc","Typography","variant","color","component","Link","to","toStringNumber","subscribersNumber","SubscribeButton","size","gridTemplateColumns","item","padding","flex","Channels","onLoad","itemToProps","Items","renderItem","model"],"mappings":"8LAeMA,EAAYC,aAAW,SAACC,GAAD,OAAkBC,YAAa,CACxDC,KAAM,CACFC,QAAS,OACTC,cAAe,SACfC,WAAY,UAEhBC,OAAQ,CACJC,MAAO,IACPC,OAAQ,IACRC,aAAcT,EAAMU,QAAQ,IAEhCC,MAAO,CACHC,eAAgB,OAChBC,UAAW,SACXC,WAAY,SACZC,SAAU,SACVR,MAAO,OACPS,aAAc,YAElBC,iBAAkB,CACdR,aAAcT,EAAMU,QAAQ,GAC5BG,UAAW,SACXC,WAAY,SACZC,SAAU,SACVR,MAAO,OACPS,aAAc,iBAoCPE,MAhCf,SAAiBC,GACb,IAAMC,EAAUtB,IAChB,OACI,yBAAKuB,UAAWD,EAAQlB,MACpB,kBAACoB,EAAA,EAAD,CACID,UAAWD,EAAQd,OACnBiB,IAAKJ,EAAMK,YAEf,kBAACC,EAAA,EAAD,CACIJ,UAAWD,EAAQT,MACnBe,QAAQ,QACRC,MAAM,cACNC,UAAWC,IACXC,GAAIX,EAAMW,IAETX,EAAMR,OAEX,kBAACc,EAAA,EAAD,CACIJ,UAAWD,EAAQH,iBACnBS,QAAQ,QACRC,MAAM,iBAELI,YAAeZ,EAAMa,mBAL1B,gBAOA,kBAACC,EAAA,EAAD,CACIC,KAAK,QACLP,MAAM,c,SC5DhB7B,EAAYC,aAAW,SAACC,GAAD,OAAkBC,YAAa,CACxDC,KAAM,CACFC,QAAS,OACTgC,oBAAqB,6BAEzBC,KAAM,CACFC,QAASrC,EAAMU,QAAQ,GACvB4B,KAAM,cAyBCC,UArBf,YAA2D,IAAvCC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,YAClBrB,EAAUtB,IAUhB,OACI,yBAAKuB,UAAWD,EAAQlB,MACpB,kBAACwC,EAAA,EAAD,CACIC,WAZO,SAACC,GAChB,IAAMzB,EAAQsB,EAAYG,GAC1B,OACI,yBAAKvB,UAAWD,EAAQgB,MACpB,kBAAC,EAAYjB,KASbqB,OAAQA","file":"static/js/24.3b0f6d68.chunk.js","sourcesContent":["import React from \"react\";\nimport {Link} from \"react-router-dom\";\nimport {Avatar, AvatarProps, createStyles, Theme} from \"@material-ui/core\";\nimport {toStringNumber} from \"../../../utils/numbers\";\nimport SubscribeButton from \"../../buttons/SubscribeButton\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\n\nexport interface ChannelProps {\n    title: string;\n    subscribersNumber: number;\n    avatarSrc: AvatarProps['src'];\n    to: string;\n}\n\nconst useStyles = makeStyles((theme: Theme) => createStyles({\n    root: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center'\n    },\n    avatar: {\n        width: 104,\n        height: 104,\n        marginBottom: theme.spacing(1)\n    },\n    title: {\n        textDecoration: 'none',\n        textAlign: 'center',\n        whiteSpace: 'nowrap',\n        overflow: 'hidden',\n        width: '100%',\n        textOverflow: 'ellipsis'\n    },\n    subscribersLabel: {\n        marginBottom: theme.spacing(1),\n        textAlign: 'center',\n        whiteSpace: 'nowrap',\n        overflow: 'hidden',\n        width: '100%',\n        textOverflow: 'ellipsis'\n    }\n}));\n\nfunction Channel(props: ChannelProps) {\n    const classes = useStyles();\n    return (\n        <div className={classes.root}>\n            <Avatar\n                className={classes.avatar}\n                src={props.avatarSrc}\n            />\n            <Typography\n                className={classes.title}\n                variant=\"body1\"\n                color=\"textPrimary\"\n                component={Link}\n                to={props.to}\n            >\n                {props.title}\n            </Typography>\n            <Typography\n                className={classes.subscribersLabel}\n                variant=\"body2\"\n                color=\"textSecondary\"\n            >\n                {toStringNumber(props.subscribersNumber)} subscribers\n            </Typography>\n            <SubscribeButton\n                size=\"small\"\n                color=\"default\"\n            />\n        </div>\n    )\n}\n\nexport default Channel;\n","import React from \"react\";\nimport Channel, {ChannelProps} from \"./Channel\";\nimport {createStyles, makeStyles, Theme} from \"@material-ui/core/styles\";\nimport Items, {ItemsProps} from \"../../common/Items\";\n\nexport interface ChannelsProps {\n    onLoad: ItemsProps['onLoad'];\n    itemToProps: (model: any) => ChannelProps;\n}\n\nconst useStyles = makeStyles((theme: Theme) => createStyles({\n    root: {\n        display: 'grid',\n        gridTemplateColumns: 'repeat(5, minmax(0, 1fr))'\n    },\n    item: {\n        padding: theme.spacing(2),\n        flex: '1 20%'\n    }\n}));\n\nfunction Channels({ onLoad, itemToProps }: ChannelsProps) {\n    const classes = useStyles();\n    const renderItem = (model: any) => {\n        const props = itemToProps(model);\n        return (\n            <div className={classes.item}>\n                <Channel {...props} />\n            </div>\n        )\n    };\n\n    return (\n        <div className={classes.root}>\n            <Items\n                renderItem={renderItem}\n                onLoad={onLoad}\n            />\n        </div>\n    )\n}\n\nexport default Channels;\n"],"sourceRoot":""}