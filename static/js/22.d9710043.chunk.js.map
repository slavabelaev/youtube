{"version":3,"sources":["components/triggers/DialogTrigger.tsx","components/menus/AccountsMenu/AccountsList.tsx","components/forms/SignInForm.tsx","components/forms/SignUpForm.tsx","components/forms/RecoveryForm.tsx","components/triggers/AuthDialogTrigger.tsx","components/listItems/AddAccountListItem.tsx","components/menus/AccountsMenu/AccountsMenu.tsx"],"names":["useStyles","makeStyles","theme","createStyles","content","padding","actions","borderTop","palette","divider","DialogTrigger","title","maxWidth","renderTrigger","renderActions","classes","useState","open","setOpen","handleToggle","closeButton","edge","onClick","dialogAppBar","endAction","dialogContent","className","dialogActions","dialog","onClose","button","AccountsList","onLoad","List","Items","renderItem","item","AccountListItem","key","id","avatarSrc","avatarUrl","fullName","email","selected","renderLoadMore","root","display","flexDirection","alignItems","avatar","backgroundColor","secondary","main","marginBottom","spacing","form","width","marginTop","recoveryLink","cursor","marginRight","SignInForm","props","onSignUp","onRecovery","React","showPassword","setShowPassword","login","password","values","setValues","handleSignUp","handleRecovery","handleChange","prop","event","target","value","Avatar","Typography","component","variant","noValidate","Grid","container","xs","TextField","fullWidth","label","name","autoComplete","onChange","type","InputProps","endAdornment","InputAdornment","position","IconButton","aria-label","onMouseDown","preventDefault","Tooltip","placement","Visibility","VisibilityOff","Button","color","Box","justify","paper","margin","SignUpForm","onSignIn","useHistory","handleSignIn","sm","FormControlLabel","control","Checkbox","justifyContent","description","textAlign","RecoveryForm","AuthDialogTrigger","signInView","setView","signUpView","recoveryView","view","AddAccountListItem","openDialog","MenuListItem","icon","AccountsMenu","actionsList","SignOutListItem","Divider"],"mappings":"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","file":"static/js/22.d9710043.chunk.js","sourcesContent":["import React, {ReactElement, ReactNode, useState} from \"react\";\nimport {createStyles, Dialog, DialogProps, Theme} from \"@material-ui/core\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport PopoverAppBar, {PopoverAppBarProps} from \"../core/PopoverAppBar\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport {makeStyles} from \"@material-ui/core/styles\";\n\nexport interface DialogTriggerProps {\n    content: DialogProps['children'];\n    renderTrigger: (onClick: VoidFunction) => ReactElement;\n    renderActions?: (onClose: VoidFunction) => ReactNode;\n    title?: PopoverAppBarProps['title'];\n    maxWidth?: DialogProps['maxWidth'];\n}\n\nconst useStyles = makeStyles((theme: Theme) => createStyles({\n    content: {\n        padding: 0\n    },\n    actions: {\n        borderTop: `1px solid ${theme.palette.divider}`\n    }\n}));\n\nfunction DialogTrigger({\n    title,\n    maxWidth,\n    renderTrigger,\n    content,\n    renderActions\n}: DialogTriggerProps) {\n    const classes = useStyles();\n    const [open, setOpen] = useState(false);\n    const handleToggle = () => setOpen(!open);\n\n    const closeButton = (\n        <IconButton\n            edge=\"end\"\n            onClick={handleToggle}\n        >\n            <CloseIcon />\n        </IconButton>\n    );\n\n    const dialogAppBar = title ? (\n        <PopoverAppBar\n            title={title}\n            endAction={closeButton}\n        />\n    ) : null;\n\n    const dialogContent = (\n        <DialogContent className={classes.content}>\n            {content}\n        </DialogContent>\n    );\n\n    const dialogActions = renderActions ? (\n        <DialogActions className={classes.actions}>\n            {renderActions(() => setOpen(false))}\n        </DialogActions>\n    ) : null;\n\n    const dialog = (\n        <Dialog\n            open={open}\n            onClose={handleToggle}\n            maxWidth={maxWidth}\n        >\n            {dialogAppBar}\n            {dialogContent}\n            {dialogActions}\n        </Dialog>\n    );\n\n    const button = renderTrigger(handleToggle);\n\n    return (\n        <>\n            {button}\n            {dialog}\n        </>\n    )\n}\n\nexport default DialogTrigger;\n","import React from \"react\";\nimport {List} from \"@material-ui/core\";\nimport AccountListItem from \"./AccountListItem\";\nimport Items, {ItemsProps} from \"../../common/Items\";\nimport {AccountModel} from \"../../../models/AccountModel\";\n\nexport interface AccountsListProps {\n    onLoad: ItemsProps['onLoad'];\n}\n\nfunction AccountsList({ onLoad }: AccountsListProps) {\n    const renderItem = (item: AccountModel) => (\n        <AccountListItem\n            key={item.id}\n            avatarSrc={item.avatarUrl}\n            fullName={item.fullName}\n            email={item.email}\n            selected={false}\n            onClick={() => null}\n        />\n    );\n\n    return (\n        <List>\n            <Items\n                renderItem={renderItem}\n                renderLoadMore={null}\n                onLoad={onLoad}\n            />\n        </List>\n    )\n}\n\nexport default AccountsList;\n","import React from \"react\";\nimport {Link as StyledLink} from \"@material-ui/core\";\nimport {createStyles, makeStyles, Theme} from \"@material-ui/core/styles\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Typography from \"@material-ui/core/Typography\";\nimport {IconButton} from \"@material-ui/core\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Box from \"@material-ui/core/Box\";\nimport {Visibility, VisibilityOff} from \"@material-ui/icons\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport SettingsBackupRestoreIcon from \"@material-ui/icons/SettingsBackupRestore\";\n\nconst useStyles = makeStyles((theme: Theme) => createStyles({\n    root: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center'\n    },\n    avatar: {\n        backgroundColor: theme.palette.secondary.main,\n        marginBottom: theme.spacing(2)\n    },\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(3),\n    },\n    recoveryLink: {\n        display: 'flex',\n        alignItems: 'center',\n        cursor: 'pointer',\n        '&>svg': {\n            marginRight: theme.spacing(1)\n        }\n    }\n}));\n\ninterface SignInFormState {\n    login: string;\n    password: string;\n}\n\nexport interface SignInFormProps {\n    onSignUp?: VoidFunction;\n    onRecovery?: VoidFunction;\n}\n\nexport function SignInForm(props: SignInFormProps) {\n    const classes = useStyles();\n    const {onSignUp, onRecovery} = props;\n    const [showPassword, setShowPassword] = React.useState(false);\n    const [values, setValues] = React.useState<SignInFormState>({\n        login: '',\n        password: ''\n    });\n\n    const handleSignUp = onSignUp;\n        //|| (() => history.push(SIGN_UP_PAGE_ROUTE_PATH));\n    const handleRecovery = onRecovery;\n        //|| (() => history.push(RECOVERY_PAGE_ROUTE_PATH));\n\n    const handleChange = (prop: keyof SignInFormState) => (event: React.ChangeEvent<HTMLInputElement>) => {\n        setValues({ ...values, [prop]: event.target.value });\n    };\n\n    const handleShowPassword = () => {\n        setShowPassword(!showPassword);\n    };\n\n    const handleMouseDownPassword = (event: React.MouseEvent<HTMLButtonElement>) => {\n        event.preventDefault();\n    };\n\n    return (\n        <div className={classes.root}>\n            <Avatar className={classes.avatar}>\n                <LockOutlinedIcon />\n            </Avatar>\n            <Typography\n                component=\"h1\"\n                variant=\"h5\"\n            >\n                Sign In\n            </Typography>\n            <Typography\n                component=\"p\"\n                variant=\"subtitle1\"\n            >\n                Use your account\n            </Typography>\n            <form noValidate className={classes.form}>\n                <Grid container spacing={2}>\n                    <Grid item xs={12}>\n                        <TextField\n                            variant=\"outlined\"\n                            fullWidth\n                            id=\"login\"\n                            label=\"Phone or email\"\n                            name=\"login\"\n                            autoComplete=\"login\"\n                            value={values.login}\n                            onChange={handleChange('login')}\n                        />\n                    </Grid>\n                    <Grid item xs={12}>\n                        <TextField\n                            id=\"outlined-adornment-password\"\n                            fullWidth\n                            variant=\"outlined\"\n                            type={showPassword ? 'text' : 'password'}\n                            label=\"Password\"\n                            autoComplete=\"current-password\"\n                            value={values.password}\n                            onChange={handleChange('password')}\n                            InputProps={{\n                                endAdornment: (\n                                    <InputAdornment position=\"end\">\n                                        <IconButton\n                                            edge=\"end\"\n                                            aria-label=\"toggle password visibility\"\n                                            onClick={handleShowPassword}\n                                            onMouseDown={handleMouseDownPassword}\n                                        >\n                                            <Tooltip\n                                                placement=\"left\"\n                                                title={showPassword ? 'Hide password' : 'Show password'}\n                                            >\n                                                {showPassword ? <Visibility /> : <VisibilityOff />}\n                                            </Tooltip>\n                                        </IconButton>\n                                    </InputAdornment>\n                                ),\n                            }}\n                        />\n                    </Grid>\n                    <Grid item xs={12}>\n                        <StyledLink\n                            className={classes.recoveryLink}\n                            onClick={handleRecovery}\n                        >\n                            <SettingsBackupRestoreIcon />\n                            Forgot your password?\n                        </StyledLink>\n                    </Grid>\n                    <Grid item xs={6}>\n                        <Button\n                            color=\"primary\"\n                            onClick={handleSignUp}\n                        >\n                            Create an account\n                        </Button>\n                    </Grid>\n                    <Grid item xs={6} component={Box} display=\"flex\" justify=\"flex-end\">\n                        <Button\n                            type=\"submit\"\n                            variant=\"contained\"\n                            color=\"primary\"\n                        >\n                            Login to account\n                        </Button>\n                    </Grid>\n                </Grid>\n            </form>\n        </div>\n    );\n}\n\nexport default SignInForm;\n","import React from \"react\";\nimport {useHistory} from \"react-router-dom\";\nimport {createStyles, makeStyles, Theme} from \"@material-ui/core/styles\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport {IconButton} from \"@material-ui/core\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport Box from \"@material-ui/core/Box\";\nimport {Visibility, VisibilityOff} from \"@material-ui/icons\";\nimport PersonIcon from \"@material-ui/icons/Person\";\n\nconst useStyles = makeStyles((theme: Theme) => createStyles({\n    paper: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(3),\n    },\n}));\n\nexport interface SignUpFormProps {\n    onSignIn?: VoidFunction;\n}\n\nexport function SignUpForm(props: SignUpFormProps) {\n    const classes = useStyles();\n    const history = useHistory();\n    const {onSignIn} = props;\n    const [showPassword, setShowPassword] = React.useState(false);\n\n    const handleSignIn = onSignIn;\n    //|| (() => history.push(SIGN_IN_PAGE_ROUTE_PATH));\n\n    const handleShowPassword = () => {\n        setShowPassword(!showPassword);\n    };\n\n    const handleMouseDownPassword = (event: React.MouseEvent<HTMLButtonElement>) => {\n        event.preventDefault();\n    };\n\n    return (\n        <div className={classes.paper}>\n            <Avatar className={classes.avatar}>\n                <PersonIcon />\n            </Avatar>\n            <Typography component=\"h1\" variant=\"h5\">\n                Create an account\n            </Typography>\n            <form className={classes.form} noValidate>\n                <Grid container spacing={2}>\n                    <Grid item xs={12} sm={6}>\n                        <TextField\n                            autoComplete=\"firstName\"\n                            name=\"firstName\"\n                            variant=\"outlined\"\n                            fullWidth\n                            id=\"firstName\"\n                            label=\"Name\"\n                        />\n                    </Grid>\n                    <Grid item xs={12} sm={6}>\n                        <TextField\n                            variant=\"outlined\"\n                            fullWidth\n                            id=\"lastName\"\n                            label=\"Surname\"\n                            name=\"lastName\"\n                            autoComplete=\"lastName\"\n                        />\n                    </Grid>\n                    <Grid item xs={12}>\n                        <TextField\n                            variant=\"outlined\"\n                            fullWidth\n                            id=\"email\"\n                            label=\"Phone or email\"\n                            name=\"email\"\n                            autoComplete=\"email\"\n                        />\n                    </Grid>\n                    <Grid item xs={12}>\n                        <TextField\n                            id=\"outlined-adornment-password\"\n                            fullWidth\n                            variant=\"outlined\"\n                            type={showPassword ? 'text' : 'password'}\n                            label=\"Password\"\n                            autoComplete=\"current-password\"\n                            InputProps={{\n                                endAdornment: (\n                                    <InputAdornment position=\"end\">\n                                        <IconButton\n                                            edge=\"end\"\n                                            aria-label=\"toggle password visibility\"\n                                            onClick={handleShowPassword}\n                                            onMouseDown={handleMouseDownPassword}\n                                        >\n                                            <Tooltip\n                                                placement=\"left\"\n                                                title={showPassword ? 'Hide password' : 'Show password'}\n                                            >\n                                                {showPassword ? <Visibility /> : <VisibilityOff />}\n                                            </Tooltip>\n                                        </IconButton>\n                                    </InputAdornment>\n                                ),\n                            }}\n                        />\n                    </Grid>\n                    <Grid item xs={12}>\n                        <FormControlLabel\n                            control={<Checkbox value=\"allowExtraEmails\" color=\"primary\" />}\n                            label=\"I want to receive notifications and news\"\n                        />\n                    </Grid>\n                    <Grid item xs={6}>\n                        <Button\n                            color=\"primary\"\n                            onClick={handleSignIn}\n                        >\n                            Sign In\n                        </Button>\n                    </Grid>\n                    <Grid item xs={6} component={Box} display=\"flex\" justifyContent=\"flex-end\">\n                        <Button\n                            type=\"submit\"\n                            variant=\"contained\"\n                            color=\"primary\"\n                        >\n                            Create\n                        </Button>\n                    </Grid>\n                </Grid>\n            </form>\n        </div>\n    );\n}\n\nexport default SignUpForm;\n","import React from \"react\";\nimport {useHistory} from 'react-router-dom';\nimport {createStyles, makeStyles, Theme} from '@material-ui/core/styles';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from \"@material-ui/core/Grid\";\nimport Box from \"@material-ui/core/Box\";\nimport SettingsBackupRestoreIcon from '@material-ui/icons/SettingsBackupRestore';\n\nconst useStyles = makeStyles((theme: Theme) => createStyles({\n    root: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    avatar: {\n        backgroundColor: theme.palette.secondary.main,\n        marginBottom: theme.spacing(2)\n    },\n    description: {\n        textAlign: 'center'\n    },\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(3),\n    },\n}));\n\ninterface RecoveryFormState {\n    login: string;\n}\n\nexport interface RecoveryFormProps {\n    onSignIn?: VoidFunction;\n}\n\nexport function RecoveryForm(props: RecoveryFormProps) {\n    const classes = useStyles();\n    const history = useHistory();\n    const {onSignIn} = props;\n    const [values, setValues] = React.useState<RecoveryFormState>({\n        login: '',\n    });\n\n    const handleSignIn = onSignIn;\n    //|| (() => history.push(SIGN_IN_PAGE_ROUTE_PATH));\n\n    const handleChange = (prop: keyof RecoveryFormState) => (event: React.ChangeEvent<HTMLInputElement>) => {\n        setValues({ ...values, [prop]: event.target.value });\n    };\n\n    return (\n        <div className={classes.root}>\n            <Avatar className={classes.avatar}>\n                <SettingsBackupRestoreIcon />\n            </Avatar>\n            <Typography\n                component=\"h1\"\n                variant=\"h5\"\n            >\n                Access recovery\n            </Typography>\n            <Typography\n                component=\"p\"\n                variant=\"subtitle1\"\n                className={classes.description}\n            >\n                Enter the data specified during registration\n            </Typography>\n            <form noValidate className={classes.form}>\n                <Grid container spacing={2}>\n                    <Grid item xs={12}>\n                        <TextField\n                            variant=\"outlined\"\n                            fullWidth\n                            id=\"login\"\n                            label=\"Phone or email\"\n                            name=\"login\"\n                            autoComplete=\"login\"\n                            value={values.login}\n                            onChange={handleChange('login')}\n                        />\n                    </Grid>\n                    <Grid item xs={6}>\n                        <Button\n                            color=\"primary\"\n                            onClick={handleSignIn}\n                        >\n                            Sign In\n                        </Button>\n                    </Grid>\n                    <Grid item xs={6} component={Box} display=\"flex\" justify=\"flex-end\">\n                        <Button\n                            type=\"submit\"\n                            variant=\"contained\"\n                            color=\"primary\"\n                        >\n                            Confirm\n                        </Button>\n                    </Grid>\n                </Grid>\n            </form>\n        </div>\n    );\n}\n\nexport default RecoveryForm;\n","import React, {ReactNode, useState} from \"react\";\nimport DialogTrigger, {DialogTriggerProps} from \"./DialogTrigger\";\nimport SignInForm from \"../forms/SignInForm\";\nimport {createStyles, makeStyles, Theme} from \"@material-ui/core/styles\";\nimport SignUpForm from \"../forms/SignUpForm\";\nimport RecoveryForm from \"../forms/RecoveryForm\";\n\nexport interface AuthDialogTriggerProps {\n    renderTrigger: DialogTriggerProps['renderTrigger'];\n}\n\nconst useStyles = makeStyles((theme: Theme) => createStyles({\n    content: {\n        padding: theme.spacing(3)\n    }\n}));\n\nfunction AuthDialogTrigger({\n    renderTrigger\n}: AuthDialogTriggerProps) {\n    const classes = useStyles();\n\n    const signInView = (\n        <SignInForm\n            onSignUp={() => setView(signUpView)}\n            onRecovery={() => setView(recoveryView)}\n        />\n    );\n\n    const signUpView = (\n        <SignUpForm\n            onSignIn={() => setView(signInView)}\n        />\n    );\n\n    const recoveryView = (\n        <RecoveryForm\n            onSignIn={() => setView(signInView)}\n        />\n    );\n\n    const [view, setView] = useState<ReactNode>(signInView);\n\n    const content = (\n        <div className={classes.content}>\n            {view}\n        </div>\n    );\n\n    return (\n        <DialogTrigger\n            maxWidth=\"xs\"\n            content={content}\n            renderTrigger={renderTrigger}\n        />\n    )\n}\n\nexport default AuthDialogTrigger;\n","import React from \"react\";\nimport MenuListItem from \"../common/MenuListItem\";\nimport PersonAddIcon from \"@material-ui/icons/PersonAdd\";\nimport AuthDialogTrigger, {AuthDialogTriggerProps} from \"../triggers/AuthDialogTrigger\";\n\nfunction AddAccountListItem() {\n    const renderTrigger: AuthDialogTriggerProps['renderTrigger'] = (openDialog) => (\n        <MenuListItem\n            title=\"Add account\"\n            icon={<PersonAddIcon />}\n            onClick={openDialog}\n        />\n    );\n\n    return (\n        <AuthDialogTrigger\n            renderTrigger={renderTrigger}\n        />\n    )\n}\n\nexport default AddAccountListItem;\n","import React from \"react\";\nimport {List} from \"@material-ui/core\";\nimport Divider from \"@material-ui/core/Divider\";\nimport AccountsList, {AccountsListProps} from \"./AccountsList\";\nimport SignOutListItem from \"../../listItems/SignOutListItem\";\nimport AddAccountListItem from \"../../listItems/AddAccountListItem\";\n\nexport interface AccountsMenuProps extends AccountsListProps {}\n\nfunction AccountsMenu({ onLoad }: AccountsMenuProps) {\n    const actionsList = (\n        <List>\n            <AddAccountListItem/>\n            <SignOutListItem/>\n        </List>\n    );\n\n    return (\n        <div>\n            <AccountsList\n                onLoad={onLoad}\n            />\n            <Divider />\n            {actionsList}\n        </div>\n    );\n}\n\nexport default AccountsMenu;\n"],"sourceRoot":""}