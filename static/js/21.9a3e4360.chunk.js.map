{"version":3,"sources":["components/common/Category.tsx","pages/TrendingPage/TrendingPage.tsx","services/videosService.ts","components/Videos/index.tsx"],"names":["useStyles","makeStyles","theme","createStyles","root","display","flexDirection","alignItems","avatar","width","spacing","height","marginBottom","Category","props","classes","className","Avatar","src","avatarSrc","Typography","title","maxWidth","breakpoints","margin","header","main","padding","category","TrendingPage","map","item","Divider","Videos","onLoad","generateListVideos","generateGridVideos","a","async","Array","fill","index","id","faker","lorem","sentence","replace","duration","Math","round","random","videoUrl","previewUrl","channelAvatarUrl","image","channelName","company","companyName","channelUrl","views","verified","createdAt","date","past","isNew","isRecommended","Component","React","lazy","fallback"],"mappings":"oKAUMA,EAAYC,aAAW,SAACC,GAAD,OAAkBC,YAAa,CACxDC,KAAM,CACFC,QAAS,OACTC,cAAe,SACfC,WAAY,UAEhBC,OAAQ,CACJC,MAAOP,EAAMQ,QAAQ,IACrBC,OAAQT,EAAMQ,QAAQ,IACtBE,aAAcV,EAAMQ,QAAQ,SAoBrBG,MAhBf,SAAkBC,GACd,IAAMC,EAAUf,IAEhB,OACI,yBAAKgB,UAAWD,EAAQX,MACpB,kBAACa,EAAA,EAAD,CACID,UAAWD,EAAQP,OACnBU,IAAKJ,EAAMK,YAEf,kBAACC,EAAA,EAAD,KACKN,EAAMO,S,2BCzBjBrB,EAAYC,aAAW,SAACC,GAAD,OAAkBC,YAAa,CACxDC,KAAM,CACFkB,SAAUpB,EAAMqB,YAAYd,MAAM,MAClCe,OAAQ,QAEZC,OAAQ,CACJpB,QAAS,QAEbqB,KAAM,CACFC,QAASzB,EAAMQ,QAAQ,EAAG,IAE9BkB,SAAU,CACND,QAASzB,EAAMQ,QAAQ,SAkChBmB,UA9Bf,WACI,IAAMd,EAAUf,IAchB,OACI,yBAAKgB,UAAWD,EAAQX,MACpB,4BAAQY,UAAWD,EAAQU,QAfC,CAChC,CAAEJ,MAAO,QAASF,UAAW,IAC7B,CAAEE,MAAO,SAAUF,UAAW,IAC9B,CAAEE,MAAO,OAAQF,UAAW,IAC5B,CAAEE,MAAO,QAASF,UAAW,KAYTW,KATD,SAACC,GAAD,OACnB,yBAAKf,UAAWD,EAAQa,UACpB,kBAAC,EAAaG,QASd,kBAACC,EAAA,EAAD,MACA,0BAAMhB,UAAWD,EAAQW,MACrB,kBAACO,EAAA,EAAD,CACIC,OAAQC,U,2IC5CfC,EAAqB,oBAAAC,EAAAC,OAAA,yEAAmCC,MAAM,IACtEC,KAAK,MACLV,KAAI,SAACC,EAAMU,GAAP,MAAkB,CACnBC,GAAG,GAAD,OAAKD,GACPpB,MAAOsB,IAAMC,MAAMC,WAAWC,QAAQ,IAAK,IAC3CC,SAAUC,KAAKC,MAAsB,KAAhBD,KAAKE,UAC1BC,SAAS,YAAD,OAAcV,GACtBW,WAAY,sBACZC,iBAAkBV,IAAMW,MAAM9C,SAC9B+C,YAAaZ,IAAMa,QAAQC,cAC3BC,WAAW,YAAD,OAAcjB,GACxBkB,MAAOX,KAAKC,MAAsB,UAAhBD,KAAKE,UACvBU,SAAUZ,KAAKE,SAAW,GAC1BW,UAAWlB,IAAMmB,KAAKC,YAbI,sCAgBrB5B,EAAqB,oBAAAE,EAAAC,OAAA,yEAAmCC,MAAM,IACtEC,KAAK,MACLV,KAAI,SAACC,EAAMU,GAAP,MAAkB,CACnBC,GAAG,GAAD,OAAKD,GACPpB,MAAOsB,IAAMC,MAAMC,WAAWC,QAAQ,IAAK,IAC3CC,SAAUC,KAAKC,MAAsB,KAAhBD,KAAKE,UAC1BC,SAAS,YAAD,OAAcV,GACtBW,WAAY,sBACZG,YAAaZ,IAAMa,QAAQC,cAC3BC,WAAW,YAAD,OAAcjB,GACxBuB,MAAOvB,EAAQ,IAAM,EACrBwB,cAAexB,EAAQ,IAAM,EAC7BkB,MAAOX,KAAKC,MAAsB,UAAhBD,KAAKE,UACvBU,SAAUZ,KAAKE,SAAW,GAC1BW,UAAWlB,IAAMmB,KAAKC,YAdI,uC,iCCnBlC,4BAIMG,EAAYC,IAAMC,MAAK,kBAAM,+DAUpBnC,IARf,SAAgBnB,GACZ,OACI,kBAAC,WAAD,CAAUuD,SAAU,kBAAC,IAAD,OAChB,kBAACH,EAAcpD","file":"static/js/21.9a3e4360.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {Avatar, AvatarProps, createStyles, Theme} from \"@material-ui/core\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\n\r\nexport interface CategoryProps {\r\n    avatarSrc: AvatarProps['src'];\r\n    title: string;\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) => createStyles({\r\n    root: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        width: theme.spacing(10),\r\n        height: theme.spacing(10),\r\n        marginBottom: theme.spacing(1)\r\n    }\r\n}));\r\n\r\nfunction Category(props: CategoryProps) {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Avatar\r\n                className={classes.avatar}\r\n                src={props.avatarSrc}\r\n            />\r\n            <Typography>\r\n                {props.title}\r\n            </Typography>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Category;\r\n","import React from \"react\";\r\nimport {createStyles, Theme} from \"@material-ui/core\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport Category, {CategoryProps} from \"../../components/common/Category\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport {generateListVideos} from \"../../services/videosService\";\r\nimport Videos from \"../../components/Videos\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) => createStyles({\r\n    root: {\r\n        maxWidth: theme.breakpoints.width('md'),\r\n        margin: 'auto'\r\n    },\r\n    header: {\r\n        display: 'flex'\r\n    },\r\n    main: {\r\n        padding: theme.spacing(3, 0)\r\n    },\r\n    category: {\r\n        padding: theme.spacing(2)\r\n    }\r\n}));\r\n\r\nfunction TrendingPage() {\r\n    const classes = useStyles();\r\n    const categories: CategoryProps[] = [\r\n        { title: 'Music', avatarSrc: '' },\r\n        { title: 'Gaming', avatarSrc: '' },\r\n        { title: 'News', avatarSrc: '' },\r\n        { title: 'Films', avatarSrc: '' },\r\n    ];\r\n\r\n    const renderCategory = (item: CategoryProps) => (\r\n        <div className={classes.category}>\r\n            <Category {...item} />\r\n        </div>\r\n    );\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <header className={classes.header}>\r\n                {categories.map(renderCategory)}\r\n            </header>\r\n            <Divider />\r\n            <main className={classes.main}>\r\n                <Videos\r\n                    onLoad={generateListVideos}\r\n                />\r\n            </main>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TrendingPage;\r\n","import faker from \"faker/locale/en\";\r\nimport {VideoModel} from \"../models/VideoModel\";\r\n\r\nexport const generateGridVideos = async (): Promise<VideoModel[]> => Array(12)\r\n    .fill(null)\r\n    .map((item, index) => ({\r\n        id: `${index}`,\r\n        title: faker.lorem.sentence().replace('.', ''),\r\n        duration: Math.round(Math.random() * 36000000),\r\n        videoUrl: `/watch?v=${index}`,\r\n        previewUrl: 'https://invalid_url',\r\n        channelAvatarUrl: faker.image.avatar(),\r\n        channelName: faker.company.companyName(),\r\n        channelUrl: `/channel/${index}`,\r\n        views: Math.round(Math.random() * 999999999),\r\n        verified: Math.random() > 0.5,\r\n        createdAt: faker.date.past()\r\n    }));\r\n\r\nexport const generateListVideos = async (): Promise<VideoModel[]> => Array(12)\r\n    .fill(null)\r\n    .map((item, index) => ({\r\n        id: `${index}`,\r\n        title: faker.lorem.sentence().replace('.', ''),\r\n        duration: Math.round(Math.random() * 36000000),\r\n        videoUrl: `/watch?v=${index}`,\r\n        previewUrl: 'https://invalid_url',\r\n        channelName: faker.company.companyName(),\r\n        channelUrl: `/channel/${index}`,\r\n        isNew: index % 2 === 0,\r\n        isRecommended: index % 2 === 1,\r\n        views: Math.round(Math.random() * 999999999),\r\n        verified: Math.random() > 0.5,\r\n        createdAt: faker.date.past()\r\n    }));\r\n","import React, { Suspense } from \"react\";\r\nimport {VideosProps} from \"./Videos\";\r\nimport SuspenseFallback from \"../common/SuspenseFallback\";\r\n\r\nconst Component = React.lazy(() => import('./Videos'));\r\n\r\nfunction Videos(props: VideosProps) {\r\n    return (\r\n        <Suspense fallback={<SuspenseFallback />}>\r\n            <Component {...props} />\r\n        </Suspense>\r\n    )\r\n}\r\n\r\nexport default Videos;\r\n"],"sourceRoot":""}