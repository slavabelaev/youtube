{"version":3,"sources":["components/common/MenuListItem.tsx","../node_modules/@material-ui/core/esm/ListItemSecondaryAction/ListItemSecondaryAction.js","../node_modules/@material-ui/core/esm/ListItemAvatar/ListItemAvatar.js","../node_modules/@material-ui/icons/VisibilityOff.js","components/common/Menu.tsx","components/core/Notifications/NotificationMenu.tsx","components/core/Notifications/Notification.tsx","components/core/Notifications/Notifications.tsx"],"names":["MenuListItem","props","listItemIcon","icon","listItemSecondaryAction","endIcon","size","onClick","dense","button","selected","primary","title","ListItemSecondaryAction","React","forwardRef","ref","classes","className","other","_objectWithoutProperties","createElement","_extends","clsx","root","muiName","withStyles","position","right","top","transform","name","ListItemAvatar","context","useContext","ListContext","alignItems","alignItemsFlexStart","minWidth","flexShrink","marginTop","_interopRequireDefault","require","Object","defineProperty","exports","value","default","_react","_default","Fragment","fill","d","Menu","items","List","map","item","index","key","NotificationMenu","useStyles","makeStyles","theme","createStyles","media","spacing","maxWidth","height","backgroundPosition","backgroundSize","backgroundRepeat","backgroundColor","palette","grey","margin","borderRadius","shape","Notification","ListItem","component","Link","to","linkTo","Avatar","src","avatarSrc","ListItemText","text","secondary","createdAt","toLocaleDateString","imageSrc","style","backgroundImage","PopoverButton","renderContent","Notifications","onLoad","Items","renderItem","id","avatarUrl","imageUrl","WATCH_PAGE_ROUTE"],"mappings":"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","file":"static/js/16.710757de.chunk.js","sourcesContent":["import ListItem, {ListItemProps} from \"@material-ui/core/ListItem\";\nimport React from \"react\";\nimport {ListItemIcon, ListItemIconProps, ListItemSecondaryActionProps, ListItemTextProps} from \"@material-ui/core\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\nimport IconButton from \"@material-ui/core/IconButton\";\n\nexport interface MenuListItemProps {\n    title: ListItemTextProps['primary'];\n    icon?: ListItemIconProps['children'];\n    endIcon?: ListItemSecondaryActionProps['children'];\n    selected?: ListItemProps['selected'];\n    onClick?: () => void;\n}\n\nfunction MenuListItem(props: MenuListItemProps) {\n    const listItemIcon = props.icon ? (\n        <ListItemIcon>\n            {props.icon}\n        </ListItemIcon>\n    ) : null;\n\n    const listItemSecondaryAction = props.endIcon ? (\n        <ListItemSecondaryAction>\n            <IconButton\n                size=\"small\"\n                onClick={props.onClick}\n            >\n                {props.endIcon}\n            </IconButton>\n        </ListItemSecondaryAction>\n    ) : null;\n\n    return (\n        <ListItem\n            dense\n            button\n            selected={props.selected}\n            onClick={props.onClick}\n        >\n            {listItemIcon}\n            <ListItemText\n                primary={props.title}\n            />\n            {listItemSecondaryAction}\n        </ListItem>\n    )\n}\n\nexport default MenuListItem;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    position: 'absolute',\n    right: 16,\n    top: '50%',\n    transform: 'translateY(-50%)'\n  }\n};\n/**\n * Must be used as the last child of ListItem to function properly.\n */\n\nvar ListItemSecondaryAction = React.forwardRef(function ListItemSecondaryAction(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\"]);\n\n  return React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? ListItemSecondaryAction.propTypes = {\n  /**\n   * The content of the component, normally an `IconButton` or selection control.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string\n} : void 0;\nListItemSecondaryAction.muiName = 'ListItemSecondaryAction';\nexport default withStyles(styles, {\n  name: 'MuiListItemSecondaryAction'\n})(ListItemSecondaryAction);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport ListContext from '../List/ListContext';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    minWidth: 56,\n    flexShrink: 0\n  },\n\n  /* Styles applied to the root element when the parent `ListItem` uses `alignItems=\"flex-start\"`. */\n  alignItemsFlexStart: {\n    marginTop: 8\n  }\n};\n/**\n * A simple wrapper to apply `List` styles to an `Avatar`.\n */\n\nvar ListItemAvatar = React.forwardRef(function ListItemAvatar(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\"]);\n\n  var context = React.useContext(ListContext);\n  return React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className, context.alignItems === 'flex-start' && classes.alignItemsFlexStart),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? ListItemAvatar.propTypes = {\n  /**\n   * The content of the component â€“ normally `Avatar`.\n   */\n  children: PropTypes.element.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiListItemAvatar'\n})(ListItemAvatar);","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(_react.default.Fragment, null, _react.default.createElement(\"path\", {\n  fill: \"none\",\n  d: \"m0 0h24v24H0z\"\n}), _react.default.createElement(\"path\", {\n  d: \"M12 7c2.76 0 5 2.24 5 5 0 .65-.13 1.26-.36 1.83l2.92 2.92c1.51-1.26 2.7-2.89 3.43-4.75-1.73-4.39-6-7.5-11-7.5-1.4 0-2.74.25-3.98.7l2.16 2.16C10.74 7.13 11.35 7 12 7zM2 4.27l2.28 2.28.46.46C3.08 8.3 1.78 10.02 1 12c1.73 4.39 6 7.5 11 7.5 1.55 0 3.03-.3 4.38-.84l.42.42L19.73 22 21 20.73 3.27 3 2 4.27zM7.53 9.8l1.55 1.55c-.05.21-.08.43-.08.65 0 1.66 1.34 3 3 3 .22 0 .44-.03.65-.08l1.55 1.55c-.67.33-1.41.53-2.2.53-2.76 0-5-2.24-5-5 0-.79.2-1.53.53-2.2zm4.31-.78l3.15 3.15.02-.16c0-1.66-1.34-3-3-3l-.17.01z\"\n})), 'VisibilityOff');\n\nexports.default = _default;","import React from \"react\";\nimport {List} from \"@material-ui/core\";\nimport MenuListItem, {MenuListItemProps} from \"./MenuListItem\";\n\nexport interface MenuProps {\n    items: MenuListItemProps[];\n}\n\nfunction Menu({ items }: MenuProps) {\n    const renderItem = (item: MenuListItemProps, index: number) => (\n        <MenuListItem\n            {...item}\n            key={index}\n        />\n    );\n\n    return (\n        <List>\n            {items.map(renderItem)}\n        </List>\n    )\n}\n\nexport default Menu;\n","import React from \"react\";\nimport VisibilityOffIcon from \"@material-ui/icons/VisibilityOff\";\nimport Menu from \"../../common/Menu\";\n\nfunction NotificationMenu() {\n\treturn (\n    <Menu\n        items={[\n            { title: 'Hide this notification', icon: <VisibilityOffIcon /> },\n            { title: 'Turn off all from this channel' },\n        ]}\n    />\n)\n}\n\nexport default NotificationMenu;\n","import {AvatarProps, createStyles, Theme} from \"@material-ui/core\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport {Link} from \"react-router-dom\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\nimport React from \"react\";\nimport PopoverButton from \"../../buttons/PopoverButton\";\nimport NotificationMenu from \"./NotificationMenu\";\n\nexport interface NotificationProps {\n    text: string;\n    avatarSrc: AvatarProps['src'];\n    imageSrc?: string;\n    createdAt: Date,\n    linkTo: string;\n}\n\nexport const useStyles = makeStyles((theme: Theme) => createStyles({\n    media: {\n        minWidth: theme.spacing(12),\n        maxWidth: theme.spacing(12),\n        height: theme.spacing(8),\n        backgroundPosition: 'center',\n        backgroundSize: 'cover',\n        backgroundRepeat: 'no-repeat',\n        backgroundColor: theme.palette.grey[\"800\"],\n        margin: theme.spacing(1, 2),\n        borderRadius: theme.shape.borderRadius\n    }\n}));\n\nfunction Notification(props: NotificationProps) {\n    const classes = useStyles();\n\n    return (\n        <ListItem\n            dense\n            button\n            alignItems=\"flex-start\"\n            component={Link}\n            to={props.linkTo}\n        >\n            <ListItemAvatar>\n                <Avatar src={props.avatarSrc} />\n            </ListItemAvatar>\n            <ListItemText\n                primary={props.text}\n                secondary={props.createdAt.toLocaleDateString()}\n            />\n            {props.imageSrc ? (\n                <div\n                    className={classes.media}\n                    style={{\n                        backgroundImage: `url(${props.imageSrc}`\n                    }}\n                />\n            ) : null}\n            <ListItemSecondaryAction>\n                <PopoverButton\n                    renderContent={() => <NotificationMenu />}\n                />\n            </ListItemSecondaryAction>\n        </ListItem>\n    )\n}\n\nexport default Notification;\n","import React from \"react\";\nimport {List} from \"@material-ui/core\";\nimport Items, {ItemsProps} from \"../../common/Items\";\nimport Notification from \"./Notification\";\nimport {NotificationModel} from \"../../../models/NotificationModel\";\nimport {WATCH_PAGE_ROUTE} from \"../../../pages/WatchPage\";\n\nexport interface NotificationsProps {\n    onLoad: ItemsProps['onLoad']\n}\n\nfunction Notifications({ onLoad }: NotificationsProps) {\n    const renderItem = (item: NotificationModel) => (\n        <Notification\n            key={item.id}\n            avatarSrc={item.avatarUrl}\n            imageSrc={item.imageUrl}\n            text={item.text}\n            createdAt={item.createdAt}\n            linkTo={`${WATCH_PAGE_ROUTE}?v=${item.id}`}\n        />\n    );\n\n    return (\n        <List>\n          <Items\n              renderItem={renderItem}\n              onLoad={onLoad}\n          />\n        </List>\n    );\n}\n\nexport default Notifications;\n"],"sourceRoot":""}