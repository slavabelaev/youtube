{"version":3,"sources":["components/common/MenuListItem.tsx","components/triggers/DialogTrigger.tsx","utils/numbers.ts","components/common/SingleChoice/SingleChoiceItem.tsx","components/common/SingleChoice/SingleChoiceList.tsx","components/triggers/SnackbarTrigger.tsx","components/Videos/VideoItem/VideoThumbnail.tsx","components/listItems/AddToQueueListItem.tsx","components/listItems/SaveToWatchLaterListItem.tsx","components/listItems/SaveToPlaylistListItem.tsx","components/listItems/NotInterestedListItem.tsx","components/listItems/NotRecommendListItem.tsx","components/Videos/VideoItem/VideoMenu.tsx","components/Videos/VideoItem/VideoPopoverButton.tsx","components/Videos/VideoItem/VideoItem.tsx","components/Videos/VideoItem/index.tsx","components/Videos/VideosGrid/index.tsx","components/Videos/VideosList/index.tsx","components/Videos/Videos.tsx","components/common/CheckboxListItem.tsx","components/common/MultipleChoice.tsx","components/PlaylistsMultipleChoice.tsx","components/triggers/SaveToPlaylistTrigger.tsx","components/common/SingleChoice/index.tsx","components/listItems/ReportListItem.tsx"],"names":["MenuListItem","props","listItemIcon","icon","listItemSecondaryAction","endIcon","size","onClick","dense","button","selected","primary","title","useStyles","makeStyles","theme","createStyles","content","padding","actions","borderTop","palette","divider","DialogTrigger","maxWidth","renderTrigger","renderActions","classes","useState","open","setOpen","handleToggle","closeButton","edge","dialogAppBar","endAction","dialogContent","className","dialogActions","dialog","onClose","toStringNumber","number","fractionDigits","toFixed","SingleChoiceItem","label","variant","value","checked","Radio","style","opacity","checkedIcon","ListItem","ListItemIcon","ListItemText","SingleChoiceList","onLoad","fromModelToProps","initialValue","onChange","setValue","List","Items","renderLoadMore","renderItem","model","item","SnackbarTrigger","handleClose","snackbar","Snackbar","anchorOrigin","horizontal","vertical","autoHideDuration","message","action","Button","color","trigger","buttonProps","position","right","spacing","backgroundColor","grey","common","white","minWidth","fullSizeProps","left","top","bottom","margin","root","height","borderRadius","shape","overflow","display","link","image","width","playArrowIcon","timeStatus","alignItems","justifyContent","watchLater","SaveToPlaylistTrigger","VideoThumbnail","src","to","durationSeconds","Typography","component","Date","toLocaleTimeString","substring","saveToWatchLaterButton","Tooltip","placement","aria-label","fontSize","saveToPlaylistTrigger","preview","alt","clsx","AddToQueueListItem","SaveToWatchLaterListItem","showSnackbar","SaveToPlaylistListItem","showPlaylists","NotInterestedListItem","NotRecommendListItem","VideoMenu","primaryList","secondaryList","ReportListItem","Divider","VideoPopoverButton","PopoverButton","renderContent","root_variant_vertical","flexDirection","listItem","paddingLeft","paddingTop","paddingBottom","container","listStyle","listItemText","marginTop","marginBottom","primaryText","textDecoration","lineHeight","secondaryText","whiteSpace","textOverflow","checkIcon","marginLeft","verticalAlign","views","labelText","typography","caption","A100","A400","captionText","createdAt","media","flex","media_variant_vertical","minHeight","media_variant_horizontal","marginRight","VideoItem","primaryTextTo","imageSrc","avatarSrc","secondaryTextTo","showCheckIcon","Link","secondary","avatar","ListItemAvatar","Avatar","viewsNode","labelTextNode","captionTextNode","createdAtNode","formatDistance","videoThumbnail","ContainerProps","ListItemSecondaryAction","videoUrl","duration","previewUrl","channelName","channelUrl","channelAvatarUrl","isRecommended","isNew","verified","VideosGrid","Grid","xl","lg","md","sm","xs","key","id","VideosList","disablePadding","toolbarAside","Videos","initialVariant","setVariant","toolbar","Toolbar","disableGutters","IconButton","videos","CheckboxListItem","secondaryAction","CheckboxProps","Boolean","setChecked","toggle","Checkbox","disableRipple","MultipleChoiceList","PlaylistsMultipleChoice","MultipleChoice","generatePlaylists","startIcon","SingleChoice","a","async","reason"],"mappings":"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","file":"static/js/11.7a0c506a.chunk.js","sourcesContent":["import ListItem, {ListItemProps} from \"@material-ui/core/ListItem\";\r\nimport React from \"react\";\r\nimport {ListItemIcon, ListItemIconProps, ListItemSecondaryActionProps, ListItemTextProps} from \"@material-ui/core\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\n\r\nexport interface MenuListItemProps {\r\n    title: ListItemTextProps['primary'];\r\n    icon?: ListItemIconProps['children'];\r\n    endIcon?: ListItemSecondaryActionProps['children'];\r\n    selected?: ListItemProps['selected'];\r\n    onClick?: () => void;\r\n}\r\n\r\nfunction MenuListItem(props: MenuListItemProps) {\r\n    const listItemIcon = props.icon ? (\r\n        <ListItemIcon>\r\n            {props.icon}\r\n        </ListItemIcon>\r\n    ) : null;\r\n\r\n    const listItemSecondaryAction = props.endIcon ? (\r\n        <ListItemSecondaryAction>\r\n            <IconButton\r\n                size=\"small\"\r\n                onClick={props.onClick}\r\n            >\r\n                {props.endIcon}\r\n            </IconButton>\r\n        </ListItemSecondaryAction>\r\n    ) : null;\r\n\r\n    return (\r\n        <ListItem\r\n            dense\r\n            button\r\n            selected={props.selected}\r\n            onClick={props.onClick}\r\n        >\r\n            {listItemIcon}\r\n            <ListItemText\r\n                primary={props.title}\r\n            />\r\n            {listItemSecondaryAction}\r\n        </ListItem>\r\n    )\r\n}\r\n\r\nexport default MenuListItem;\r\n","import React, {ReactElement, ReactNode, useState} from \"react\";\r\nimport {createStyles, Dialog, DialogProps, Theme} from \"@material-ui/core\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport PopoverAppBar, {PopoverAppBarProps} from \"../PopoverAppBar\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\n\r\nexport interface DialogTriggerProps {\r\n    content: DialogProps['children'];\r\n    renderTrigger: (onClick: VoidFunction) => ReactElement;\r\n    renderActions?: (onClose: VoidFunction) => ReactNode;\r\n    title?: PopoverAppBarProps['title'];\r\n    maxWidth?: DialogProps['maxWidth'];\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) => createStyles({\r\n    content: {\r\n        padding: 0\r\n    },\r\n    actions: {\r\n        borderTop: `1px solid ${theme.palette.divider}`\r\n    }\r\n}));\r\n\r\nfunction DialogTrigger({\r\n    title,\r\n    maxWidth,\r\n    renderTrigger,\r\n    content,\r\n    renderActions\r\n}: DialogTriggerProps) {\r\n    const classes = useStyles();\r\n    const [open, setOpen] = useState(false);\r\n    const handleToggle = () => setOpen(!open);\r\n\r\n    const closeButton = (\r\n        <IconButton\r\n            edge=\"end\"\r\n            onClick={handleToggle}\r\n        >\r\n            <CloseIcon />\r\n        </IconButton>\r\n    );\r\n\r\n    const dialogAppBar = title ? (\r\n        <PopoverAppBar\r\n            title={title}\r\n            endAction={closeButton}\r\n        />\r\n    ) : null;\r\n\r\n    const dialogContent = (\r\n        <DialogContent className={classes.content}>\r\n            {content}\r\n        </DialogContent>\r\n    );\r\n\r\n    const dialogActions = renderActions ? (\r\n        <DialogActions className={classes.actions}>\r\n            {renderActions(() => setOpen(false))}\r\n        </DialogActions>\r\n    ) : null;\r\n\r\n    const dialog = (\r\n        <Dialog\r\n            open={open}\r\n            onClose={handleToggle}\r\n            maxWidth={maxWidth}\r\n        >\r\n            {dialogAppBar}\r\n            {dialogContent}\r\n            {dialogActions}\r\n        </Dialog>\r\n    );\r\n\r\n    const button = renderTrigger(handleToggle);\r\n\r\n    return (\r\n        <>\r\n            {button}\r\n            {dialog}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default DialogTrigger;\r\n","export function toStringNumber(number: number, fractionDigits = 1) {\r\n    return (\r\n        (number >= 1000000000) ? `${(number / 1000000000).toFixed(fractionDigits)}B` :\r\n        (number >= 1000000) ? `${(number / 1000000).toFixed(fractionDigits)}M` :\r\n        (number >= 1000) ? `${(number / 1000).toFixed(fractionDigits)}K` :\r\n        number\r\n    );\r\n}\r\n","import ListItemText from \"@material-ui/core/ListItemText\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport CheckIcon from \"@material-ui/icons/Check\";\r\nimport React from \"react\";\r\nimport {Radio} from \"@material-ui/core\";\r\n\r\nexport interface SingleChoiceItemBaseProps {\r\n    label: string;\r\n    value: string;\r\n}\r\n\r\nexport interface SingleChoiceItemProps extends SingleChoiceItemBaseProps {\r\n    variant?: 'check' | 'radio';\r\n    checked?: boolean;\r\n    onClick?: () => void;\r\n}\r\n\r\nfunction SingleChoiceItem({\r\n    label,\r\n    value,\r\n    variant ,\r\n    checked,\r\n    onClick\r\n}: SingleChoiceItemProps) {\r\n    const icon = variant === 'check' ? (\r\n        <Radio\r\n            size=\"small\"\r\n            checked={checked}\r\n            icon={<CheckIcon style={{opacity: 0}} />}\r\n            checkedIcon={<CheckIcon />}\r\n        />\r\n    ) : (\r\n        <Radio\r\n            checked={checked}\r\n        />\r\n    );\r\n\r\n    return (\r\n        <ListItem\r\n            dense\r\n            button\r\n            onClick={onClick}\r\n        >\r\n            <ListItemIcon>\r\n                {icon}\r\n            </ListItemIcon>\r\n            <ListItemText\r\n                primary={label}\r\n            />\r\n        </ListItem>\r\n    )\r\n}\r\n\r\nexport default SingleChoiceItem;\r\n","import React, {useState} from \"react\";\r\nimport {List} from \"@material-ui/core\";\r\nimport Items, {ItemsProps} from \"../Items\";\r\nimport SingleChoiceItem, {SingleChoiceItemBaseProps, SingleChoiceItemProps} from \"./SingleChoiceItem\";\r\n\r\nexport interface SingleChoiceListProps<T = any> {\r\n    onLoad: ItemsProps['onLoad'];\r\n    fromModelToProps: (model: any) => SingleChoiceItemBaseProps;\r\n    variant?: SingleChoiceItemProps['variant'];\r\n    initialValue?: SingleChoiceItemProps['value'];\r\n    onChange?: (item: SingleChoiceItemBaseProps) => void;\r\n}\r\n\r\nfunction SingleChoiceList({\r\n    variant,\r\n    onLoad,\r\n    fromModelToProps,\r\n    initialValue = '',\r\n    onChange\r\n}: SingleChoiceListProps) {\r\n    const [value, setValue] = useState(initialValue);\r\n\r\n    const renderItem = (model: any) => {\r\n        const item = fromModelToProps(model);\r\n        return (\r\n            <SingleChoiceItem\r\n                {...item}\r\n                variant={variant}\r\n                checked={value === item.value}\r\n                onClick={() => {\r\n                    setValue(item.value);\r\n                    if (onChange) onChange(item);\r\n                }}\r\n            />\r\n        )\r\n    };\r\n\r\n    return (\r\n        <List>\r\n            <Items\r\n                renderLoadMore={null}\r\n                renderItem={renderItem}\r\n                onLoad={onLoad}\r\n            />\r\n        </List>\r\n    );\r\n}\r\n\r\nexport default SingleChoiceList;\r\n","import React, {ReactElement, useState} from \"react\";\r\nimport {Snackbar, SnackbarProps} from \"@material-ui/core\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nexport interface SnackbarTriggerProps {\r\n    message: SnackbarProps['message'];\r\n    renderTrigger: (onClick: VoidFunction) => ReactElement;\r\n}\r\n\r\nfunction SnackbarTrigger(props: SnackbarTriggerProps) {\r\n    const [open, setOpen] = useState(false);\r\n    const handleOpen = () => setOpen(true);\r\n    const handleClose = () => setOpen(false);\r\n\r\n    const snackbar = (\r\n        <Snackbar\r\n            anchorOrigin={{\r\n                horizontal: 'left',\r\n                vertical: 'bottom'\r\n            }}\r\n            open={open}\r\n            autoHideDuration={5000}\r\n            message={props.message}\r\n            onClose={handleClose}\r\n            action={\r\n                <Button\r\n                    color=\"secondary\"\r\n                    size=\"small\"\r\n                    onClick={handleClose}\r\n                >\r\n                    UNDO\r\n                </Button>\r\n            }\r\n        />\r\n    );\r\n\r\n    const trigger = props.renderTrigger(handleOpen);\r\n\r\n    return (\r\n        <>\r\n            {trigger}\r\n            {snackbar}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SnackbarTrigger;\r\n","import React from \"react\";\r\nimport {createStyles, makeStyles, Theme} from \"@material-ui/core/styles\";\r\nimport PlayArrowIcon from \"@material-ui/icons/PlayArrow\";\r\nimport clsx from \"clsx\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport WatchLaterIcon from \"@material-ui/icons/WatchLater\";\r\nimport PlaylistPlayIcon from \"@material-ui/icons/PlaylistPlay\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {CreateCSSProperties} from \"@material-ui/styles/withStyles\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport {Link} from \"react-router-dom\";\r\nimport SaveToPlaylistTrigger from \"../../triggers/SaveToPlaylistTrigger\";\r\nimport SnackbarTrigger from \"../../triggers/SnackbarTrigger\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) => {\r\n    const buttonProps: CreateCSSProperties = {\r\n        position: 'absolute',\r\n        right: theme.spacing(1),\r\n        backgroundColor: theme.palette.grey[\"900\"],\r\n        color: theme.palette.common.white,\r\n        minWidth: 'auto',\r\n    };\r\n\r\n    const fullSizeProps: CreateCSSProperties = {\r\n        position: 'absolute',\r\n        left: 0,\r\n        right: 0,\r\n        top: 0,\r\n        bottom: 0,\r\n        margin: 'auto'\r\n    };\r\n\r\n    return createStyles({\r\n        root: {\r\n            position: 'relative',\r\n            height: 104,\r\n            borderRadius: theme.shape.borderRadius,\r\n            overflow: 'hidden',\r\n            backgroundColor: theme.palette.grey[\"800\"],\r\n            color: theme.palette.common.white,\r\n            '&:not(:hover) [aria-label=\"button\"]': {\r\n                display: 'none'\r\n            }\r\n        },\r\n        link: {\r\n            ...fullSizeProps\r\n        },\r\n        image: {\r\n            ...fullSizeProps,\r\n            width: '100%',\r\n        },\r\n        playArrowIcon: {\r\n            color: theme.palette.common.white,\r\n            ...fullSizeProps,\r\n        },\r\n        timeStatus: {\r\n            display: 'inline-flex',\r\n            alignItems: 'center',\r\n            justifyContent: 'center',\r\n            position: 'absolute',\r\n            padding: theme.spacing(.125, .5),\r\n            bottom: theme.spacing(1),\r\n            right: theme.spacing(1),\r\n            borderRadius: theme.shape.borderRadius,\r\n            backgroundColor: theme.palette.grey[\"900\"],\r\n            color: theme.palette.common.white\r\n        },\r\n        watchLater: {\r\n            ...buttonProps,\r\n            top: theme.spacing(1),\r\n        },\r\n        SaveToPlaylistTrigger: {\r\n            ...buttonProps,\r\n            top: theme.spacing(5.25),\r\n        }\r\n    });\r\n});\r\n\r\nexport interface VideoThumbnailProps {\r\n    src: string;\r\n    to: string;\r\n    durationSeconds: number;\r\n    className?: string;\r\n    [key: string]: any;\r\n}\r\n\r\nfunction VideoThumbnail({\r\n    src,\r\n    to,\r\n    durationSeconds,\r\n    className,\r\n    style,\r\n    ...otherProps\r\n}: VideoThumbnailProps) {\r\n    const classes = useStyles();\r\n\r\n    const timeStatus = (\r\n        <Typography\r\n            className={classes.timeStatus}\r\n            variant=\"caption\"\r\n            component=\"span\"\r\n        >\r\n            {new Date(durationSeconds).toLocaleTimeString().substring(3)}\r\n        </Typography>\r\n    );\r\n\r\n    const saveToWatchLaterButton = (\r\n        <SnackbarTrigger\r\n            message={'Saved to \"Watch later\"'}\r\n            renderTrigger={onClick => (\r\n                <Tooltip\r\n                    title=\"Watch later\"\r\n                    placement=\"left\"\r\n                >\r\n                    <Button\r\n                        className={classes.watchLater}\r\n                        size=\"small\"\r\n                        aria-label=\"button\"\r\n                        onClick={onClick}\r\n                    >\r\n                        <WatchLaterIcon\r\n                            fontSize=\"small\"\r\n                        />\r\n                    </Button>\r\n                </Tooltip>\r\n            )}\r\n        />\r\n    );\r\n\r\n    const saveToPlaylistTrigger = (\r\n        <SaveToPlaylistTrigger\r\n            renderTrigger={onClick => (\r\n                <Tooltip\r\n                    title=\"Save to playlist\"\r\n                    placement=\"left\"\r\n                    aria-label=\"button\"\r\n                >\r\n                    <Button\r\n                        className={classes.SaveToPlaylistTrigger}\r\n                        size=\"small\"\r\n                        onClick={onClick}\r\n                    >\r\n                        <PlaylistPlayIcon\r\n                            fontSize=\"small\"\r\n                        />\r\n                    </Button>\r\n                </Tooltip>\r\n            )}\r\n        />\r\n    );\r\n\r\n    const preview = (\r\n        <Link\r\n            className={classes.link}\r\n            to={to}\r\n        >\r\n            <img\r\n                className={classes.image}\r\n                src={src}\r\n                alt=\"\"\r\n            />\r\n            <PlayArrowIcon\r\n                fontSize=\"large\"\r\n                aria-label=\"button\"\r\n                className={classes.playArrowIcon}\r\n            />\r\n        </Link>\r\n    );\r\n\r\n    return (\r\n        <div className={clsx(classes.root, className)}>\r\n            {preview}\r\n            {saveToWatchLaterButton}\r\n            {saveToPlaylistTrigger}\r\n            {timeStatus}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default VideoThumbnail;\r\n","import React from \"react\";\r\nimport MenuListItem, {MenuListItemProps} from \"../common/MenuListItem\";\r\nimport PlaylistPlayIcon from \"@material-ui/icons/PlaylistPlay\";\r\n\r\nexport interface AddToQueueListItemProps {\r\n    onClick?: MenuListItemProps['onClick'];\r\n}\r\n\r\nfunction AddToQueueListItem(props: AddToQueueListItemProps) {\r\n    return (\r\n        <MenuListItem\r\n            title=\"Add to queue\"\r\n            icon={<PlaylistPlayIcon />}\r\n            onClick={props.onClick}\r\n        />\r\n    )\r\n}\r\n\r\nexport default AddToQueueListItem;\r\n","import React from \"react\";\r\nimport MenuListItem, {MenuListItemProps} from \"../common/MenuListItem\";\r\nimport WatchLaterIcon from \"@material-ui/icons/WatchLater\";\r\nimport SnackbarTrigger, {SnackbarTriggerProps} from \"../triggers/SnackbarTrigger\";\r\n\r\nexport interface SaveToWatchLaterListItemProps {\r\n    onClick?: MenuListItemProps['onClick'];\r\n}\r\n\r\nfunction SaveToWatchLaterListItem({ onClick }: SaveToWatchLaterListItemProps) {\r\n    const renderTrigger: SnackbarTriggerProps['renderTrigger'] = showSnackbar => (\r\n        <MenuListItem\r\n            title={'Save to \"Watch later\"'}\r\n            icon={<WatchLaterIcon />}\r\n            onClick={() => {\r\n                if (onClick) onClick();\r\n                showSnackbar();\r\n            }}\r\n        />\r\n    );\r\n\r\n    return (\r\n        <SnackbarTrigger\r\n            message={'Saved to \"Watch later\"'}\r\n            renderTrigger={renderTrigger}\r\n        />\r\n    )\r\n}\r\n\r\nexport default SaveToWatchLaterListItem;\r\n","import React from \"react\";\r\nimport MenuListItem, {MenuListItemProps} from \"../common/MenuListItem\";\r\nimport PlaylistAddIcon from \"@material-ui/icons/PlaylistAdd\";\r\nimport SaveToPlaylistTrigger, {SaveToPlaylistTriggerProps} from \"../triggers/SaveToPlaylistTrigger\";\r\n\r\nexport interface SaveToPlaylistListItemProps {\r\n    onClick?: MenuListItemProps['onClick'];\r\n}\r\n\r\nfunction SaveToPlaylistListItem({ onClick }: SaveToPlaylistListItemProps) {\r\n    const renderTrigger: SaveToPlaylistTriggerProps['renderTrigger'] = (showPlaylists) => (\r\n        <MenuListItem\r\n            title={'Save to playlist'}\r\n            icon={<PlaylistAddIcon />}\r\n            onClick={() => {\r\n                showPlaylists();\r\n                if (onClick) onClick();\r\n            }}\r\n        />\r\n    );\r\n\r\n    return (\r\n        <SaveToPlaylistTrigger\r\n            renderTrigger={renderTrigger}\r\n        />\r\n    )\r\n}\r\n\r\nexport default SaveToPlaylistListItem;\r\n","import React from \"react\";\r\nimport MenuListItem from \"../common/MenuListItem\";\r\nimport NotInterestedIcon from \"@material-ui/icons/NotInterested\";\r\n\r\nfunction NotInterestedListItem() {\r\n    return (\r\n        <MenuListItem\r\n            title=\"Not interested\"\r\n            icon={<NotInterestedIcon />}\r\n        />\r\n    )\r\n}\r\n\r\nexport default NotInterestedListItem;\r\n","import React from \"react\";\r\nimport MenuListItem from \"../common/MenuListItem\";\r\nimport RemoveCircleOutlineIcon from \"@material-ui/icons/RemoveCircleOutline\";\r\n\r\nfunction NotRecommendListItem() {\r\n    return (\r\n        <MenuListItem\r\n            title=\"Don't recommend channel\"\r\n            icon={<RemoveCircleOutlineIcon />}\r\n        />\r\n    )\r\n}\r\n\r\nexport default NotRecommendListItem;\r\n","import React from \"react\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport List from \"@material-ui/core/List\";\r\nimport AddToQueueListItem from \"../../listItems/AddToQueueListItem\";\r\nimport SaveToWatchLaterListItem from \"../../listItems/SaveToWatchLaterListItem\";\r\nimport SaveToPlaylistListItem from \"../../listItems/SaveToPlaylistListItem\";\r\nimport NotInterestedListItem from \"../../listItems/NotInterestedListItem\";\r\nimport NotRecommendListItem from \"../../listItems/NotRecommendListItem\";\r\nimport ReportListItem from \"../../listItems/ReportListItem\";\r\n\r\nfunction VideoMenu() {\r\n    const primaryList = (\r\n        <List>\r\n            <AddToQueueListItem/>\r\n            <SaveToWatchLaterListItem/>\r\n            <SaveToPlaylistListItem/>\r\n        </List>\r\n    );\r\n\r\n    const secondaryList = (\r\n        <List>\r\n            <NotInterestedListItem/>\r\n            <NotRecommendListItem/>\r\n            <ReportListItem/>\r\n        </List>\r\n    );\r\n\r\n    return (\r\n        <div>\r\n            {primaryList}\r\n            <Divider />\r\n            {secondaryList}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default VideoMenu;\r\n","import React from \"react\";\r\nimport VideoMenu from \"./VideoMenu\";\r\nimport PopoverButton from \"../../buttons/PopoverButton\";\r\n\r\nfunction VideoPopoverButton() {\r\n    return (\r\n        <PopoverButton\r\n            edge=\"end\"\r\n            renderContent={() => <VideoMenu />}\r\n        />\r\n    )\r\n}\r\n\r\nexport default VideoPopoverButton;\r\n","import React, {ReactNode} from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport clsx from \"clsx\";\r\nimport {formatDistance} from \"date-fns\";\r\nimport {createStyles, makeStyles, Theme} from \"@material-ui/core/styles\";\r\nimport {AvatarProps, ListItem} from \"@material-ui/core\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\r\nimport CheckCircleIcon from \"@material-ui/icons/CheckCircle\";\r\nimport VideoThumbnail, {VideoThumbnailProps} from \"./VideoThumbnail\";\r\nimport {toStringNumber} from \"../../../utils/numbers\";\r\nimport VideoPopoverButton from \"./VideoPopoverButton\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\n\r\nexport interface VideoItemBaseProps {\r\n    variant?: 'horizontal' | 'vertical',\r\n    className?: string;\r\n}\r\n\r\nexport interface VideoItemProps extends VideoItemBaseProps {\r\n    primaryText: ReactNode;\r\n    primaryTextTo: string;\r\n    durationSeconds: VideoThumbnailProps['durationSeconds'];\r\n    imageSrc: string;\r\n    secondaryText: ReactNode;\r\n    secondaryTextTo: string;\r\n    avatarSrc?: AvatarProps['src'];\r\n    views?: number;\r\n    captionText?: ReactNode;\r\n    labelText?: ReactNode;\r\n    showCheckIcon?: boolean;\r\n    createdAt?: Date;\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) => createStyles({\r\n    root: {\r\n        display: 'flex',\r\n        alignItems: 'center'\r\n    },\r\n    root_variant_vertical: {\r\n        flexDirection: 'column',\r\n        alignItems: 'initial'\r\n    },\r\n    listItem: {\r\n        alignItems: 'flex-start',\r\n        paddingLeft: 0,\r\n        paddingTop: 0,\r\n        paddingBottom: 0\r\n    },\r\n    container: {\r\n        listStyle: 'none',\r\n        display: 'block',\r\n        width: '100%',\r\n        overflow: 'hidden'\r\n    },\r\n    listItemText: {\r\n        marginTop: 0,\r\n        marginBottom: 0\r\n    },\r\n    primaryText: {\r\n        display: '-webkit-box',\r\n        '-webkit-box-orient': 'vertical',\r\n        '-webkit-line-clamp': 2,\r\n        overflow: 'hidden',\r\n        textDecoration: 'none',\r\n        lineHeight: 1.25,\r\n        marginBottom: theme.spacing(.5)\r\n    },\r\n    secondaryText: {\r\n        display: 'block',\r\n        alignItems: 'center',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n        overflow: 'hidden',\r\n        textDecoration: 'none'\r\n    },\r\n    checkIcon: {\r\n        marginLeft: theme.spacing(.5),\r\n        verticalAlign: 'middle'\r\n    },\r\n    views: {\r\n        display: 'block',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n        overflow: 'hidden'\r\n    },\r\n    labelText: {\r\n        ...theme.typography.caption,\r\n        backgroundColor: theme.palette.grey.A100,\r\n        color: theme.palette.grey.A400,\r\n        padding: theme.spacing(.125, .5),\r\n        borderRadius: theme.shape.borderRadius\r\n    },\r\n    captionText: {\r\n        display: 'block',\r\n        ...theme.typography.caption,\r\n    },\r\n    createdAt: {\r\n        display: 'block'\r\n    },\r\n    media: {\r\n        flex: 1,\r\n        minWidth: theme.spacing(20),\r\n        maxWidth: theme.spacing(20),\r\n        height: theme.spacing(13),\r\n    },\r\n    media_variant_vertical: {\r\n        minWidth: 'initial',\r\n        maxWidth: 'initial',\r\n        minHeight: theme.spacing(20),\r\n        marginBottom: theme.spacing(2)\r\n    },\r\n    media_variant_horizontal: {\r\n        marginRight: theme.spacing(2),\r\n    }\r\n}));\r\n\r\nfunction VideoItem({\r\n    variant = 'horizontal',\r\n    primaryText,\r\n    durationSeconds,\r\n    primaryTextTo,\r\n    imageSrc,\r\n    secondaryText,\r\n    avatarSrc,\r\n    secondaryTextTo,\r\n    views,\r\n    labelText,\r\n    captionText,\r\n    createdAt,\r\n    showCheckIcon,\r\n    className,\r\n}: VideoItemProps) {\r\n    const classes = useStyles();\r\n\r\n    const primary = primaryText ? (\r\n        <Typography\r\n            className={classes.primaryText}\r\n            variant=\"body1\"\r\n            color=\"inherit\"\r\n            component={Link}\r\n            to={primaryTextTo}\r\n        >\r\n            {primaryText}\r\n        </Typography>\r\n    ) : null;\r\n\r\n    const checkIcon = showCheckIcon ? (\r\n        <Tooltip\r\n            title=\"Verified\"\r\n        >\r\n            <CheckCircleIcon\r\n                className={classes.checkIcon}\r\n                fontSize=\"inherit\"\r\n            />\r\n        </Tooltip>\r\n    ) : null;\r\n\r\n    const secondary = secondaryText ? (\r\n        <Typography\r\n            className={classes.secondaryText}\r\n            variant=\"inherit\"\r\n            color=\"inherit\"\r\n            component={Link}\r\n            to={secondaryTextTo}\r\n        >\r\n            {secondaryText}\r\n            {checkIcon}\r\n        </Typography>\r\n    ) : null;\r\n\r\n    const avatar = variant === 'vertical' && avatarSrc ? (\r\n        <ListItemAvatar>\r\n            <Avatar\r\n                src={avatarSrc || ''}\r\n                component={Link}\r\n                to={secondaryTextTo}\r\n            />\r\n        </ListItemAvatar>\r\n    ) : null;\r\n\r\n    const viewsNode = views ? (\r\n        <span className={classes.views}>\r\n            {toStringNumber(views)} views\r\n        </span>\r\n    ) : null;\r\n\r\n    const labelTextNode = labelText ?(\r\n        <span className={classes.labelText}>\r\n            {labelText}\r\n        </span>\r\n    ) : null;\r\n\r\n    const captionTextNode = captionText ? (\r\n        <span className={classes.captionText}>\r\n            {captionText}\r\n        </span>\r\n    ) : null;\r\n\r\n    const createdAtNode = variant === 'vertical' && createdAt ? (\r\n        <span className={classes.createdAt}>\r\n            {formatDistance(new Date(), createdAt)}\r\n        </span>\r\n    ) : null;\r\n\r\n    const videoThumbnail = imageSrc ? (\r\n        <VideoThumbnail\r\n            className={clsx(\r\n                classes.media, {\r\n                [classes.media_variant_vertical]: variant === 'vertical',\r\n                [classes.media_variant_horizontal]: variant === 'horizontal'\r\n            })}\r\n            src={imageSrc}\r\n            to={primaryTextTo}\r\n            durationSeconds={durationSeconds}\r\n        />\r\n    ) : null;\r\n\r\n    const listItemText = (\r\n        <ListItemText\r\n            className={classes.listItemText}\r\n            primary={primary}\r\n            secondary={\r\n                <>\r\n                    {secondary}\r\n                    {viewsNode}\r\n                    {labelTextNode}\r\n                    {captionTextNode}\r\n                    {createdAtNode}\r\n                </>\r\n            }\r\n        />\r\n    );\r\n\r\n    return (\r\n        <div\r\n            className={clsx(\r\n                className,\r\n                classes.root, {\r\n                [classes.root_variant_vertical]: variant === 'vertical'\r\n            })}\r\n        >\r\n            {videoThumbnail}\r\n            <ListItem\r\n                className={classes.listItem}\r\n                ContainerProps={{\r\n                    className: classes.container\r\n                }}\r\n            >\r\n                {avatar}\r\n                {listItemText}\r\n                <ListItemSecondaryAction>\r\n                    <VideoPopoverButton\r\n                    />\r\n                </ListItemSecondaryAction>\r\n            </ListItem>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default VideoItem;\r\n","import React from \"react\";\r\nimport Component, {VideoItemBaseProps} from \"./VideoItem\";\r\nimport {VideoModel} from \"../../../models/VideoModel\";\r\n\r\nexport interface VideoItemProps extends VideoItemBaseProps, VideoModel {}\r\n\r\nfunction VideoItem(props: VideoItemProps) {\r\n    return (\r\n        <Component\r\n            {...props}\r\n            primaryText={props.title}\r\n            primaryTextTo={props.videoUrl}\r\n            durationSeconds={props.duration}\r\n            imageSrc={props.previewUrl}\r\n            secondaryText={props.channelName}\r\n            secondaryTextTo={props.channelUrl}\r\n            avatarSrc={props.channelAvatarUrl}\r\n            views={props.views}\r\n            captionText={props.isRecommended ? 'Recommended for you' : null}\r\n            labelText={props.isNew ? 'New' : null}\r\n            showCheckIcon={props.verified}\r\n            createdAt={props.createdAt}\r\n        />\r\n    )\r\n}\r\n\r\nexport default VideoItem;\r\n","import React from \"react\";\r\nimport {makeStyles, createStyles, Grid, Theme} from \"@material-ui/core\";\r\nimport VideoItem, {VideoItemProps} from \"../VideoItem\";\r\nimport Items, {ItemsProps} from \"../../common/Items\";\r\n\r\nexport interface VideosGridProps {\r\n    onLoad: ItemsProps['onLoad'];\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) => createStyles({\r\n    root: {\r\n        width: '100%',\r\n        margin: 0\r\n    }\r\n}));\r\n\r\nfunction VideosGrid({ onLoad }: VideosGridProps) {\r\n    const classes = useStyles();\r\n\r\n    const renderItem = (item: VideoItemProps) => (\r\n        <Grid item xl={2} lg={3} md={4} sm={6} xs={12} key={item.id}>\r\n            <VideoItem\r\n                {...item}\r\n                variant=\"vertical\"\r\n            />\r\n        </Grid>\r\n    );\r\n\r\n    return (\r\n        <Grid\r\n            className={classes.root}\r\n            container\r\n            spacing={2}\r\n        >\r\n            <Items\r\n                renderItem={renderItem}\r\n                onLoad={onLoad}\r\n            />\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default VideosGrid;\r\n","import React from \"react\";\r\nimport List from \"@material-ui/core/List\";\r\nimport VideoItem, {VideoItemProps} from \"../VideoItem\";\r\nimport {createStyles, makeStyles, Theme} from \"@material-ui/core/styles\";\r\nimport Items, {ItemsProps} from \"../../common/Items\";\r\n\r\nexport interface RecommendationsListProps {\r\n    onLoad: ItemsProps<VideoItemProps>['onLoad'];\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) => createStyles({\r\n    item: {\r\n        marginBottom: theme.spacing(2),\r\n        '&:last-child': {\r\n            marginBottom: 0\r\n        }\r\n    }\r\n}));\r\n\r\nfunction VideosList({ onLoad }: RecommendationsListProps) {\r\n    const classes = useStyles();\r\n\r\n    const renderItem = (item: VideoItemProps) => (\r\n        <VideoItem\r\n            key={item.id}\r\n            className={classes.item}\r\n            {...item}\r\n        />\r\n    );\r\n\r\n    return (\r\n        <List\r\n            component=\"div\"\r\n            disablePadding\r\n        >\r\n            <Items\r\n                renderItem={renderItem}\r\n                onLoad={onLoad}\r\n            />\r\n        </List>\r\n    );\r\n}\r\n\r\nexport default VideosList;\r\n","import React, {useState} from \"react\";\r\nimport VideosGrid from \"./VideosGrid\";\r\nimport {ItemsProps} from \"../common/Items\";\r\nimport VideosList from \"./VideosList\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport {createStyles, Theme, Typography} from \"@material-ui/core\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport ViewModuleIcon from \"@material-ui/icons/ViewModule\";\r\nimport ViewListIcon from \"@material-ui/icons/ViewList\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\n\r\nexport interface VideosProps {\r\n    initialVariant?: 'grid' | 'list';\r\n    onLoad: ItemsProps['onLoad'];\r\n    title?: string;\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) => createStyles({\r\n    toolbarAside: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        marginLeft: 'auto'\r\n    }\r\n}));\r\n\r\nfunction Videos({\r\n    initialVariant = 'list',\r\n    onLoad,\r\n    title\r\n}: VideosProps) {\r\n    const classes = useStyles();\r\n    const [variant, setVariant] = useState(initialVariant);\r\n\r\n    const toolbar = title ? (\r\n        <Toolbar disableGutters>\r\n            <Typography\r\n                variant=\"h6\"\r\n            >\r\n                {title}\r\n            </Typography>\r\n            <aside className={classes.toolbarAside}>\r\n                <Tooltip title=\"Grid\">\r\n                    <IconButton\r\n                        color={variant === 'grid' ? 'secondary' : 'default'}\r\n                        onClick={() => setVariant('grid')}\r\n                    >\r\n                        <ViewModuleIcon />\r\n                    </IconButton>\r\n                </Tooltip>\r\n                <Tooltip title=\"List\">\r\n                    <IconButton\r\n                        edge=\"end\"\r\n                        color={variant === 'list' ? 'secondary' : 'default'}\r\n                        onClick={() => setVariant('list')}\r\n                    >\r\n                        <ViewListIcon />\r\n                    </IconButton>\r\n                </Tooltip>\r\n            </aside>\r\n        </Toolbar>\r\n    ) : null;\r\n\r\n    const videos = (variant === 'grid') ? (\r\n        <VideosGrid onLoad={onLoad} />\r\n    ) : (\r\n        <VideosList onLoad={onLoad} />\r\n    );\r\n\r\n    return (\r\n        <>\r\n            {toolbar}\r\n            {videos}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Videos;\r\n","import React, {useState} from \"react\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport Checkbox, {CheckboxProps} from \"@material-ui/core/Checkbox\";\r\nimport ListItemText, {ListItemTextProps} from \"@material-ui/core/ListItemText\";\r\nimport ListItemSecondaryAction, {ListItemSecondaryActionProps} from \"@material-ui/core/ListItemSecondaryAction\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\n\r\ninterface CheckboxListItemBaseProps {\r\n    primary: ListItemTextProps['primary'];\r\n    secondary?: ListItemTextProps['secondary'];\r\n    secondaryAction?: ListItemSecondaryActionProps['children'];\r\n    onChange?: (checked: boolean) => void;\r\n}\r\n\r\nexport type CheckboxListItemProps = CheckboxProps & CheckboxListItemBaseProps;\r\n\r\nfunction CheckboxListItem({\r\n    primary,\r\n    secondary,\r\n    secondaryAction,\r\n    onChange,\r\n    ...CheckboxProps\r\n}: CheckboxListItemProps) {\r\n    const [checked, setChecked] = useState(Boolean(CheckboxProps.checked));\r\n    const toggle = () => onChange ? onChange(checked) : setChecked(!checked);\r\n\r\n    const listItemSecondaryAction = secondaryAction ? (\r\n        <ListItemSecondaryAction>\r\n            {secondaryAction}\r\n        </ListItemSecondaryAction>\r\n    ) : null;\r\n\r\n    return (\r\n        <ListItem\r\n            dense\r\n            button\r\n            onClick={toggle}\r\n        >\r\n            <ListItemIcon>\r\n                <Checkbox\r\n                    {...CheckboxProps}\r\n                    checked={checked}\r\n                    onChange={toggle}\r\n                    edge=\"start\"\r\n                    disableRipple\r\n                />\r\n            </ListItemIcon>\r\n            <ListItemText\r\n                primary={primary}\r\n                secondary={secondary}\r\n            />\r\n            {listItemSecondaryAction}\r\n        </ListItem>\r\n    )\r\n}\r\n\r\nexport default CheckboxListItem;\r\n","import CheckboxListItem from \"./CheckboxListItem\";\r\nimport LockIcon from \"@material-ui/icons/Lock\";\r\nimport List from \"@material-ui/core/List\";\r\nimport Items, {ItemsProps} from \"./Items\";\r\nimport React from \"react\";\r\n\r\nexport interface MultiChoiceListItemProps {\r\n    label: string;\r\n    value: string;\r\n}\r\n\r\nexport interface MultipleChoiceListProps {\r\n    onLoad: ItemsProps['onLoad'];\r\n    fromModelToProps: (item: any) => MultiChoiceListItemProps\r\n}\r\n\r\nfunction MultipleChoiceList({\r\n    onLoad,\r\n    fromModelToProps\r\n}: MultipleChoiceListProps) {\r\n    const renderItem = (model: any) => {\r\n        const item: MultiChoiceListItemProps = fromModelToProps(model);\r\n        return (\r\n            <CheckboxListItem\r\n                key={item.value}\r\n                primary={item.label}\r\n                secondaryAction={\r\n                    <LockIcon color=\"action\" />\r\n                }\r\n            />\r\n        )\r\n    };\r\n\r\n    return (\r\n        <List disablePadding>\r\n            <Items\r\n                onLoad={onLoad}\r\n                renderItem={renderItem}\r\n            />\r\n        </List>\r\n    )\r\n}\r\n\r\nexport default MultipleChoiceList;\r\n","import MultipleChoiceList from \"./common/MultipleChoice\";\r\nimport {generatePlaylists} from \"../services/playlistsService\";\r\nimport {PlaylistModel} from \"../models/PlaylistModel\";\r\nimport React from \"react\";\r\n\r\nfunction PlaylistsMultipleChoice() {\r\n    return (\r\n        <MultipleChoiceList\r\n            onLoad={generatePlaylists}\r\n            fromModelToProps={(item: PlaylistModel) => ({\r\n                label: item.title,\r\n                value: item.id\r\n            })}\r\n        />\r\n    )\r\n}\r\n\r\nexport default PlaylistsMultipleChoice;\r\n","import React from \"react\";\r\nimport PlaylistAddIcon from \"@material-ui/icons/PlaylistAdd\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport PlaylistsMultipleChoice from \"../PlaylistsMultipleChoice\";\r\nimport DialogTrigger, {DialogTriggerProps} from \"./DialogTrigger\";\r\n\r\nexport interface SaveToPlaylistTriggerProps {\r\n    renderTrigger?: DialogTriggerProps['renderTrigger'];\r\n}\r\n\r\nfunction SaveToPlaylistTrigger(props: SaveToPlaylistTriggerProps) {\r\n    const renderTrigger = props.renderTrigger || (\r\n        onClick => (\r\n            <Button\r\n                variant=\"text\"\r\n                startIcon={<PlaylistAddIcon />}\r\n                onClick={onClick}\r\n            >\r\n                Save\r\n            </Button>\r\n        )\r\n    );\r\n\r\n    return (\r\n        <DialogTrigger\r\n            title=\"Save to...\"\r\n            maxWidth=\"xs\"\r\n            content={<PlaylistsMultipleChoice />}\r\n            renderTrigger={renderTrigger}\r\n            renderActions={() => (\r\n                <Button\r\n                    startIcon={<AddIcon />}\r\n                >\r\n                    Create new playlist\r\n                </Button>\r\n            )}\r\n        />\r\n    )\r\n}\r\n\r\nexport default SaveToPlaylistTrigger;\r\n","import SingleChoiceList from \"./SingleChoiceList\";\r\n\r\nexport default SingleChoiceList;\r\n","import React from \"react\";\r\nimport MenuListItem from \"../common/MenuListItem\";\r\nimport FlagIcon from \"@material-ui/icons/Flag\";\r\nimport DialogTrigger, {DialogTriggerProps} from \"../triggers/DialogTrigger\";\r\nimport SingleChoiceList from \"../common/SingleChoice\";\r\nimport {Button} from \"@material-ui/core\";\r\n\r\nfunction ReportListItem() {\r\n    const title = 'Report';\r\n    const renderTrigger: DialogTriggerProps['renderTrigger'] = (onClick) => (\r\n        <MenuListItem\r\n            title={title}\r\n            icon={<FlagIcon />}\r\n            onClick={onClick}\r\n        />\r\n    );\r\n\r\n    const content = (\r\n        <SingleChoiceList\r\n            onLoad={async () => [\r\n                'Sexual content',\r\n                'Violent or repulsive content',\r\n                'Hateful or abusive content',\r\n                'Harmful or dangerous acts',\r\n                'Spam or misleading'\r\n            ]}\r\n            fromModelToProps={(reason: string) => ({\r\n                label: reason,\r\n                value: reason\r\n            })}\r\n        />\r\n    );\r\n\r\n    const renderActions: DialogTriggerProps['renderActions'] = onClose => (\r\n        <>\r\n            <Button onClick={onClose}>\r\n                Cancel\r\n            </Button>\r\n            <Button\r\n                color=\"secondary\"\r\n                onClick={onClose}\r\n            >\r\n                Report\r\n            </Button>\r\n        </>\r\n    );\r\n\r\n    return (\r\n        <DialogTrigger\r\n            title={title}\r\n            content={content}\r\n            renderTrigger={renderTrigger}\r\n            renderActions={renderActions}\r\n        />\r\n    )\r\n}\r\n\r\nexport default ReportListItem;\r\n"],"sourceRoot":""}